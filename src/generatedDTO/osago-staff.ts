/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/v1/aes/decrypt/base64": {
    post: {
      parameters: {
        query?: {
          id?: string;
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/aes/encrypt/base64": {
    post: {
      parameters: {
        query?: {
          id?: string;
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/agents/orders-obsolete": {
    get: {
      parameters: {
        query?: {
          /** @description От даты (включительно). */
          DateFrom?: string;
          /** @description До даты (включительно). */
          DateTo?: string;
          /** @description Если true, то для фильтрации по DateFrom и DateTo используется дата начала действия полиса */
          UsePolicyStartDate?: boolean;
          /** @description Id пользователя рефера заказы реферальных пользователей которого необходимо получить */
          ReferId?: number;
          /** @description Партнерские источник. */
          Source?: string;
          /** @description Имя клиента. */
          UserName?: string;
          /** @description Роут субагента. */
          SubAgentRoute?: string;
          /** @description Роут субагента подчиненного субагенту SubAgentRoute. */
          SubSubAgentRoute?: string;
          /** @description Статус акцептации заказа. */
          IsAccepted?: boolean;
          /** @description Тип продукта */
          Product?: components["schemas"]["Sravni.Osago.Agentka.OrderProductType"];
          /** @description Сколько пропустить записей. */
          Skip?: number;
          /** @description Сколько взять записей. */
          Take?: number;
          /** @description Список Id полисов */
          Ids?: number[];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.ResultModel`1[[Sravni.Osago.Agentka.OrderDto, Sravni.Osago.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Sravni.Osago.ResultModel`1[[Sravni.Osago.Agentka.OrderDto, Sravni.Osago.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Sravni.Osago.ResultModel`1[[Sravni.Osago.Agentka.OrderDto, Sravni.Osago.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/analytics/regNumber/markers": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.RegNumberMarkerDto"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.RegNumberMarkerDto"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.RegNumberMarkerDto"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.RegNumberMarkerDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/analytics/events": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.UserEventDto"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.UserEventDto"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.UserEventDto"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.UserEventDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/analytics/companyRequest": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.OsagoCompanyRequestDto"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.OsagoCompanyRequestDto"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.OsagoCompanyRequestDto"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.OsagoCompanyRequestDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/calculate/{id}/kbm": {
    get: {
      parameters: {
        query?: {
          productId?: number;
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/osago/send-sms-calc-link": {
    get: {
      parameters: {
        query?: {
          orderHash?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/osago/send-push-sms": {
    get: {
      parameters: {
        query?: {
          id?: number;
          hash?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/osago/early-leads/{id}/sms": {
    get: {
      parameters: {
        query?: {
          queryId?: number;
          queryHash?: string;
          utm_source?: string;
          utm_medium?: string;
          utm_campaign?: string;
          utm_content?: string;
          utm_term?: string;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/osago/send-osago-sms": {
    get: {
      parameters: {
        query?: {
          phone?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/osago/send-manual-sms": {
    get: {
      parameters: {
        query?: {
          id?: number;
          hash?: string;
          phone?: string;
          utm_source?: string;
          utm_medium?: string;
          utm_campaign?: string;
          utm_content?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/osago/send-prolong-sms": {
    get: {
      parameters: {
        query?: {
          hash?: string;
          utm_source?: string;
          utm_medium?: string;
          utm_campaign?: string;
          utm_content?: string;
          type?: string;
          customer?: string;
          target?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/callcenter/info": {
    get: {
      parameters: {
        query?: {
          phone?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[Sravni.Osago.Shared.Dto.Dto.Order.InfoModelByPhoneNumberModel, Sravni.Osago.Shared.Dto, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[Sravni.Osago.Shared.Dto.Dto.Order.InfoModelByPhoneNumberModel, Sravni.Osago.Shared.Dto, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[Sravni.Osago.Shared.Dto.Dto.Order.InfoModelByPhoneNumberModel, Sravni.Osago.Shared.Dto, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/communication": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.Communication.UserCommunicationDto"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Communication.UserCommunicationDto"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Communication.UserCommunicationDto"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.Communication.UserCommunicationDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/addressSpecificCommunication": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.Communication.UserCommunicationWithAddressDto"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Communication.UserCommunicationWithAddressDto"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Communication.UserCommunicationWithAddressDto"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.Communication.UserCommunicationWithAddressDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/payurl/order/{orderHash}": {
    get: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.RedirectLink"];
            "application/json": components["schemas"]["Sravni.Osago.RedirectLink"];
            "text/json": components["schemas"]["Sravni.Osago.RedirectLink"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/payurl/orderForTrash/{orderHash}": {
    get: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.RedirectLink"];
            "application/json": components["schemas"]["Sravni.Osago.RedirectLink"];
            "text/json": components["schemas"]["Sravni.Osago.RedirectLink"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/communicationInfo": {
    get: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.OrderCommunicationInfo"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.OrderCommunicationInfo"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.OrderCommunicationInfo"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{hash}/reemail": {
    post: {
      parameters: {
        query?: {
          orderHash?: string;
        };
        path: {
          hash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/payurl/order/{orderHash}/sms": {
    post: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.SendPaymentUrlResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.SendPaymentUrlResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.SendPaymentUrlResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/communication/{entity}/{entityId}": {
    post: {
      parameters: {
        path: {
          entity: string;
          entityId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.SendCommunicationRequest"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.SendCommunicationRequest"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.SendCommunicationRequest"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.SendCommunicationRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Api.SendCommunicationResult"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.SendCommunicationResult"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.SendCommunicationResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/communication/sendPolicyByPhone": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.SendPolicyByPhoneCommand"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.SendPolicyByPhoneCommand"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.SendPolicyByPhoneCommand"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.SendPolicyByPhoneCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/communication/sendThankYouSmsByPhone": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.SendPolicyByPhoneCommand"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.SendPolicyByPhoneCommand"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.SendPolicyByPhoneCommand"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.SendPolicyByPhoneCommand"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/orders/{orderHash}/egarant": {
    get: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.EgarantResult"];
            "application/json": components["schemas"]["Sravni.Osago.EgarantResult"];
            "text/json": components["schemas"]["Sravni.Osago.EgarantResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/orders/{orderHash}/egarant/check": {
    get: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.EgarantValidationResult"];
            "application/json": components["schemas"]["Sravni.Osago.EgarantValidationResult"];
            "text/json": components["schemas"]["Sravni.Osago.EgarantValidationResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/orders/{orderHash}/egarant/check/limit": {
    get: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.EgarantValidationResult"];
            "application/json": components["schemas"]["Sravni.Osago.EgarantValidationResult"];
            "text/json": components["schemas"]["Sravni.Osago.EgarantValidationResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/errors/error-rule": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRuleModel"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRuleModel"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRuleModel"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRuleModel"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.CreateErrorModelResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.CreateErrorModelResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.CreateErrorModelResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
    patch: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRuleModel"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRuleModel"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRuleModel"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRuleModel"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.UpdateErrorModelResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.UpdateErrorModelResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.UpdateErrorModelResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/errors/error-rule/{hash}": {
    get: {
      parameters: {
        path: {
          hash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRuleResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRuleResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRuleResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          hash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.DeleteErrorModelResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.DeleteErrorModelResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.DeleteErrorModelResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/errors/error-rules": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRulePageQuery"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRulePageQuery"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRulePageQuery"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRulePageQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRulesResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRulesResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRulesResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/errors/sravni-error": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorModel"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorModel"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorModel"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorModel"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.CreateErrorModelResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.CreateErrorModelResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.CreateErrorModelResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
    patch: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorModel"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorModel"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorModel"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorModel"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.CreateErrorModelResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.CreateErrorModelResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.CreateErrorModelResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/errors/sravni-error/{hash}": {
    get: {
      parameters: {
        path: {
          hash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          hash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.DeleteErrorModelResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.DeleteErrorModelResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.DeleteErrorModelResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/errors/errors-group": {
    get: {
      parameters: {
        query?: {
          "InformationQuery.Name"?: string;
          PageIndex?: number;
          PageSize?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupsResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupsResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupsResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupModel"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupModel"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupModel"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupModel"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.CreateErrorsGroupModelResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.CreateErrorsGroupModelResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.CreateErrorsGroupModelResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/errors/errors-group/{groupId}": {
    get: {
      parameters: {
        path: {
          groupId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          groupId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.DeleteErrorsGroupModelResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.DeleteErrorsGroupModelResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.DeleteErrorsGroupModelResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
    patch: {
      parameters: {
        path: {
          groupId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupUpdateRequest"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupUpdateRequest"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupUpdateRequest"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupUpdateRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.UpdateErrorsGroupModelResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.UpdateErrorsGroupModelResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.UpdateErrorsGroupModelResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/errors/sravni-errors": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorsResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorsResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorsResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniPageErrorQuery"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniPageErrorQuery"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniPageErrorQuery"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniPageErrorQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorsResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorsResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorsResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/errors/insurance-companies": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.InsuranceCompany"][];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.InsuranceCompany"][];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.InsuranceCompany"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/errors/osago-insurance-companies": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.InsuranceCompany"][];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.InsuranceCompany"][];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.InsuranceCompany"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/errors/telegram": {
    post: {
      requestBody?: {
        content: {
          "multipart/form-data": {
            /** Format: binary */
            file?: string;
          };
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.InsuranceCompany"][];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.InsuranceCompany"][];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.InsuranceCompany"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/companyVehicles/{companyId}/brands": {
    get: {
      parameters: {
        path: {
          companyId: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Api.CompanyVehicles"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.CompanyVehicles"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.CompanyVehicles"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/companyVehicles/{companyId}/brands/{brandName}": {
    get: {
      parameters: {
        path: {
          companyId: number;
          brandName: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Api.CompanyVehicles"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.CompanyVehicles"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.CompanyVehicles"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/loyalty/invite": {
    post: {
      parameters: {
        query?: {
          userId?: number;
          source?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoPromo.MessageBroker.Service.LoyaltyInviteResult"];
            "application/json": components["schemas"]["Sravni.OsagoPromo.MessageBroker.Service.LoyaltyInviteResult"];
            "text/json": components["schemas"]["Sravni.OsagoPromo.MessageBroker.Service.LoyaltyInviteResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/coefficients/kbm": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.OsagoStaff.Service.MockCoeffiсientsController+Driver"];
          "application/json": components["schemas"]["Sravni.OsagoStaff.Service.MockCoeffiсientsController+Driver"];
          "text/json": components["schemas"]["Sravni.OsagoStaff.Service.MockCoeffiсientsController+Driver"];
          "application/*+json": components["schemas"]["Sravni.OsagoStaff.Service.MockCoeffiсientsController+Driver"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoStaff.Service.MockCoeffiсientsController+Kbm"];
            "application/json": components["schemas"]["Sravni.OsagoStaff.Service.MockCoeffiсientsController+Kbm"];
            "text/json": components["schemas"]["Sravni.OsagoStaff.Service.MockCoeffiсientsController+Kbm"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/coefficients": {
    post: {
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.OsagoStaff.Service.MockCoeffiсientsController+CoefficientsRequest"];
          "application/json": components["schemas"]["Sravni.OsagoStaff.Service.MockCoeffiсientsController+CoefficientsRequest"];
          "text/json": components["schemas"]["Sravni.OsagoStaff.Service.MockCoeffiсientsController+CoefficientsRequest"];
          "application/*+json": components["schemas"]["Sravni.OsagoStaff.Service.MockCoeffiсientsController+CoefficientsRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoStaff.Service.MockCoeffiсientsController+Coefficients"];
            "application/json": components["schemas"]["Sravni.OsagoStaff.Service.MockCoeffiсientsController+Coefficients"];
            "text/json": components["schemas"]["Sravni.OsagoStaff.Service.MockCoeffiсientsController+Coefficients"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/lastOrders": {
    get: {
      parameters: {
        query?: {
          updatedAfter?: string;
          onlyAccepted?: boolean;
          count?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": string[];
            "application/json": string[];
            "text/json": string[];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/policyinfo": {
    post: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Order.OrderPolicyLoadInfoDto"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Order.OrderPolicyLoadInfoDto"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Order.OrderPolicyLoadInfoDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/checktermination": {
    post: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.CheckTerminationResult"];
            "application/json": components["schemas"]["Sravni.Osago.CheckTerminationResult"];
            "text/json": components["schemas"]["Sravni.Osago.CheckTerminationResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/termination": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.TerminationRequest"];
          "application/json": components["schemas"]["Sravni.Osago.TerminationRequest"];
          "text/json": components["schemas"]["Sravni.Osago.TerminationRequest"];
          "application/*+json": components["schemas"]["Sravni.Osago.TerminationRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.OrderModificationResponse"];
            "application/json": components["schemas"]["Sravni.Osago.OrderModificationResponse"];
            "text/json": components["schemas"]["Sravni.Osago.OrderModificationResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/pretermination/contacts": {
    post: {
      requestBody?: {
        content: {
          "multipart/form-data": {
            /** Format: binary */
            file?: string;
          };
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/correction": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.CorrectionRequest"];
          "application/json": components["schemas"]["Sravni.Osago.CorrectionRequest"];
          "text/json": components["schemas"]["Sravni.Osago.CorrectionRequest"];
          "application/*+json": components["schemas"]["Sravni.Osago.CorrectionRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.OrderModificationResponse"];
            "application/json": components["schemas"]["Sravni.Osago.OrderModificationResponse"];
            "text/json": components["schemas"]["Sravni.Osago.OrderModificationResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/loadPolicy": {
    post: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/successInfo": {
    post: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Order.OrderSuccessInfoDto"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Order.OrderSuccessInfoDto"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Order.OrderSuccessInfoDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/offers": {
    get: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.AdditionalOfferDto"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.AdditionalOfferDto"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.AdditionalOfferDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
    patch: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.AdditionalOfferAnswerDto"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.AdditionalOfferAnswerDto"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.AdditionalOfferAnswerDto"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.AdditionalOfferAnswerDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/inflight/contacts": {
    patch: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.ContactInfo"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.ContactInfo"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.ContactInfo"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.ContactInfo"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Api.InflightResult"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.InflightResult"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.InflightResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/offers/casco": {
    post: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/life-cycle-events": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Events.OrderLifeCycleEvent"];
          "application/json": components["schemas"]["Sravni.Osago.Events.OrderLifeCycleEvent"];
          "text/json": components["schemas"]["Sravni.Osago.Events.OrderLifeCycleEvent"];
          "application/*+json": components["schemas"]["Sravni.Osago.Events.OrderLifeCycleEvent"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/communication/life-cycle-events": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Events.OrderCommunicationLifeCycleEvent"];
          "application/json": components["schemas"]["Sravni.Osago.Events.OrderCommunicationLifeCycleEvent"];
          "text/json": components["schemas"]["Sravni.Osago.Events.OrderCommunicationLifeCycleEvent"];
          "application/*+json": components["schemas"]["Sravni.Osago.Events.OrderCommunicationLifeCycleEvent"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/osago/prolongation": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.ProlongationRequestModel"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.ProlongationRequestModel"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.ProlongationRequestModel"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.ProlongationRequestModel"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.ProlongationOrderModel"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.ProlongationOrderModel"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.ProlongationOrderModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/spoil": {
    post: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/assignUserId": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Dto.OrderHashUserIdPair"];
          "application/json": components["schemas"]["Sravni.Osago.Dto.OrderHashUserIdPair"];
          "text/json": components["schemas"]["Sravni.Osago.Dto.OrderHashUserIdPair"];
          "application/*+json": components["schemas"]["Sravni.Osago.Dto.OrderHashUserIdPair"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/sync-with-dima": {
    post: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/upsale-to-dima": {
    post: {
      parameters: {
        query?: {
          userId?: number;
        };
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/lastorderbyphone": {
    get: {
      parameters: {
        query?: {
          phone?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[Sravni.Osago.Shared.Dto.Dto.Order.LastOrderModel, Sravni.Osago.Shared.Dto, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[Sravni.Osago.Shared.Dto.Dto.Order.LastOrderModel, Sravni.Osago.Shared.Dto, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[Sravni.Osago.Shared.Dto.Dto.Order.LastOrderModel, Sravni.Osago.Shared.Dto, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/print": {
    get: {
      parameters: {
        query?: {
          getPolicy?: boolean;
        };
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Print.PrintResult"];
            "application/json": components["schemas"]["Sravni.Osago.Print.PrintResult"];
            "text/json": components["schemas"]["Sravni.Osago.Print.PrintResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/confirmPayment": {
    post: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.ConfirmPayment.ConfirmPaymentQuery"];
          "application/json": components["schemas"]["Sravni.Osago.ConfirmPayment.ConfirmPaymentQuery"];
          "text/json": components["schemas"]["Sravni.Osago.ConfirmPayment.ConfirmPaymentQuery"];
          "application/*+json": components["schemas"]["Sravni.Osago.ConfirmPayment.ConfirmPaymentQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.ConfirmPayment.ConfirmPaymentResult"];
            "application/json": components["schemas"]["Sravni.Osago.ConfirmPayment.ConfirmPaymentResult"];
            "text/json": components["schemas"]["Sravni.Osago.ConfirmPayment.ConfirmPaymentResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/rejectPayment": {
    post: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.BoolResult"];
            "application/json": components["schemas"]["Sravni.Osago.BoolResult"];
            "text/json": components["schemas"]["Sravni.Osago.BoolResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/info": {
    get: {
      parameters: {
        query?: {
          force?: boolean;
        };
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.OrdersInfoResult"];
            "application/json": components["schemas"]["Sravni.Osago.OrdersInfoResult"];
            "text/json": components["schemas"]["Sravni.Osago.OrdersInfoResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/tehinfo": {
    get: {
      parameters: {
        query?: {
          ignoreLastDnd?: boolean;
        };
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.OrderTehInfoResult"];
            "application/json": components["schemas"]["Sravni.Osago.OrderTehInfoResult"];
            "text/json": components["schemas"]["Sravni.Osago.OrderTehInfoResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/urls": {
    get: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.RedirectLink"];
            "application/json": components["schemas"]["Sravni.Osago.RedirectLink"];
            "text/json": components["schemas"]["Sravni.Osago.RedirectLink"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/correctable-errors": {
    get: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{id}": {
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.OsagoOrderPatchDto"];
          "application/json": components["schemas"]["Sravni.Osago.OsagoOrderPatchDto"];
          "text/json": components["schemas"]["Sravni.Osago.OsagoOrderPatchDto"];
          "application/*+json": components["schemas"]["Sravni.Osago.OsagoOrderPatchDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/clear-cache": {
    post: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/for-check": {
    get: {
      parameters: {
        query?: {
          starthours?: number;
          endhours?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.OrderHashCompanyDto"][];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.OrderHashCompanyDto"][];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.OrderHashCompanyDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/policydrafts": {
    get: {
      parameters: {
        query?: {
          force?: boolean;
        };
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.PolicyDraftsResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.PolicyDraftsResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.PolicyDraftsResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/policyblank": {
    get: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/orders/{orderHash}/blacklist": {
    post: {
      parameters: {
        query?: {
          companyId?: number;
        };
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/policy-to-parser": {
    post: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/recommendedstartdate/{number}": {
    /** @deprecated */
    get: {
      parameters: {
        query?: {
          Medium?: string;
          Source?: string;
          Campaign?: string;
          Content?: string;
          Term?: string;
          UAClientId?: string;
          YMClientId?: string;
        };
        path: {
          number: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.RecommendedStartDateDto"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.RecommendedStartDateDto"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.RecommendedStartDateDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/link-order-benefitcode": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Dto.Orders.LinkOrderBenefitRequestModel"];
          "application/json": components["schemas"]["Sravni.Osago.Dto.Orders.LinkOrderBenefitRequestModel"];
          "text/json": components["schemas"]["Sravni.Osago.Dto.Orders.LinkOrderBenefitRequestModel"];
          "application/*+json": components["schemas"]["Sravni.Osago.Dto.Orders.LinkOrderBenefitRequestModel"];
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/link-orders-benefitcode-and-sync-with-dima": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Dto.Orders.LinkOrdersBenefitCodeAndSyncWithDima"];
          "application/json": components["schemas"]["Sravni.Osago.Dto.Orders.LinkOrdersBenefitCodeAndSyncWithDima"];
          "text/json": components["schemas"]["Sravni.Osago.Dto.Orders.LinkOrdersBenefitCodeAndSyncWithDima"];
          "application/*+json": components["schemas"]["Sravni.Osago.Dto.Orders.LinkOrdersBenefitCodeAndSyncWithDima"];
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/remove-trash": {
    post: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/email": {
    get: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Microsoft.AspNetCore.Mvc.ProblemDetails"];
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.ProblemDetails"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.ProblemDetails"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/redirect": {
    /** @deprecated */
    post: {
      parameters: {
        query?: {
          town?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.OsagoQuery"];
          "application/json": components["schemas"]["Sravni.Osago.OsagoQuery"];
          "text/json": components["schemas"]["Sravni.Osago.OsagoQuery"];
          "application/*+json": components["schemas"]["Sravni.Osago.OsagoQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/minmaxprices": {
    get: {
      parameters: {
        query?: {
          locationRoute?: string;
          insuranceCompanyId?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.MinMaxPricesResult"];
            "application/json": components["schemas"]["Sravni.Osago.MinMaxPricesResult"];
            "text/json": components["schemas"]["Sravni.Osago.MinMaxPricesResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/partners": {
    get: {
      parameters: {
        query?: {
          locationRoute?: string;
          viewType?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Product"][];
            "application/json": components["schemas"]["Sravni.Osago.Product"][];
            "text/json": components["schemas"]["Sravni.Osago.Product"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/offers/location-routes": {
    get: {
      parameters: {
        query?: {
          organizationId?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": string[];
            "application/json": string[];
            "text/json": string[];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/osago/send-calc-link": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.SendCalcLinkRequest"];
          "application/json": components["schemas"]["Sravni.Osago.SendCalcLinkRequest"];
          "text/json": components["schemas"]["Sravni.Osago.SendCalcLinkRequest"];
          "application/*+json": components["schemas"]["Sravni.Osago.SendCalcLinkRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/osago/send-calc-link-updated": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.SendCalcLinkRequest"];
          "application/json": components["schemas"]["Sravni.Osago.SendCalcLinkRequest"];
          "text/json": components["schemas"]["Sravni.Osago.SendCalcLinkRequest"];
          "application/*+json": components["schemas"]["Sravni.Osago.SendCalcLinkRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/osago/send-calc-link-updated-sms": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.SendCalcLinkViaSmsRequest"];
          "application/json": components["schemas"]["Sravni.Osago.SendCalcLinkViaSmsRequest"];
          "text/json": components["schemas"]["Sravni.Osago.SendCalcLinkViaSmsRequest"];
          "application/*+json": components["schemas"]["Sravni.Osago.SendCalcLinkViaSmsRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/osago/send-calc-link-updated-whatsapp": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.SendCalcLinkViaSmsRequest"];
          "application/json": components["schemas"]["Sravni.Osago.SendCalcLinkViaSmsRequest"];
          "text/json": components["schemas"]["Sravni.Osago.SendCalcLinkViaSmsRequest"];
          "application/*+json": components["schemas"]["Sravni.Osago.SendCalcLinkViaSmsRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/jobInfo": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.JobExecutionInfoDto"];
          "application/json": components["schemas"]["Sravni.Osago.JobExecutionInfoDto"];
          "text/json": components["schemas"]["Sravni.Osago.JobExecutionInfoDto"];
          "application/*+json": components["schemas"]["Sravni.Osago.JobExecutionInfoDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/ccstatus": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.CallCenterStatusDto"];
          "application/json": components["schemas"]["Sravni.Osago.CallCenterStatusDto"];
          "text/json": components["schemas"]["Sravni.Osago.CallCenterStatusDto"];
          "application/*+json": components["schemas"]["Sravni.Osago.CallCenterStatusDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/phone/{phone}/ccstatus/{date}": {
    get: {
      parameters: {
        path: {
          phone: string;
          date: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.PhoneCallCenterStatus"];
            "application/json": components["schemas"]["Sravni.Osago.PhoneCallCenterStatus"];
            "text/json": components["schemas"]["Sravni.Osago.PhoneCallCenterStatus"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/summary": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.OsagoQuery"];
          "application/json": components["schemas"]["Sravni.Osago.OsagoQuery"];
          "text/json": components["schemas"]["Sravni.Osago.OsagoQuery"];
          "application/*+json": components["schemas"]["Sravni.Osago.OsagoQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/agentcommission": {
    get: {
      parameters: {
        query?: {
          dateFrom?: string;
          dateTo?: string;
          companyId?: number;
          route?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Data.OsagoAgentCommission"][];
            "application/json": components["schemas"]["Sravni.Osago.Data.OsagoAgentCommission"][];
            "text/json": components["schemas"]["Sravni.Osago.Data.OsagoAgentCommission"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/commission/prolongation": {
    get: {
      parameters: {
        query?: {
          dateFrom?: string;
          dateTo?: string;
          companyId?: number;
          route?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.OsagoProlongationCommissionDto"][];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.OsagoProlongationCommissionDto"][];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.OsagoProlongationCommissionDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/osago/funnel-step": {
    put: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.FunnelStepInfo"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.FunnelStepInfo"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.FunnelStepInfo"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.FunnelStepInfo"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/early-leads": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.OsagoEarlyLeadQuery"];
          "application/json": components["schemas"]["Sravni.Osago.OsagoEarlyLeadQuery"];
          "text/json": components["schemas"]["Sravni.Osago.OsagoEarlyLeadQuery"];
          "application/*+json": components["schemas"]["Sravni.Osago.OsagoEarlyLeadQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Guid, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Guid, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Guid, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/osago/vehicle": {
    get: {
      parameters: {
        query?: {
          DateFrom?: string;
          DateTo?: string;
          RegNumber?: string;
          Vin?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.OsagoVehicleInfoResult"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.OsagoVehicleInfoResult"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.OsagoVehicleInfoResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/early-leads/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.OsagoEarlyLeadQuery"];
            "application/json": components["schemas"]["Sravni.Osago.OsagoEarlyLeadQuery"];
            "text/json": components["schemas"]["Sravni.Osago.OsagoEarlyLeadQuery"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/osago/searchUrl": {
    get: {
      parameters: {
        query?: {
          searchId?: number;
          queryHash?: string;
          utmSource?: string;
          utmMedium?: string;
          utmCampaign?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/osago/prolongationUrl": {
    get: {
      parameters: {
        query?: {
          saveResultHash?: string;
          utmSource?: string;
          utmMedium?: string;
          utmCampaign?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/companies/{companyId}/cars": {
    get: {
      parameters: {
        query?: {
          hash?: string;
        };
        path: {
          companyId: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.CarsLoadingResult"];
            "application/json": components["schemas"]["Sravni.Osago.CarsLoadingResult"];
            "text/json": components["schemas"]["Sravni.Osago.CarsLoadingResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/statistics/{companyId}": {
    get: {
      parameters: {
        path: {
          companyId: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.CompanyStatistics"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.CompanyStatistics"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.CompanyStatistics"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/companies/salesstat": {
    get: {
      parameters: {
        query?: {
          route?: string;
          dateFrom?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.CompanySales"][];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.CompanySales"][];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.CompanySales"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/recommendedstartdate": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Dto.RecommendedStartDateRequestModel"];
          "application/json": components["schemas"]["Sravni.Osago.Dto.RecommendedStartDateRequestModel"];
          "text/json": components["schemas"]["Sravni.Osago.Dto.RecommendedStartDateRequestModel"];
          "application/*+json": components["schemas"]["Sravni.Osago.Dto.RecommendedStartDateRequestModel"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.RecommendedStartDateDto"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.RecommendedStartDateDto"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.RecommendedStartDateDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/before-last-info": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Dto.ParserBeforeLastInfoRequestModel"];
          "application/json": components["schemas"]["Sravni.Osago.Dto.ParserBeforeLastInfoRequestModel"];
          "text/json": components["schemas"]["Sravni.Osago.Dto.ParserBeforeLastInfoRequestModel"];
          "application/*+json": components["schemas"]["Sravni.Osago.Dto.ParserBeforeLastInfoRequestModel"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.PreviousPolicy"];
            "application/json": components["schemas"]["Sravni.Osago.PreviousPolicy"];
            "text/json": components["schemas"]["Sravni.Osago.PreviousPolicy"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/orders-for-check": {
    get: {
      parameters: {
        query?: {
          starthours?: number;
          endhours?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.OrderHashCompanyDto"][];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.OrderHashCompanyDto"][];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.OrderHashCompanyDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/prolongation/userInfo": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationUserCheckData"];
          "application/json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationUserCheckData"];
          "text/json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationUserCheckData"];
          "application/*+json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationUserCheckData"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Prolongation.ProlongationUserInfo"];
            "application/json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationUserInfo"];
            "text/json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationUserInfo"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/prolongation-orders/{date}/queries": {
    get: {
      parameters: {
        query?: {
          page?: number;
          needUserPhone?: boolean;
        };
        path: {
          date: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.ExtendedOsagoQueryResult"];
            "application/json": components["schemas"]["Sravni.Osago.ExtendedOsagoQueryResult"];
            "text/json": components["schemas"]["Sravni.Osago.ExtendedOsagoQueryResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/prolongation/queries_by_orders": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.Order.ProlongationOrderLightDto"][];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Order.ProlongationOrderLightDto"][];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Order.ProlongationOrderLightDto"][];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.Order.ProlongationOrderLightDto"][];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.ExtendedOsagoQuery"][];
            "application/json": components["schemas"]["Sravni.Osago.ExtendedOsagoQuery"][];
            "text/json": components["schemas"]["Sravni.Osago.ExtendedOsagoQuery"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/modify-order": {
    post: {
      parameters: {
        query?: {
          orderId?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.ModifyOrderResponse"];
            "application/json": components["schemas"]["Sravni.Osago.ModifyOrderResponse"];
            "text/json": components["schemas"]["Sravni.Osago.ModifyOrderResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/prolongation/{regNumber}/key": {
    /** @deprecated */
    get: {
      parameters: {
        query?: {
          Medium?: string;
          Source?: string;
          Campaign?: string;
          Content?: string;
          Term?: string;
          UAClientId?: string;
          YMClientId?: string;
        };
        path: {
          regNumber: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/prolongation/keys": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationKeyRequest"];
          "application/json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationKeyRequest"];
          "text/json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationKeyRequest"];
          "application/*+json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationKeyRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Prolongation.ProlongationKeyResult"];
            "application/json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationKeyResult"];
            "text/json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationKeyResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/prolongation-by-policy": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationInfoByPolicyRequest"];
          "application/json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationInfoByPolicyRequest"];
          "text/json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationInfoByPolicyRequest"];
          "application/*+json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationInfoByPolicyRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Prolongation.ProlongationInfoByPolicyResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationInfoByPolicyResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationInfoByPolicyResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/shortprolongations": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.OsagoProlongationQuery"];
          "application/json": components["schemas"]["Sravni.Osago.OsagoProlongationQuery"];
          "text/json": components["schemas"]["Sravni.Osago.OsagoProlongationQuery"];
          "application/*+json": components["schemas"]["Sravni.Osago.OsagoProlongationQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Data.OsagoOrder"];
            "application/json": components["schemas"]["Sravni.Osago.Data.OsagoOrder"];
            "text/json": components["schemas"]["Sravni.Osago.Data.OsagoOrder"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/prolongationpolicydata": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.OsagoProlongationQuery"];
          "application/json": components["schemas"]["Sravni.Osago.OsagoProlongationQuery"];
          "text/json": components["schemas"]["Sravni.Osago.OsagoProlongationQuery"];
          "application/*+json": components["schemas"]["Sravni.Osago.OsagoProlongationQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.OsagoQuery"];
            "application/json": components["schemas"]["Sravni.Osago.OsagoQuery"];
            "text/json": components["schemas"]["Sravni.Osago.OsagoQuery"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/prolongation/search": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.ProlongationRequestModel"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.ProlongationRequestModel"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.ProlongationRequestModel"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.ProlongationRequestModel"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.ProlongationOrderModel"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.ProlongationOrderModel"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.ProlongationOrderModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/prolongation/query": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationUserCheckData"];
          "application/json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationUserCheckData"];
          "text/json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationUserCheckData"];
          "application/*+json": components["schemas"]["Sravni.Osago.Prolongation.ProlongationUserCheckData"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.OsagoQuery"];
            "application/json": components["schemas"]["Sravni.Osago.OsagoQuery"];
            "text/json": components["schemas"]["Sravni.Osago.OsagoQuery"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/users/{userId}/prolongations": {
    get: {
      parameters: {
        query?: {
          date?: string;
        };
        path: {
          userId: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Mobile.UserProlongationListItemDto"][];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Mobile.UserProlongationListItemDto"][];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Mobile.UserProlongationListItemDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/users/{userId}/prolongations/{hash}": {
    get: {
      parameters: {
        path: {
          userId: number;
          hash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Mobile.UserProlongationDto"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Mobile.UserProlongationDto"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Mobile.UserProlongationDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{hash}/prolongation-query": {
    post: {
      parameters: {
        path: {
          hash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.SaveQueryResult"];
            "application/json": components["schemas"]["Sravni.Osago.SaveQueryResult"];
            "text/json": components["schemas"]["Sravni.Osago.SaveQueryResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/previouspolicy/{carNumber}": {
    get: {
      parameters: {
        query?: {
          Medium?: string;
          Source?: string;
          Campaign?: string;
          Content?: string;
          Term?: string;
          UAClientId?: string;
          YMClientId?: string;
        };
        path: {
          carNumber: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.PreviousPolicy"];
            "application/json": components["schemas"]["Sravni.Osago.PreviousPolicy"];
            "text/json": components["schemas"]["Sravni.Osago.PreviousPolicy"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/comparewithpreviouspolicy": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Dto.Prolongation.PreviousPolicyRequestModel"];
          "application/json": components["schemas"]["Sravni.Osago.Dto.Prolongation.PreviousPolicyRequestModel"];
          "text/json": components["schemas"]["Sravni.Osago.Dto.Prolongation.PreviousPolicyRequestModel"];
          "application/*+json": components["schemas"]["Sravni.Osago.Dto.Prolongation.PreviousPolicyRequestModel"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.Prolongation.ComparePreviousPolicyModel"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.Prolongation.ComparePreviousPolicyModel"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.Prolongation.ComparePreviousPolicyModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/promoprograms": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.PromoProgramDto"][];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.PromoProgramDto"][];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.PromoProgramDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/calculate/{calcId}/promo": {
    get: {
      parameters: {
        query?: {
          productId?: number;
        };
        path: {
          calcId: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.PromoProgramDto"][];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.PromoProgramDto"][];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.PromoProgramDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/promo": {
    get: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.PromoProgramDto"][];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.PromoProgramDto"][];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.PromoProgramDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/promo/link": {
    post: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.LoadPromoOptions"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.LoadPromoOptions"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.LoadPromoOptions"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.LoadPromoOptions"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Order.LoadFileResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Order.LoadFileResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Order.LoadFileResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/promo/message": {
    get: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Communication.UserCommunicationDto"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Communication.UserCommunicationDto"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Communication.UserCommunicationDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/benefit/show": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.OsagoQuery"];
          "application/json": components["schemas"]["Sravni.Osago.OsagoQuery"];
          "text/json": components["schemas"]["Sravni.Osago.OsagoQuery"];
          "application/*+json": components["schemas"]["Sravni.Osago.OsagoQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.ShowPromoDto"];
            "application/json": components["schemas"]["Sravni.Osago.ShowPromoDto"];
            "text/json": components["schemas"]["Sravni.Osago.ShowPromoDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/save-query": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.OsagoQueryWithBrandModel"];
          "application/json": components["schemas"]["Sravni.Osago.OsagoQueryWithBrandModel"];
          "text/json": components["schemas"]["Sravni.Osago.OsagoQueryWithBrandModel"];
          "application/*+json": components["schemas"]["Sravni.Osago.OsagoQueryWithBrandModel"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.SaveQueryResult"];
            "application/json": components["schemas"]["Sravni.Osago.SaveQueryResult"];
            "text/json": components["schemas"]["Sravni.Osago.SaveQueryResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/saved-queries/{id}/{hash}": {
    get: {
      parameters: {
        query?: {
          withRecommendedStartDate?: boolean;
        };
        path: {
          id: number;
          hash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.OsagoQuery"];
            "application/json": components["schemas"]["Sravni.Osago.OsagoQuery"];
            "text/json": components["schemas"]["Sravni.Osago.OsagoQuery"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/queries/{id}": {
    get: {
      parameters: {
        query?: {
          withRecommendedStartDate?: boolean;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.OsagoQuery"];
            "application/json": components["schemas"]["Sravni.Osago.OsagoQuery"];
            "text/json": components["schemas"]["Sravni.Osago.OsagoQuery"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/queries-by-hash/{hash}": {
    get: {
      parameters: {
        query?: {
          withRecommendedStartDate?: boolean;
        };
        path: {
          hash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.OsagoQuery"];
            "application/json": components["schemas"]["Sravni.Osago.OsagoQuery"];
            "text/json": components["schemas"]["Sravni.Osago.OsagoQuery"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/queries/policydrafts": {
    post: {
      parameters: {
        query?: {
          companyId?: number;
          force?: boolean;
        };
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.OsagoQuery"];
          "application/json": components["schemas"]["Sravni.Osago.OsagoQuery"];
          "text/json": components["schemas"]["Sravni.Osago.OsagoQuery"];
          "application/*+json": components["schemas"]["Sravni.Osago.OsagoQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.PolicyDraftsResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.PolicyDraftsResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.PolicyDraftsResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/queries/osago-coeffs": {
    get: {
      parameters: {
        query?: {
          searchId?: number;
          osagoId?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.OsagoCoeffs"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.OsagoCoeffs"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.OsagoCoeffs"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/order/{orderHash}/queries": {
    get: {
      parameters: {
        query?: {
          dropLastName?: boolean;
          ignoreLastDnd?: boolean;
        };
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.OsagoQueryViewModel"];
            "application/json": components["schemas"]["Sravni.Osago.OsagoQueryViewModel"];
            "text/json": components["schemas"]["Sravni.Osago.OsagoQueryViewModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/reports/orders": {
    get: {
      parameters: {
        query?: {
          encryptId?: string;
          partnerId?: number;
          dateFrom?: string;
          dateTo?: string;
          subId?: string;
          affSub3?: string;
          affSub4?: string;
          affSub5?: string;
          isAccepted?: boolean;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Partners.PartnerOsagoOrderResult"][];
            "application/json": components["schemas"]["Sravni.Osago.Partners.PartnerOsagoOrderResult"][];
            "text/json": components["schemas"]["Sravni.Osago.Partners.PartnerOsagoOrderResult"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/agent/orders": {
    get: {
      parameters: {
        query?: {
          encryptId?: string;
          partnerId?: number;
          dateFrom?: string;
          dateTo?: string;
          subId?: string;
          affSub3?: string;
          affSub4?: string;
          affSub5?: string;
          isAccepted?: boolean;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Partners.PartnerOsagoOrderResult"][];
            "application/json": components["schemas"]["Sravni.Osago.Partners.PartnerOsagoOrderResult"][];
            "text/json": components["schemas"]["Sravni.Osago.Partners.PartnerOsagoOrderResult"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/reports/salerevise": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Dto.Reports.SaleReviseQuery"];
          "application/json": components["schemas"]["Sravni.Osago.Dto.Reports.SaleReviseQuery"];
          "text/json": components["schemas"]["Sravni.Osago.Dto.Reports.SaleReviseQuery"];
          "application/*+json": components["schemas"]["Sravni.Osago.Dto.Reports.SaleReviseQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/seo/orders/recent": {
    get: {
      parameters: {
        query: {
          Quantity: number;
          CompanyId?: number;
          Route?: string;
          ModelId?: number;
          BrandId?: number;
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/short-prolongation/companies": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.ShortProlongation.ShortProlongationCompanyInfo"][];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.ShortProlongation.ShortProlongationCompanyInfo"][];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.ShortProlongation.ShortProlongationCompanyInfo"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/short-prolongation/policyinfo": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.ShortProlongation.ShortProlongationPolicyInfoRequest"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.ShortProlongation.ShortProlongationPolicyInfoRequest"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.ShortProlongation.ShortProlongationPolicyInfoRequest"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.ShortProlongation.ShortProlongationPolicyInfoRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.ShortProlongation.ShortProlongationPolicyInfo"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.ShortProlongation.ShortProlongationPolicyInfo"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.ShortProlongation.ShortProlongationPolicyInfo"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/sovcom/checkVehicleServiceResult": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.CheckVehicleServiceResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          "application/json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.CheckVehicleServiceResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          "text/json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.CheckVehicleServiceResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          "application/*+json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.CheckVehicleServiceResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/sovcom/calculateKbmResult": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.CalculateKbmResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          "application/json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.CalculateKbmResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          "text/json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.CalculateKbmResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          "application/*+json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.CalculateKbmResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/sovcom/calculatePolicyCostResult": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.CalculatePolicyCostResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          "application/json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.CalculatePolicyCostResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          "text/json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.CalculatePolicyCostResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          "application/*+json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.CalculatePolicyCostResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/sovcom/createPolicy": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.CreatePolicyResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          "application/json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.CreatePolicyResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          "text/json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.CreatePolicyResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          "application/*+json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.CreatePolicyResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/sovcom/savePolicyResult": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.SavePolicyResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          "application/json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.SavePolicyResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          "text/json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.SavePolicyResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          "application/*+json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.SavePolicyResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/sovcom/preparePolicyResult": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.PreparePolicyResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          "application/json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.PreparePolicyResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          "text/json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.PreparePolicyResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          "application/*+json": components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.PreparePolicyResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/test/collect": {
    post: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/test/getInfo": {
    post: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/test/auto": {
    post: {
      parameters: {
        query?: {
          brandId?: number;
          modelId?: number;
          yearFrom?: number;
          power?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/upsales/full": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Upsales.OsagoUpsale"][];
            "application/json": components["schemas"]["Sravni.Osago.Upsales.OsagoUpsale"][];
            "text/json": components["schemas"]["Sravni.Osago.Upsales.OsagoUpsale"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/upsales/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Upsales.OsagoUpsale"];
            "application/json": components["schemas"]["Sravni.Osago.Upsales.OsagoUpsale"];
            "text/json": components["schemas"]["Sravni.Osago.Upsales.OsagoUpsale"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/upsales/payment-item/{orderId}": {
    get: {
      parameters: {
        path: {
          orderId: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.PaymentGateway.Item"];
            "application/json": components["schemas"]["Sravni.Osago.PaymentGateway.Item"];
            "text/json": components["schemas"]["Sravni.Osago.PaymentGateway.Item"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/users/{userId}/orders": {
    get: {
      parameters: {
        query?: {
          pageIndex?: number;
          pageSize?: number;
          completed?: boolean;
        };
        path: {
          userId: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.ResultModel`1[[Sravni.Osago.UserOrderInfo, Sravni.Osago.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Sravni.Osago.ResultModel`1[[Sravni.Osago.UserOrderInfo, Sravni.Osago.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Sravni.Osago.ResultModel`1[[Sravni.Osago.UserOrderInfo, Sravni.Osago.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/users/{userId}/searches": {
    get: {
      parameters: {
        query?: {
          pageIndex?: number;
          pageSize?: number;
        };
        path: {
          userId: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.ResultModel`1[[Sravni.Osago.UserSearchInfo, Sravni.Osago.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Sravni.Osago.ResultModel`1[[Sravni.Osago.UserSearchInfo, Sravni.Osago.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Sravni.Osago.ResultModel`1[[Sravni.Osago.UserSearchInfo, Sravni.Osago.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/users/saved-queries/{id}": {
    get: {
      parameters: {
        query?: {
          withRecommendedStartDate?: boolean;
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.OsagoQuery"];
            "application/json": components["schemas"]["Sravni.Osago.OsagoQuery"];
            "text/json": components["schemas"]["Sravni.Osago.OsagoQuery"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/userorders/last": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.ResultModel`1[[Sravni.Osago.LastUserOrderInfo, Sravni.Osago.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Sravni.Osago.ResultModel`1[[Sravni.Osago.LastUserOrderInfo, Sravni.Osago.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Sravni.Osago.ResultModel`1[[Sravni.Osago.LastUserOrderInfo, Sravni.Osago.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/usersearches/last": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.ResultModel`1[[Sravni.Osago.LastUserSearchInfo, Sravni.Osago.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Sravni.Osago.ResultModel`1[[Sravni.Osago.LastUserSearchInfo, Sravni.Osago.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Sravni.Osago.ResultModel`1[[Sravni.Osago.LastUserSearchInfo, Sravni.Osago.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/users/fillOrdersWithUserIds": {
    patch: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.OrderIdNewUser"][];
          "application/json": components["schemas"]["Sravni.Osago.OrderIdNewUser"][];
          "text/json": components["schemas"]["Sravni.Osago.OrderIdNewUser"][];
          "application/*+json": components["schemas"]["Sravni.Osago.OrderIdNewUser"][];
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/synonyms/{companyId}/brands": {
    get: {
      parameters: {
        query?: {
          SearchType?: components["schemas"]["Sravni.Osago.Shared.Dto.Api.VehicleSynonymSearchType"];
          Value?: string;
        };
        path: {
          companyId: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Api.VehicleMappings"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.VehicleMappings"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.VehicleMappings"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          companyId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.NameBinding"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.NameBinding"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.NameBinding"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.NameBinding"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Api.CreateNameBindingResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.CreateNameBindingResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.CreateNameBindingResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/synonyms/{companyId}/brands/{brandMapId}": {
    delete: {
      parameters: {
        path: {
          companyId: number;
          brandMapId: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Api.RemoveNameBindingResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.RemoveNameBindingResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.RemoveNameBindingResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
    patch: {
      parameters: {
        path: {
          companyId: number;
          brandMapId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.BrandEntityBinding"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.BrandEntityBinding"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.BrandEntityBinding"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.BrandEntityBinding"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Api.UpdateNameBindingResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.UpdateNameBindingResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.UpdateNameBindingResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/synonyms/{companyId}/brands/{brandMapId}/models": {
    post: {
      parameters: {
        path: {
          companyId: number;
          brandMapId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.NameBinding"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.NameBinding"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.NameBinding"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.NameBinding"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Api.CreateNameBindingResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.CreateNameBindingResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.CreateNameBindingResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/synonyms/{companyId}/brands/{brandMapId}/models/{modelMapId}": {
    delete: {
      parameters: {
        path: {
          companyId: number;
          brandMapId: number;
          modelMapId: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Api.RemoveNameBindingResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.RemoveNameBindingResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.RemoveNameBindingResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
    patch: {
      parameters: {
        path: {
          companyId: number;
          brandMapId: number;
          modelMapId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.NameBinding"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.NameBinding"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.NameBinding"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.NameBinding"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Api.UpdateNameBindingResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.UpdateNameBindingResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Api.UpdateNameBindingResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/vsk/callback": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Vsk.VskCallBack"];
          "application/json": components["schemas"]["Sravni.Osago.Vsk.VskCallBack"];
          "text/json": components["schemas"]["Sravni.Osago.Vsk.VskCallBack"];
          "application/*+json": components["schemas"]["Sravni.Osago.Vsk.VskCallBack"];
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/x/order": {
    post: {
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["Sravni.Osago.Shared.Dto.X.OsagoOrderCrossDto"];
          "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.X.OsagoOrderCrossDto"];
          "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.X.OsagoOrderCrossDto"];
          "application/*+json": components["schemas"]["Sravni.Osago.Shared.Dto.X.OsagoOrderCrossDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    DriverLicense: {
      seria?: string | null;
      number?: string | null;
    };
    "Microsoft.AspNetCore.Mvc.ProblemDetails": {
      type?: string | null;
      title?: string | null;
      /** Format: int32 */
      status?: number | null;
      detail?: string | null;
      instance?: string | null;
      [key: string]: unknown;
    };
    "Sravni.Micro.Errors.Error": {
      code?: string | null;
      target?: string | null;
      message?: string | null;
      attemptedValue?: string | null;
      details?: components["schemas"]["Sravni.Micro.Errors.Error"][] | null;
    };
    "Sravni.Micro.Errors.ErrorModel": {
      error?: components["schemas"]["Sravni.Micro.Errors.Error"];
    };
    /** @description dto заказа */
    "Sravni.Osago.Agentka.OrderDto": {
      /**
       * Format: int32
       * @description Идентификатор заказа у нас в БД.
       */
      id?: number;
      /**
       * Format: date-time
       * @description Дата заказа.
       */
      date?: string;
      /**
       * Format: date-time
       * @description Дата начала действия полиса.
       */
      policyStartDate?: string;
      externalContractNumber?: string | null;
      /** @description Имя клиента. */
      userName?: string | null;
      /**
       * Format: double
       * @description Цена полиса.
       */
      price?: number;
      /** @description Апсейлы к заказу */
      upsaleResults?: components["schemas"]["Sravni.Osago.Shared.Dto.UpsaleResult"][] | null;
      /**
       * Format: double
       * @description Цена полиса upsale.
       */
      upsalePrice?: number;
      /**
       * Format: int32
       * @description Идентификатор страховой компании.
       */
      companyId?: number;
      /**
       * Format: int32
       * @description Идентификатор продукта страховой компании.
       */
      osagoId?: number;
      /** @description Ссылка на архив. */
      policyLink?: string | null;
      /** @description Для выборки в агентском кабинете (физик, не физик) */
      partnerCampaignMedium?: string | null;
      /** @description Ссылка на полис. */
      policyBlankLink?: string | null;
      /** @description Партнерский источник. */
      source?: string | null;
      /** @description SubId. */
      subId?: string | null;
      /** @description Роут региона регистрации. */
      registrationRoute?: string | null;
      /** @description Роут субагента. */
      subAgentRoute?: string | null;
      /** @description Статус акцептации заказа. */
      isAccepted?: boolean;
      /** @description Договор с пролонгацией */
      withProlongation?: boolean;
      /** @description Hash заказа */
      hash?: string | null;
      /** @description Уточнение источника пролонгации */
      prolongationAttr?: string | null;
      /** @description акция зеленого корридора */
      isGreenCorridor?: boolean;
      /**
       * Format: double
       * @description Комиссия от страховой компании
       */
      osagoOrderCommission?: number;
      /**
       * Format: int32
       * @description Id рефера (пользователя реферальной программа который пригласил пользователя продавшего заказа)
       */
      referId?: number | null;
      osago?: components["schemas"]["Sravni.Osago.Agentka.OrderDto+OsagoProperties"];
      /**
       * Format: int32
       * @description Id Пользователя
       */
      userId?: number | null;
      vehicleCategory?: components["schemas"]["Sravni.Osago.Shared.Dto.Enums.VehicleCategory"];
      /** @description Продажа по системе POOL */
      isPool?: boolean;
      /** @description Продажа по системе 0кв */
      isKv0?: boolean;
      /** @description Полис апсейла */
      upsalesPolicyBlankLink?: string | null;
      /** @description признак пролонгации для агентского кабинета */
      isProlongationForAk?: boolean;
      /** @description дополнительные параметры заказа */
      additionalProperties?: components["schemas"]["Sravni.Osago.Shared.Dto.OsagoAdditionalProperty"][] | null;
      previousPolicyCompany?: string | null;
      /** Format: date-time */
      previousPolicyEndDate?: string | null;
    };
    /** @description Свойства заказа осаго */
    "Sravni.Osago.Agentka.OrderDto+OsagoProperties": {
      /** @description VIN номер автомобиля */
      vin?: string | null;
    };
    /** @enum {string} */
    "Sravni.Osago.Agentka.OrderProductType": "osago";
    /** @enum {string} */
    "Sravni.Osago.AgentsOrderStatus": "default" | "inProgress" | "failure" | "sold";
    /** @description обертка на результатом который должен имет булевое значение */
    "Sravni.Osago.BoolResult": {
      result?: boolean;
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.BrandInfo": {
      /** Format: int32 */
      id?: number;
      name?: string | null;
      nameRus?: string | null;
      alias?: string | null;
      /** Format: int32 */
      popularity?: number;
      firstLetter?: string;
      isImported?: boolean;
      isPopular?: boolean;
    };
    /** @enum {string} */
    "Sravni.Osago.CalculationState": "none" | "running" | "complete";
    /** @description Информация о выполнении джобы */
    "Sravni.Osago.CallCenterStatusDto": {
      /** @description ИД задания в колцентре */
      externalId?: string | null;
      /** @description статус дозвона */
      externalStatus?: string | null;
      /** @description оператор задания */
      externalOperator?: string | null;
      /** @description комментарий */
      comment?: string | null;
      /**
       * Format: date-time
       * @description Время смены статуса
       */
      updateDate?: string;
    };
    "Sravni.Osago.CarDocumentInfo": {
      series?: string | null;
      number?: string | null;
      /** Format: date-time */
      date?: string;
      documentType?: components["schemas"]["Sravni.Osago.CarDocumentType"];
    };
    /** @enum {string} */
    "Sravni.Osago.CarDocumentType": "pts" | "sts" | "ePts";
    "Sravni.Osago.CarLoaderResponse": {
      marks?: components["schemas"]["Sravni.Osago.CarMark"][] | null;
    };
    "Sravni.Osago.CarMark": {
      id?: string | null;
      name?: string | null;
      models?: components["schemas"]["Sravni.Osago.CarModel"][] | null;
    };
    "Sravni.Osago.CarModel": {
      id?: string | null;
      modelName?: string | null;
      category?: string | null;
    };
    /** @description Результат загрузки автомобилей */
    "Sravni.Osago.CarsLoadingResult": {
      /** @description Статус процесса загрузки */
      status?: string | null;
      /** @description Сообщение */
      message?: string | null;
      result?: components["schemas"]["Sravni.Osago.CarLoaderResponse"];
    };
    "Sravni.Osago.CheckTerminationResult": {
      isTerminated?: boolean;
      error?: string | null;
      ex?: components["schemas"]["System.Exception"];
    };
    "Sravni.Osago.Clients.Sovcom.Models.CalculateKbmResponse": {
      policyCalculationId?: string | null;
      drivers?: components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.DriverKbmInfo"][] | null;
    };
    "Sravni.Osago.Clients.Sovcom.Models.CalculatePolicyCostResponse": {
      policyCalculationId?: string | null;
      offlineOnly?: boolean;
      status?: boolean;
      /** Format: double */
      cost?: number | null;
      /** Format: double */
      policyKbmValue?: number | null;
      error?: string | null;
    };
    "Sravni.Osago.Clients.Sovcom.Models.CheckVehicleServiceResponse": {
      policyCalculationId?: string | null;
      ticketExists?: boolean;
      nextVehicleServiceDate?: string | null;
    };
    "Sravni.Osago.Clients.Sovcom.Models.CreatePolicyResponse": {
      policyCalculationId?: string | null;
      policyNumber?: string | null;
      /** Format: double */
      cost?: number | null;
      status?: boolean;
      offlineOnly?: boolean;
      error?: string | null;
      policyValidation?: components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.PolicyValidation"];
      policyRsaValidation?: components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.PolicyValidation"];
    };
    "Sravni.Osago.Clients.Sovcom.Models.DriverKbmInfo": {
      personDocumentId?: string | null;
      /** Format: double */
      kbmValue?: number;
    };
    "Sravni.Osago.Clients.Sovcom.Models.PolicyValidation": {
      status?: boolean;
      errorList?: components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.ValidationError"][] | null;
    };
    "Sravni.Osago.Clients.Sovcom.Models.PreparePolicyResponse": {
      policyCalculationId?: string | null;
      policyNumber?: string | null;
      /** Format: double */
      cost?: number | null;
      status?: boolean;
      offlineOnly?: boolean;
      error?: string | null;
      policyValidation?: components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.PolicyValidation"];
      policyRsaValidation?: components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.PolicyValidation"];
    };
    "Sravni.Osago.Clients.Sovcom.Models.SavePolicyResponse": {
      policyCalculationId?: string | null;
      policyNumber?: string | null;
      /** Format: double */
      cost?: number | null;
      status?: boolean;
      offlineOnly?: boolean;
      error?: string | null;
      policyValidation?: components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.PolicyValidation"];
      policyRsaValidation?: components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.PolicyValidation"];
    };
    "Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.CalculateKbmResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      /** @description Статус выполнения запроса, допустимые значения:	success, error */
      status?: string | null;
      /** @description Описание ошибки */
      error?: string | null;
      /**
       * Format: date-time
       * @description Дата запроса в формате yyyy-MMdd'T'hh:mm:ss.SSSZ
       */
      response_dt?: string;
      /** @description Идентификатор запроса (уникальный в рамках всего взаимодействия) */
      request_id?: string | null;
      result?: components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.CalculateKbmResponse"];
    };
    "Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.CalculatePolicyCostResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      /** @description Статус выполнения запроса, допустимые значения:	success, error */
      status?: string | null;
      /** @description Описание ошибки */
      error?: string | null;
      /**
       * Format: date-time
       * @description Дата запроса в формате yyyy-MMdd'T'hh:mm:ss.SSSZ
       */
      response_dt?: string;
      /** @description Идентификатор запроса (уникальный в рамках всего взаимодействия) */
      request_id?: string | null;
      result?: components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.CalculatePolicyCostResponse"];
    };
    "Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.CheckVehicleServiceResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      /** @description Статус выполнения запроса, допустимые значения:	success, error */
      status?: string | null;
      /** @description Описание ошибки */
      error?: string | null;
      /**
       * Format: date-time
       * @description Дата запроса в формате yyyy-MMdd'T'hh:mm:ss.SSSZ
       */
      response_dt?: string;
      /** @description Идентификатор запроса (уникальный в рамках всего взаимодействия) */
      request_id?: string | null;
      result?: components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.CheckVehicleServiceResponse"];
    };
    "Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.CreatePolicyResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      /** @description Статус выполнения запроса, допустимые значения:	success, error */
      status?: string | null;
      /** @description Описание ошибки */
      error?: string | null;
      /**
       * Format: date-time
       * @description Дата запроса в формате yyyy-MMdd'T'hh:mm:ss.SSSZ
       */
      response_dt?: string;
      /** @description Идентификатор запроса (уникальный в рамках всего взаимодействия) */
      request_id?: string | null;
      result?: components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.CreatePolicyResponse"];
    };
    "Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.PreparePolicyResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      /** @description Статус выполнения запроса, допустимые значения:	success, error */
      status?: string | null;
      /** @description Описание ошибки */
      error?: string | null;
      /**
       * Format: date-time
       * @description Дата запроса в формате yyyy-MMdd'T'hh:mm:ss.SSSZ
       */
      response_dt?: string;
      /** @description Идентификатор запроса (уникальный в рамках всего взаимодействия) */
      request_id?: string | null;
      result?: components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.PreparePolicyResponse"];
    };
    "Sravni.Osago.Clients.Sovcom.Models.SovcomWrappedResponse`1[[Sravni.Osago.Clients.Sovcom.Models.SavePolicyResponse, Sravni.Osago.Clients, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      /** @description Статус выполнения запроса, допустимые значения:	success, error */
      status?: string | null;
      /** @description Описание ошибки */
      error?: string | null;
      /**
       * Format: date-time
       * @description Дата запроса в формате yyyy-MMdd'T'hh:mm:ss.SSSZ
       */
      response_dt?: string;
      /** @description Идентификатор запроса (уникальный в рамках всего взаимодействия) */
      request_id?: string | null;
      result?: components["schemas"]["Sravni.Osago.Clients.Sovcom.Models.SavePolicyResponse"];
    };
    "Sravni.Osago.Clients.Sovcom.Models.ValidationError": {
      errorCode?: string | null;
      description?: string | null;
    };
    /** @description Страховая компания */
    "Sravni.Osago.Company": {
      /**
       * Format: int32
       * @description Id компании
       */
      id?: number;
      /** @description Алиас компании */
      alias?: string | null;
      /** @description Код компании */
      code?: string | null;
      /** @description Название компании */
      name?: string | null;
      /** @description Рейтинг РА компании */
      raRating?: string | null;
      /**
       * Format: double
       * @description Числовое представление рейтинга РА
       */
      raRatingNumeric?: number;
      /** @description Телефоны страховой */
      phones?: string[] | null;
      support?: components["schemas"]["Sravni.Osago.CompanySupport"];
    };
    /** @description Информация о сапорте страховой компании */
    "Sravni.Osago.CompanySupport": {
      /** @description Телефоны для сапорта */
      phones?: string[] | null;
      /** @description Email адреса для сапорта */
      emails?: string[] | null;
    };
    /** @description Данные для подтверждения оплаты в СК */
    "Sravni.Osago.ConfirmPayment.ConfirmPaymentQuery": {
      /** @description Id платежа */
      paymentId?: string | null;
      oldOrderToken?: string | null;
    };
    /** @description Результат запроса подтверждения оплаты */
    "Sravni.Osago.ConfirmPayment.ConfirmPaymentResult": {
      /** @description Описание */
      error?: string | null;
      /** @description результат */
      result?: boolean;
      /** @description номер договора */
      contractNumber?: string | null;
      /** @description id договора */
      contractId?: string | null;
      /** @description id расчета */
      calcId?: string | null;
    };
    /** @enum {string} */
    "Sravni.Osago.ContactType": "owner" | "insurer" | "driver";
    "Sravni.Osago.CorrectionRequest": {
      policyNumber?: string | null;
      /** Format: float */
      kv?: number;
    };
    "Sravni.Osago.Data.ContactFirstName": {
      /** Format: int32 */
      id?: number;
      name?: string | null;
      /** Format: int32 */
      hashCode?: number;
    };
    "Sravni.Osago.Data.ContactHistory": {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      orderId?: number;
      type?: components["schemas"]["Sravni.Osago.Shared.Dto.Enums.CommunicationType"];
      /** Format: date-time */
      date?: string;
      value?: string | null;
      order?: components["schemas"]["Sravni.Osago.Data.OsagoOrder"];
    };
    "Sravni.Osago.Data.ContactLastName": {
      /** Format: int32 */
      id?: number;
      name?: string | null;
      /** Format: int32 */
      hashCode?: number;
    };
    "Sravni.Osago.Data.ContactMiddleName": {
      /** Format: int32 */
      id?: number;
      name?: string | null;
      /** Format: int32 */
      hashCode?: number;
    };
    "Sravni.Osago.Data.ContactPassportIssuedBy": {
      /** Format: int32 */
      id?: number;
      name?: string | null;
      /** Format: int32 */
      hashCode?: number;
    };
    "Sravni.Osago.Data.ContactRegistrationAddress": {
      /** Format: int32 */
      id?: number;
      name?: string | null;
      /** Format: int32 */
      hashCode?: number;
    };
    "Sravni.Osago.Data.OsagoAgentCommission": {
      /** Format: int32 */
      id?: number;
      /** Format: date-time */
      dateFrom?: string;
      /** Format: date-time */
      dateTo?: string | null;
      /** Format: double */
      commission0Level?: number;
      /** Format: double */
      commission1Level?: number;
      /** Format: double */
      commission2Level?: number;
      /** Format: double */
      commission3Level?: number;
      /** Format: double */
      commission4Level?: number;
      /** Format: double */
      commission5Level?: number;
      /** Format: double */
      up1?: number;
      /** Format: double */
      up2?: number;
      /** Format: double */
      up3?: number;
      /** Format: int32 */
      companyId?: number;
      locationRoute?: string | null;
    };
    "Sravni.Osago.Data.OsagoCompanyCredential": {
      /** Format: int32 */
      id?: number;
      isActive?: boolean;
      /** Format: int32 */
      companyId?: number;
      viewType?: components["schemas"]["Sravni.Osago.OsagoViewType"];
      login?: string | null;
      password?: string | null;
      subUserLogin?: string | null;
      subUserPassword?: string | null;
      /** Format: int32 */
      daysFrom?: number | null;
      /** Format: int32 */
      daysTo?: number | null;
      isSravniProlongation?: boolean;
      isProlongation?: boolean;
      isGreenCorridor?: boolean;
      source?: string | null;
      baseUrl?: string | null;
      isInsuranceCompanyPayment?: boolean;
      vehicleCategory?: components["schemas"]["Sravni.Osago.Shared.Dto.Enums.VehicleCategory"];
      /** Format: int32 */
      priority?: number;
      account?: string | null;
      platforms?: string[] | null;
    };
    "Sravni.Osago.Data.OsagoCompanyUpsaleCredential": {
      /** Format: int32 */
      id?: number;
      isActive?: boolean;
      /** Format: int32 */
      companyId?: number;
      viewType?: components["schemas"]["Sravni.Osago.OsagoViewType"];
      login?: string | null;
      password?: string | null;
      baseUrl?: string | null;
    };
    "Sravni.Osago.Data.OsagoOrder": {
      /** Format: date-time */
      lastUpdated?: string | null;
      /** Format: int32 */
      id?: number;
      /** Format: date-time */
      date?: string;
      /** Format: date-time */
      dateUpdate?: string;
      /** Format: double */
      price?: number;
      url?: string | null;
      policyLink?: string | null;
      isAccepted?: boolean;
      isCanceled?: boolean;
      /** Format: int32 */
      payOrder?: number;
      userName?: string | null;
      userEmail?: string | null;
      userPhone?: string | null;
      comment?: string | null;
      /** Format: int32 */
      osagoId?: number;
      /** Format: int32 */
      companyId?: number;
      /** Format: int32 */
      personType?: number;
      /** Format: int32 */
      vehicleType?: number;
      /** Format: int32 */
      enginePowerType?: number;
      /** Format: int32 */
      driverAmount?: number;
      isResident?: boolean;
      /** Format: int32 */
      usageMonthsPerYear?: number;
      registrationRoute?: string | null;
      gettingRoute?: string | null;
      /** Format: int32 */
      brandId?: number;
      /** Format: int32 */
      modelId?: number;
      modification?: string | null;
      /** Format: int32 */
      year?: number;
      /** Format: int32 */
      enginePower?: number;
      vin?: string | null;
      carNumber?: string | null;
      /** Format: int32 */
      carDocumentType?: number;
      carDocumentSeries?: string | null;
      carDocumentNumber?: string | null;
      /** Format: date-time */
      carDocumentIssueDate?: string;
      /** Format: date-time */
      policyStartDate?: string;
      ip?: string | null;
      /** Format: uuid */
      xUserId?: string | null;
      /** Format: int32 */
      userId?: number | null;
      /** Format: int64 */
      searchId?: number;
      externalCalcId?: string | null;
      externalContractId?: string | null;
      externalContractNumber?: string | null;
      campaignMedium?: string | null;
      campaignName?: string | null;
      campaignSource?: string | null;
      partnerCampaignMedium?: string | null;
      partnerCampaignName?: string | null;
      partnerCampaignSource?: string | null;
      subId?: string | null;
      /** Format: double */
      partnerCommission?: number;
      saveResultType?: components["schemas"]["Sravni.Osago.SaveResultType"];
      saveResultTypeDescription?: string | null;
      amplitudeId?: string | null;
      /** Format: int32 */
      brokerAgentId?: number | null;
      brokerAgentStatus?: components["schemas"]["Sravni.Osago.AgentsOrderStatus"];
      /** Format: int32 */
      driversCount?: number;
      /** Format: int32 */
      driversMinAge?: number;
      /** Format: int32 */
      driversMinExp?: number;
      /** Format: double */
      driversKbm?: number;
      isSmsSended?: boolean;
      isRoute?: boolean;
      uaClientId?: string | null;
      platform?: string | null;
      hash?: string | null;
      subAgentRoute?: string | null;
      /** Format: int32 */
      originalCompanyId?: number | null;
      isSendedProlongationEmail?: boolean;
      isTrash?: boolean;
      isSummary?: boolean;
      bodyNumber?: string | null;
      chassisNumber?: string | null;
      campaignContent?: string | null;
      campaignTerm?: string | null;
      externalPid?: string | null;
      policyBlankLink?: string | null;
      callbackSended?: boolean;
      isProlongation?: boolean;
      /** Format: double */
      tb?: number;
      /** Format: double */
      kt?: number;
      /** Format: double */
      kvs?: number;
      /** Format: double */
      ks?: number;
      /** Format: double */
      kp?: number;
      /** Format: double */
      km?: number;
      /** Format: double */
      kn?: number;
      /** Format: double */
      ko?: number;
      /** Format: double */
      kpr?: number;
      withProlongation?: boolean;
      /** Format: int32 */
      accountPriority?: number;
      /** Format: int32 */
      callCenterSmsNum?: number | null;
      callCenterJobId?: string | null;
      prolongationAttr?: string | null;
      previousPolicySeries?: string | null;
      previousPolicyNumber?: string | null;
      previousPolicyCompany?: string | null;
      /** Format: date-time */
      previousPolicyEndDate?: string | null;
      clid?: string | null;
      isGreenCorridor?: boolean;
      merchantId?: string | null;
      /** Format: int32 */
      affId?: number | null;
      /** Format: int32 */
      offerId?: number | null;
      source?: string | null;
      transactionId?: string | null;
      affSub1?: string | null;
      osagoOrderCredential?: components["schemas"]["Sravni.Osago.Data.OsagoOrderCredential"];
      osagoOrderCommission?: components["schemas"]["Sravni.Osago.Data.OsagoOrderCommission"];
      osagoOrderMarker?: components["schemas"]["Sravni.Osago.Data.OsagoOrderMarker"];
      osagoOrderBenefitCodes?: components["schemas"]["Sravni.Osago.Data.OsagoOrderBenefitCode"][] | null;
      osagoOrderChecks?: components["schemas"]["Sravni.Osago.Data.OsagoOrderCheck"][] | null;
      osagoOrderContacts?: components["schemas"]["Sravni.Osago.Data.OsagoOrderContact"][] | null;
      osagoOrderUpsales?: components["schemas"]["Sravni.Osago.Data.OsagoOrderUpsale"][] | null;
      osagoOrderCrosses?: components["schemas"]["Sravni.Osago.Data.OsagoOrderCross"][] | null;
      osagoOrderPayments?: components["schemas"]["Sravni.Osago.Data.OsagoOrderPayment"][] | null;
      osagoTrySave?: components["schemas"]["Sravni.Osago.Data.OsagoTrySave"][] | null;
      contactHistories?: components["schemas"]["Sravni.Osago.Data.ContactHistory"][] | null;
      osagoOrderStatuses?: components["schemas"]["Sravni.Osago.Data.OsagoOrderStatus"][] | null;
      vehicleCategory?: components["schemas"]["Sravni.Osago.Shared.Dto.Enums.VehicleCategory"];
      /** Format: int32 */
      allowWeight?: number | null;
      hasTrailer?: boolean;
      periods?: components["schemas"]["Sravni.Osago.Data.OsagoOrderPeriod"][] | null;
      additionalProperties?: components["schemas"]["Sravni.Osago.Data.OsagoOrderAdditionalProperty"][] | null;
    };
    "Sravni.Osago.Data.OsagoOrderAdditionalProperty": {
      /** Format: int64 */
      id?: number;
      key?: string | null;
      value?: string | null;
      /** Format: int32 */
      orderId?: number;
      order?: components["schemas"]["Sravni.Osago.Data.OsagoOrder"];
    };
    "Sravni.Osago.Data.OsagoOrderBenefitCode": {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      orderId?: number;
      code?: string | null;
      /** Format: date-time */
      lastUpdated?: string | null;
      order?: components["schemas"]["Sravni.Osago.Data.OsagoOrder"];
    };
    "Sravni.Osago.Data.OsagoOrderCheck": {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      checkType?: number;
      key?: string | null;
      checkId?: string | null;
      passed?: boolean;
      failedFields?: string | null;
      /** Format: int32 */
      orderId?: number;
      order?: components["schemas"]["Sravni.Osago.Data.OsagoOrder"];
    };
    "Sravni.Osago.Data.OsagoOrderCommission": {
      /** Format: date-time */
      lastUpdated?: string | null;
      /** Format: int32 */
      id?: number;
      /** Format: double */
      commission?: number;
      order?: components["schemas"]["Sravni.Osago.Data.OsagoOrder"];
    };
    "Sravni.Osago.Data.OsagoOrderContact": {
      /** Format: int32 */
      id?: number;
      contactType?: components["schemas"]["Sravni.Osago.ContactType"];
      passportSeries?: string | null;
      passportNumber?: string | null;
      /** Format: date-time */
      passportIssueDate?: string | null;
      licenseNumber?: string | null;
      licenseSeries?: string | null;
      /** Format: date-time */
      licenseDate?: string | null;
      /** Format: date-time */
      birthDate?: string | null;
      phone?: string | null;
      email?: string | null;
      /** Format: int32 */
      orderId?: number;
      /** Format: int32 */
      passportIssuedById?: number | null;
      /** Format: int32 */
      contactRegistrationAddressId?: number | null;
      /** Format: int32 */
      contactFirstNameId?: number | null;
      /** Format: int32 */
      contactMiddleNameId?: number | null;
      /** Format: int32 */
      contactLastNameId?: number | null;
      /** Format: int32 */
      contactPreviousFirstNameId?: number | null;
      /** Format: int32 */
      contactPreviousMiddleNameId?: number | null;
      /** Format: int32 */
      contactPreviousLastNameId?: number | null;
      /** Format: int32 */
      regionalCenterId?: number | null;
      /** Format: double */
      kbm?: number | null;
      contactFirstName?: components["schemas"]["Sravni.Osago.Data.ContactFirstName"];
      contactLastName?: components["schemas"]["Sravni.Osago.Data.ContactLastName"];
      contactMiddleName?: components["schemas"]["Sravni.Osago.Data.ContactMiddleName"];
      contactPreviousFirstName?: components["schemas"]["Sravni.Osago.Data.ContactFirstName"];
      contactPreviousLastName?: components["schemas"]["Sravni.Osago.Data.ContactLastName"];
      contactPreviousMiddleName?: components["schemas"]["Sravni.Osago.Data.ContactMiddleName"];
      contactRegistrationAddress?: components["schemas"]["Sravni.Osago.Data.ContactRegistrationAddress"];
      order?: components["schemas"]["Sravni.Osago.Data.OsagoOrder"];
      passportIssuedBy?: components["schemas"]["Sravni.Osago.Data.ContactPassportIssuedBy"];
      previousLicenseNumber?: string | null;
      previousLicenseSeries?: string | null;
    };
    "Sravni.Osago.Data.OsagoOrderCredential": {
      /** Format: date-time */
      lastUpdated?: string | null;
      /** Format: int32 */
      orderId?: number;
      /** Format: int32 */
      credentialId?: number;
      /** Format: int32 */
      upsaleCredentialId?: number | null;
      osagoCompanyCredential?: components["schemas"]["Sravni.Osago.Data.OsagoCompanyCredential"];
      osagoCompanyUpsaleCredential?: components["schemas"]["Sravni.Osago.Data.OsagoCompanyUpsaleCredential"];
      osagoOrder?: components["schemas"]["Sravni.Osago.Data.OsagoOrder"];
    };
    "Sravni.Osago.Data.OsagoOrderCross": {
      /** Format: int32 */
      id?: number;
      externalId?: string | null;
      /** Format: int32 */
      xType?: number;
      name?: string | null;
      policyNumber?: string | null;
      policyLink?: string | null;
      /** Format: double */
      price?: number;
      isAccepted?: boolean;
      /** Format: int32 */
      userId?: number | null;
      /** Format: int32 */
      orderId?: number | null;
      orderHash?: string | null;
      /** Format: date-time */
      dateStart?: string;
      /** Format: date-time */
      dateEnd?: string;
      order?: components["schemas"]["Sravni.Osago.Data.OsagoOrder"];
    };
    "Sravni.Osago.Data.OsagoOrderMarker": {
      /** Format: date-time */
      lastUpdated?: string | null;
      /** Format: int32 */
      id?: number;
      affSub1?: string | null;
      affSub2?: string | null;
      affSub3?: string | null;
      affSub4?: string | null;
      affSub5?: string | null;
      accountName?: string | null;
      partnerCampaignMedium?: string | null;
      partnerCampaignSource?: string | null;
      partnerCampaignName?: string | null;
      subId?: string | null;
      /** Format: int32 */
      affId?: number | null;
      /** Format: int32 */
      offerId?: number | null;
      source?: string | null;
      transactionId?: string | null;
      promotionSource?: string | null;
      promotionCategory?: string | null;
      promotionCampaign?: string | null;
      promotionSub1?: string | null;
      promotionSub2?: string | null;
      campaignMedium?: string | null;
      campaignSource?: string | null;
      campaignName?: string | null;
      campaignContent?: string | null;
      campaignTerm?: string | null;
      uaClientId?: string | null;
      ymClientId?: string | null;
      clid?: string | null;
      amplitudeId?: string | null;
      agentRegion?: string | null;
      conversationId?: string | null;
      savedSearchId?: string | null;
      order?: components["schemas"]["Sravni.Osago.Data.OsagoOrder"];
      isShortProlongation?: boolean;
    };
    "Sravni.Osago.Data.OsagoOrderPayment": {
      /** Format: int32 */
      id?: number;
      acquiringType?: components["schemas"]["Sravni.Osago.Shared.Dto.OsagoAcquiringType"];
      paymentStatus?: components["schemas"]["Sravni.Osago.Shared.Dto.OsagoPaymentStatus"];
      paymentLink?: string | null;
      paymentId?: string | null;
      /** Format: double */
      price?: number;
      /** Format: int32 */
      orderId?: number;
      /** Format: date-time */
      lastUpdated?: string | null;
      order?: components["schemas"]["Sravni.Osago.Data.OsagoOrder"];
    };
    "Sravni.Osago.Data.OsagoOrderPeriod": {
      /** Format: int64 */
      id?: number;
      /** Format: date-time */
      periodBegin?: string;
      /** Format: date-time */
      periodEnd?: string;
      order?: components["schemas"]["Sravni.Osago.Data.OsagoOrder"];
      /** Format: int32 */
      orderId?: number;
    };
    "Sravni.Osago.Data.OsagoOrderStatus": {
      /** Format: int64 */
      id?: number;
      /** Format: int32 */
      orderId?: number;
      status?: components["schemas"]["Sravni.Osago.Shared.Dto.Enums.RegistrationState"];
      /** Format: date-time */
      lastUpdated?: string;
      comment?: string | null;
      /** Format: date-time */
      terminationDate?: string | null;
      crmStatus?: components["schemas"]["Sravni.Osago.Shared.Dto.Enums.CrmStatus"];
      order?: components["schemas"]["Sravni.Osago.Data.OsagoOrder"];
    };
    "Sravni.Osago.Data.OsagoOrderUpsale": {
      /** Format: int64 */
      id?: number;
      /** Format: int32 */
      orderId?: number | null;
      /** Format: int32 */
      productId?: number;
      /** Format: double */
      price?: number;
      externalId?: string | null;
      externalPid?: string | null;
      contractNumber?: string | null;
      policyBlankLink?: string | null;
      draftPolicyBlankLink?: string | null;
      order?: components["schemas"]["Sravni.Osago.Data.OsagoOrder"];
      osagoOrderUpsaleCommission?: components["schemas"]["Sravni.Osago.Data.OsagoOrderUpsaleCommission"];
    };
    "Sravni.Osago.Data.OsagoOrderUpsaleCommission": {
      /** Format: date-time */
      lastUpdated?: string | null;
      /** Format: int64 */
      id?: number;
      /** Format: double */
      commission?: number;
      orderUpsale?: components["schemas"]["Sravni.Osago.Data.OsagoOrderUpsale"];
    };
    "Sravni.Osago.Data.OsagoTrySave": {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      orderId?: number;
      state?: components["schemas"]["Sravni.Osago.CalculationState"];
      /** Format: date-time */
      date?: string | null;
      order?: components["schemas"]["Sravni.Osago.Data.OsagoOrder"];
      osagoTrySaveResults?: components["schemas"]["Sravni.Osago.Data.OsagoTrySaveResult"][] | null;
    };
    "Sravni.Osago.Data.OsagoTrySaveResult": {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      osagoId?: number;
      paymentUrl?: string | null;
      /** Format: double */
      price?: number;
      /** Format: int32 */
      trySaveId?: number;
      /** Format: int32 */
      accountPriority?: number;
      withCompanyProlongation?: boolean;
      /** Format: double */
      tb?: number;
      trySave?: components["schemas"]["Sravni.Osago.Data.OsagoTrySave"];
      upsales?: components["schemas"]["Sravni.Osago.Data.OsagoTrySaveResultUpsale"][] | null;
    };
    "Sravni.Osago.Data.OsagoTrySaveResultUpsale": {
      /** Format: int64 */
      id?: number;
      /** Format: int32 */
      trySaveResultId?: number;
      /** Format: int32 */
      productId?: number;
      /** Format: double */
      price?: number;
      trySaveResult?: components["schemas"]["Sravni.Osago.Data.OsagoTrySaveResult"];
    };
    /** @enum {string} */
    "Sravni.Osago.DriverAmount": "limited" | "unlimited";
    "Sravni.Osago.DriverInfo": {
      lastName?: string | null;
      middleName?: string | null;
      firstName?: string | null;
      fullName?: string | null;
      /** Format: int64 */
      id?: number;
      /** Format: date-time */
      birthDate?: string;
      license?: components["schemas"]["Sravni.Osago.DriverLicense"];
      passport?: components["schemas"]["Sravni.Osago.Passport"];
      previousInfo?: components["schemas"]["Sravni.Osago.PreviousDriverInfo"];
      /** Format: int32 */
      age?: number;
      /** Format: int32 */
      experience?: number;
    };
    "Sravni.Osago.DriverLicense": {
      series?: string | null;
      number?: string | null;
      /** Format: date-time */
      date?: string;
    };
    "Sravni.Osago.DriversInfo": {
      driverAmount?: components["schemas"]["Sravni.Osago.DriverAmount"];
      drivers?: components["schemas"]["Sravni.Osago.DriverInfo"][] | null;
    };
    "Sravni.Osago.Dto.AnyResult`1[[Sravni.Osago.Shared.Dto.Dto.Order.InfoModelByPhoneNumberModel, Sravni.Osago.Shared.Dto, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      result?: components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.InfoModelByPhoneNumberModel"];
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.Dto.AnyResult`1[[Sravni.Osago.Shared.Dto.Dto.Order.LastOrderModel, Sravni.Osago.Shared.Dto, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      result?: components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.LastOrderModel"];
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
      result?: boolean;
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.Dto.AnyResult`1[[System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
      result?: string[] | null;
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.Dto.AnyResult`1[[System.Guid, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
      /** Format: uuid */
      result?: string;
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.Dto.AnyResult`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
      result?: string | null;
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.Dto.CompanyStatistics": {
      /**
       * Format: int32
       * @description Количество проданных полисов
       */
      policiesCount?: number;
    };
    /** @description Пары orderHash - userId */
    "Sravni.Osago.Dto.OrderHashUserIdPair": {
      /** @description Hash заказа */
      orderHash?: string | null;
      /**
       * Format: int32
       * @description Id пользователя
       */
      userId?: number;
    };
    "Sravni.Osago.Dto.Orders.LinkOrderBenefitRequestModel": {
      /**
       * Format: int32
       * @description Идентификатор заказа
       */
      orderId?: number;
      /** @description Промокод */
      benefitCode?: string | null;
    };
    "Sravni.Osago.Dto.Orders.LinkOrdersBenefitCodeAndSyncWithDima": {
      /** @description Идентификаторы заказа */
      orderId?: number[] | null;
      /** @description Промокод */
      benefitCode?: string | null;
    };
    /** @description Модель запроса позапрошлого полиса */
    "Sravni.Osago.Dto.ParserBeforeLastInfoRequestModel": {
      /** @description ФИО */
      fullName?: string | null;
      /**
       * Format: date-time
       * @description Дата рождения
       */
      birthDate?: string;
      /**
       * Format: date-time
       * @description Дата в которую действовал полис
       */
      policyActionDate?: string;
      /** @description Номер автомобиля */
      carNumber?: string | null;
      /** @description VIN ТС */
      vin?: string | null;
      /** @description Номер кузова */
      bodyNumber?: string | null;
      /** @description Номер Шасси */
      chassisNumber?: string | null;
    };
    "Sravni.Osago.Dto.Prolongation.ComparePreviousPolicyModel": {
      osagoOrderUpsale?: components["schemas"]["Sravni.Osago.Data.OsagoOrderUpsale"];
      previousOsagoQuery?: components["schemas"]["Sravni.Osago.OsagoQuery"];
      /** Format: int32 */
      orderId?: number;
      /** Format: date-time */
      date?: string;
      /** Format: double */
      price?: number;
      /** Format: int32 */
      companyId?: number;
      registrationRoute?: string | null;
      gettingRoute?: string | null;
      /** Format: int32 */
      enginePower?: number;
      vin?: string | null;
      carNumber?: string | null;
      /** Format: int32 */
      driversCount?: number;
      /** Format: int32 */
      driversMinAge?: number;
      /** Format: int32 */
      driversMinExp?: number;
      /** Format: double */
      driversKbm?: number;
      hash?: string | null;
      /** Format: double */
      tb?: number;
      /** Format: double */
      kt?: number;
      /** Format: double */
      kvs?: number;
      /** Format: double */
      ks?: number;
      /** Format: double */
      kp?: number;
      /** Format: double */
      km?: number;
      /** Format: double */
      kn?: number;
      /** Format: double */
      ko?: number;
      /** Format: double */
      kpr?: number;
    };
    "Sravni.Osago.Dto.Prolongation.PreviousPolicyRequestModel": {
      /** @description Номер автомобиля */
      carNumber?: string | null;
      /** @description VIN ТС */
      vin?: string | null;
      /** @description Номер кузова */
      bodyNumber?: string | null;
      /** @description Номер шасси */
      chassisNumber?: string | null;
      /** @description Телефон */
      phone?: string | null;
      /** @description Email */
      email?: string | null;
      /** @description Полное имя страхователя */
      insurerFullName?: string | null;
    };
    "Sravni.Osago.Dto.RecommendedStartDateRequestModel": {
      /** @description Номер автомобиля */
      carNumber?: string | null;
      /** @description VIN ТС */
      vin?: string | null;
      /** @description Номер кузова */
      bodyNumber?: string | null;
      /** @description Номер кузова */
      chassisNumber?: string | null;
      utm?: components["schemas"]["Sravni.Osago.UtmQuery"];
      ownerFio?: components["schemas"]["Sravni.Osago.Fio"];
      /**
       * Format: date-time
       * @description Дата рождения страхователя
       */
      ownerBirthDate?: string | null;
    };
    /** @description Запрос на сверку продаж */
    "Sravni.Osago.Dto.Reports.SaleReviseQuery": {
      /** @description Файл */
      filePath?: string | null;
      /** @description Это финальная загрузка? (2-й Реестр) */
      isRegistry2?: boolean;
      /** @description Мыло для отправки обогащенного реестра */
      email?: string | null;
    };
    "Sravni.Osago.EgarantResult": {
      orderHash?: string | null;
      status?: components["schemas"]["Sravni.Osago.Shared.Dto.Enums.EgarantRequestState"];
      url?: string | null;
      /** Format: int32 */
      companyId?: number | null;
    };
    "Sravni.Osago.EgarantValidationResult": {
      /** @description Хэш заказа */
      hash?: string | null;
      hasErrors?: boolean;
      /** @description Ошибки */
      errors?: string[] | null;
      /** @description Сыылка на оплату в РСА */
      url?: string | null;
    };
    "Sravni.Osago.Events.OrderCommunicationLifeCycleEvent": {
      /** Format: int64 */
      orderId?: number;
      /** Format: int64 */
      communicationId?: number | null;
      templateName?: string | null;
      /** Format: date-time */
      creationDate?: string | null;
      /** Format: date-time */
      sendingDate?: string | null;
      /** Format: date-time */
      usageDate?: string | null;
    };
    "Sravni.Osago.Events.OrderLifeCycleEvent": {
      /** Format: int64 */
      orderId?: number;
      orderStatus?: components["schemas"]["Sravni.Osago.OrderLifeCycleStatus"];
      /** Format: date-time */
      processStartDate?: string | null;
      /** Format: date-time */
      companyResponseDate?: string | null;
      /** Format: date-time */
      paymentUrlDate?: string | null;
      /** Format: date-time */
      paymentStatusDate?: string | null;
      /** Format: date-time */
      policyApiDate?: string | null;
      /** Format: date-time */
      policyMailDate?: string | null;
    };
    "Sravni.Osago.ExtendedOsagoQuery": {
      osagoQuery?: components["schemas"]["Sravni.Osago.OsagoQuery"];
      /** Format: int32 */
      orderId?: number;
      brandName?: string | null;
      modelName?: string | null;
      userPhone?: string | null;
      /** Format: int32 */
      insuranceCompanyId?: number;
      /** Format: int32 */
      productId?: number;
      /** @description куплен в прошлом году */
      wasAccepted?: boolean;
      contractNumber?: string | null;
      campaignMedium?: string | null;
      partnerCampaignMedium?: string | null;
      daysTo?: components["schemas"]["Sravni.Osago.Shared.Dto.ProlongationDays"];
    };
    "Sravni.Osago.ExtendedOsagoQueryResult": {
      items?: components["schemas"]["Sravni.Osago.ExtendedOsagoQuery"][] | null;
      /** Format: int32 */
      pageCount?: number;
    };
    "Sravni.Osago.Fio": {
      lastName?: string | null;
      middleName?: string | null;
      firstName?: string | null;
      fullName?: string | null;
    };
    "Sravni.Osago.InsurancePeriod": {
      /** Format: date-time */
      periodBegin?: string;
      /** Format: date-time */
      periodEnd?: string;
    };
    /** @description Информация о выполнении джобы */
    "Sravni.Osago.JobExecutionInfoDto": {
      /**
       * Format: date-time
       * @description Дата запуска
       */
      date?: string;
      /** @description Продукт */
      product?: string | null;
      /**
       * Format: int32
       * @description Общее количество обрабатываемых элементов
       */
      totalCount?: number;
      /**
       * Format: int32
       * @description Количество обработанных элементов
       */
      count?: number;
      utmSource?: string | null;
      utmMedium?: string | null;
      utmCampaign?: string | null;
      utmContent?: string | null;
    };
    "Sravni.Osago.LastDriverInfo": {
      fio?: string | null;
      /** Format: double */
      kbm?: number | null;
    };
    /** @description Данные о заказе пользователя */
    "Sravni.Osago.LastUserOrderInfo": {
      hash?: string | null;
      /**
       * Format: int32
       * @description Id компании
       */
      companyId?: number;
      /** @description Название компании */
      companyName?: string | null;
      /** @description url на полис */
      policyLink?: string | null;
      /** @description Бренд */
      brandName?: string | null;
      /** @description Name of model */
      modelName?: string | null;
      /**
       * Format: date-time
       * @description End date of policy
       */
      policyEndDate?: string;
      /** @description Признак пролонгации */
      isProlongation?: boolean;
      /** @description Рег знак */
      regNumber?: string | null;
      /** @description ВИН */
      vin?: string | null;
      vehicleCategory?: components["schemas"]["Sravni.Osago.Shared.Dto.Enums.VehicleCategory"];
      /** @description Drivers list */
      drivers?: components["schemas"]["Sravni.Osago.LastDriverInfo"][] | null;
    };
    /** @description Данные о расчете пользователя */
    "Sravni.Osago.LastUserSearchInfo": {
      /** @description Хэш расчета */
      hash?: string | null;
      /** @description Бренд */
      brandName?: string | null;
      /** @description Модель */
      modelName?: string | null;
      /**
       * Format: date-time
       * @description date of search
       */
      searchDate?: string;
      /**
       * Format: double
       * @description Минимальная цена предложения
       */
      minPrice?: number | null;
      /** @description Рег знак */
      regNumber?: string | null;
      /** @description ВИН */
      vin?: string | null;
      vehicleCategory?: components["schemas"]["Sravni.Osago.Shared.Dto.Enums.VehicleCategory"];
      /** @description Drivers list */
      drivers?: components["schemas"]["Sravni.Osago.LastDriverInfo"][] | null;
    };
    /** @description результат ответа на запрос мин и макс цены в регине */
    "Sravni.Osago.MinMaxPricesResult": {
      /**
       * Format: double
       * @description мин
       */
      minPrice?: number;
      /**
       * Format: double
       * @description макс
       */
      maxPrice?: number;
    };
    "Sravni.Osago.MobileMarkers": {
      conversationId?: string | null;
      savedSearchId?: string | null;
      flowId?: string | null;
      isFlow?: boolean | null;
    };
    "Sravni.Osago.ModelInfo": {
      /** Format: int32 */
      id?: number;
      name?: string | null;
      nameRus?: string | null;
      alias?: string | null;
      categories?: string[] | null;
      /** Format: int32 */
      brandId?: number;
    };
    "Sravni.Osago.ModifyOrderResponse": {
      isOk?: boolean;
      companyName?: string | null;
      /** Format: date-time */
      orderDate?: string;
      /** Format: double */
      orderPrice?: number;
      companyAlias?: string | null;
    };
    "Sravni.Osago.NameValueItem": {
      name?: string | null;
      value?: string | null;
    };
    /** @description Новый пользователь для заказа */
    "Sravni.Osago.OrderIdNewUser": {
      /**
       * Format: int32
       * @description Id заказа
       */
      orderId?: number;
      /**
       * Format: int32
       * @description Id пользователя
       */
      userId?: number;
      /** @description Телефон пользователя */
      userPhone?: string | null;
    };
    /** @enum {string} */
    "Sravni.Osago.OrderLifeCycleStatus": "none" | "processingStarted" | "savedInCompany" | "accepted" | "policyReceived";
    "Sravni.Osago.OrderModificationResponse": {
      isSuccess?: boolean;
      comment?: string | null;
    };
    /** @description модель для получения короткой информации и ссылки на полис */
    "Sravni.Osago.OrderTehInfoResult": {
      /**
       * Format: int32
       * @description Идентификатор заказа.
       */
      orderId?: number;
      /** @description Акцептован? */
      isAccepted?: boolean;
      /** @description Аннулирован? */
      isCanceled?: boolean;
      /** @description url на архиф */
      policyLink?: string | null;
      /** @description url на бланк полиса */
      policyBlankLink?: string | null;
      /** @description url на оплату или фрейм */
      paymentUrl?: string | null;
      /** @description Id договора в страховой */
      contractId?: string | null;
      /** @description Номер договора в страховой */
      contractNumber?: string | null;
      /**
       * Format: date-time
       * @description Дата создания заказа
       */
      date?: string;
      /**
       * Format: date-time
       * @description Дата обновления заказа
       */
      dateUpdate?: string;
      /** @description Телефон */
      phone?: string | null;
      /**
       * Format: double
       * @description Цена полиса
       */
      price?: number;
      /** @description ФИО страхователя */
      name?: string | null;
      /** @description ИМЯ страхователя */
      firstName?: string | null;
      /** @description Марка ТС */
      brandName?: string | null;
      /** @description Модель ТС */
      modelName?: string | null;
      /** @description ГРЗ */
      vehicleNumber?: string | null;
      /**
       * Format: date-time
       * @description ДНД полиса
       */
      policyStartDate?: string | null;
      coefficients?: components["schemas"]["Sravni.Osago.Shared.Dto.OsagoCoeffs"];
      /**
       * Format: int32
       * @description Идентификатор СК в заказе.
       */
      companyId?: number;
      /** @description Название страховой компании */
      companyName?: string | null;
      /** @description Доп параметр 3 */
      affSub3?: string | null;
      /** @description Доп параметр 4 */
      affSub4?: string | null;
      /** @description Доп параметр 5 */
      affSub5?: string | null;
      /** @description ссылка на полис upsale */
      upsalePolicyBlankLink?: string | null;
      /** @description номер полиса upsale */
      upsaleContractNumber?: string | null;
      profit?: components["schemas"]["Sravni.Osago.PartnerProfit"];
    };
    /** @description модель для передачи на ThankYouPage */
    "Sravni.Osago.OrdersInfoResult": {
      company?: components["schemas"]["Sravni.Osago.Company"];
      /** @description Номер полиса ОСАГО */
      contractNumber?: string | null;
      /** @description Email пользователя */
      email?: string | null;
      /** @description Имя пользователя */
      name?: string | null;
      /**
       * Format: double
       * @description Цена
       */
      price?: number;
      /** @description ссылка на pdf полиса */
      policyBlankLink?: string | null;
      /** @description ссылка на zip архиф с документами полиса(чек, заявление, прочее) */
      policyDocumentsLink?: string | null;
      /**
       * Format: int32
       * @description продукта осаго Id
       */
      osagoId?: number;
      /**
       * Format: int32
       * @description UserId
       */
      userId?: number | null;
      /** @description Бенефиты */
      benefits?: components["schemas"]["Sravni.Osago.Shared.Dto.ExtendedPromoInfo"][] | null;
    };
    "Sravni.Osago.OsagoEarlyLeadQuery": {
      userPhone?: string | null;
      query?: components["schemas"]["Sravni.Osago.OsagoQuery"];
    };
    "Sravni.Osago.OsagoOrderPatchDto": {
      callCenterJobId?: string | null;
    };
    "Sravni.Osago.OsagoPerson": {
      lastName?: string | null;
      middleName?: string | null;
      firstName?: string | null;
      fullName?: string | null;
      passport?: components["schemas"]["Sravni.Osago.Passport"];
      /** Format: date-time */
      birthDate?: string;
      gender?: components["schemas"]["Sravni.Osago.Sex"];
      phone?: string | null;
      email?: string | null;
      registrationAddress?: string | null;
      /** Format: int32 */
      regionalCenterId?: number | null;
      io?: string | null;
      /** Format: int32 */
      age?: number;
    };
    "Sravni.Osago.OsagoProlongationQuery": {
      partner?: components["schemas"]["Sravni.Osago.PartnerQuery"];
      utm?: components["schemas"]["Sravni.Osago.UtmQuery"];
      insurer?: components["schemas"]["Sravni.Osago.OsagoPerson"];
      /**
       * Format: uuid
       * @description уникальный id пользователя
       */
      xUserId?: string | null;
      /**
       * Format: int32
       * @description Id пользователя в системе сравни.ру
       */
      userId?: number | null;
      /** @description номер договора в ск */
      policyNumber?: string | null;
      /** @description Ключ для запуска офорления Е-ОСАГО в РСА */
      createRsaPolicy?: boolean;
      /** @description серия договора в ск */
      policySeries?: string | null;
      /**
       * Format: int32
       * @description Id страховой компании в системе сравни.ру
       */
      companyId?: number;
      /** @description VIN ТС */
      vin?: string | null;
      /** @description Номер кузова */
      bodyNumber?: string | null;
      /** @description Номер Шасси */
      chassisNumber?: string | null;
      /** @description Для кастомной прометки: например (Основной веб-сайт, новый сайт, мобилка и т.д.) */
      platform?: string | null;
      /**
       * Format: date-time
       * @description Дата окончания прошлого полиса
       */
      policyEndDate?: string | null;
      /** @description Номер ДК */
      dkNumber?: string | null;
      /**
       * Format: date-time
       * @description Дата окончания действия ДК
       */
      dkEndDate?: string | null;
    };
    "Sravni.Osago.OsagoQuery": {
      /** Format: int32 */
      brandId?: number;
      brandName?: string | null;
      modelName?: string | null;
      /** Format: int32 */
      year?: number;
      /** Format: int32 */
      modelId?: number;
      modification?: string | null;
      /** Format: int32 */
      enginePower?: number;
      engineSp?: string | null;
      registrationRoute?: string | null;
      registration?: string | null;
      getting?: string | null;
      gettingRoute?: string | null;
      /** Format: int32 */
      usageMonthsPerYear?: number;
      /** Format: date-time */
      policyStartDate?: string;
      driversInfo?: components["schemas"]["Sravni.Osago.DriversInfo"];
      carNumber?: string | null;
      vin?: string | null;
      bodyNumber?: string | null;
      chassisNumber?: string | null;
      /** Format: uuid */
      xUserId?: string | null;
      /** Format: int32 */
      userId?: number | null;
      owner?: components["schemas"]["Sravni.Osago.OsagoPerson"];
      insurer?: components["schemas"]["Sravni.Osago.OsagoPerson"];
      carDocument?: components["schemas"]["Sravni.Osago.CarDocumentInfo"];
      save?: components["schemas"]["Sravni.Osago.SaveQuery"];
      utm?: components["schemas"]["Sravni.Osago.UtmQuery"];
      partner?: components["schemas"]["Sravni.Osago.PartnerQuery"];
      promotionQuery?: components["schemas"]["Sravni.Osago.PromotionQuery"];
      mobileMarkers?: components["schemas"]["Sravni.Osago.MobileMarkers"];
      returnUrls?: components["schemas"]["Sravni.Osago.ReturnUrls"];
      amplitudeId?: string | null;
      platform?: string | null;
      withCasco?: boolean;
      isProlongation?: boolean;
      fromProlongation?: boolean;
      /** Format: int32 */
      accountPriority?: number | null;
      previousPolicy?: components["schemas"]["Sravni.Osago.PreviousPolicy"];
      prolongationKey?: string | null;
      isQuickSave?: boolean;
      periods?: components["schemas"]["Sravni.Osago.InsurancePeriod"][] | null;
      clid?: string | null;
      vehicleCategory?: components["schemas"]["Sravni.Osago.Shared.Dto.Enums.VehicleCategory"];
      /** Format: int32 */
      allowWeight?: number | null;
      hasTrailer?: boolean;
      isHealthPromo?: boolean;
      benefitCode?: string | null;
    };
    "Sravni.Osago.OsagoQueryViewModel": {
      result?: components["schemas"]["Sravni.Osago.OsagoQuery"];
      error?: string | null;
      hasError?: boolean;
      /** Format: int32 */
      companyId?: number;
      /** Format: date-time */
      orderDate?: string;
      /** Format: date-time */
      orderPolicyStartDate?: string;
      policyDraftLink?: string | null;
      isOffline?: boolean;
      hazyInfo?: string | null;
    };
    "Sravni.Osago.OsagoQueryWithBrandModel": {
      /** Format: int32 */
      brandId?: number;
      brandName?: string | null;
      modelName?: string | null;
      /** Format: int32 */
      year?: number;
      /** Format: int32 */
      modelId?: number;
      modification?: string | null;
      /** Format: int32 */
      enginePower?: number;
      engineSp?: string | null;
      registrationRoute?: string | null;
      registration?: string | null;
      getting?: string | null;
      gettingRoute?: string | null;
      /** Format: int32 */
      usageMonthsPerYear?: number;
      /** Format: date-time */
      policyStartDate?: string;
      driversInfo?: components["schemas"]["Sravni.Osago.DriversInfo"];
      carNumber?: string | null;
      vin?: string | null;
      bodyNumber?: string | null;
      chassisNumber?: string | null;
      /** Format: uuid */
      xUserId?: string | null;
      /** Format: int32 */
      userId?: number | null;
      owner?: components["schemas"]["Sravni.Osago.OsagoPerson"];
      insurer?: components["schemas"]["Sravni.Osago.OsagoPerson"];
      carDocument?: components["schemas"]["Sravni.Osago.CarDocumentInfo"];
      save?: components["schemas"]["Sravni.Osago.SaveQuery"];
      utm?: components["schemas"]["Sravni.Osago.UtmQuery"];
      partner?: components["schemas"]["Sravni.Osago.PartnerQuery"];
      promotionQuery?: components["schemas"]["Sravni.Osago.PromotionQuery"];
      mobileMarkers?: components["schemas"]["Sravni.Osago.MobileMarkers"];
      returnUrls?: components["schemas"]["Sravni.Osago.ReturnUrls"];
      amplitudeId?: string | null;
      platform?: string | null;
      withCasco?: boolean;
      isProlongation?: boolean;
      fromProlongation?: boolean;
      /** Format: int32 */
      accountPriority?: number | null;
      previousPolicy?: components["schemas"]["Sravni.Osago.PreviousPolicy"];
      prolongationKey?: string | null;
      isQuickSave?: boolean;
      periods?: components["schemas"]["Sravni.Osago.InsurancePeriod"][] | null;
      clid?: string | null;
      vehicleCategory?: components["schemas"]["Sravni.Osago.Shared.Dto.Enums.VehicleCategory"];
      /** Format: int32 */
      allowWeight?: number | null;
      hasTrailer?: boolean;
      isHealthPromo?: boolean;
      benefitCode?: string | null;
      /** Format: int32 */
      companyId?: number | null;
    };
    /** @enum {string} */
    "Sravni.Osago.OsagoViewType": "online" | "offline";
    "Sravni.Osago.PartnerProfit": {
      /** Format: double */
      osagoPrice?: number;
      /** Format: double */
      percent?: number;
      /** Format: double */
      profit?: number;
      /** Format: double */
      basePercent?: number;
      /** Format: double */
      upsalePrice?: number;
      /** Format: double */
      upsalePercent?: number;
      /** Format: double */
      upsaleProfit?: number;
    };
    "Sravni.Osago.PartnerQuery": {
      medium?: string | null;
      source?: string | null;
      campaign?: string | null;
      content?: string | null;
      term?: string | null;
      uaClientId?: string | null;
      ymClientId?: string | null;
      /** Format: int32 */
      referId?: number | null;
      allowZeroReward?: boolean | null;
      platform?: string | null;
      subId?: string | null;
      alfaUserId?: string | null;
      renessansUserId?: string | null;
      subagentRoute?: string | null;
      /** Format: int32 */
      affId?: number | null;
      /** Format: int32 */
      offerId?: number | null;
      affSub1?: string | null;
      affSub2?: string | null;
      affSub3?: string | null;
      affSub4?: string | null;
      affSub5?: string | null;
      sourceId?: string | null;
      transactionId?: string | null;
      agentRegion?: string | null;
    };
    /** @description результат ответа на запрос заказов по партнерам */
    "Sravni.Osago.Partners.PartnerOsagoOrderResult": {
      /**
       * Format: int32
       * @description Номер договора
       */
      order_number?: number;
      /**
       * Format: double
       * @description Стоимость ОСАГО
       */
      price?: number;
      /**
       * Format: double
       * @description Профит
       */
      profit?: number;
      /** @description Валюта */
      currency?: string | null;
      /** @description Описание */
      description?: string | null;
      sub_id?: string | null;
      /** @description доп параметр 3 */
      aff_sub3?: string | null;
      /** @description доп параметр 3 */
      aff_sub4?: string | null;
      /** @description доп параметр 3 */
      aff_sub5?: string | null;
      /** @description Статус */
      status?: string | null;
      /**
       * Format: date-time
       * @description Дата обновления договора
       */
      updated_at?: string;
      /** @description Хеш заказа */
      hash?: string | null;
      /** @description СК */
      companyName?: string | null;
      /**
       * Format: date-time
       * @description дата создания
       */
      created_at?: string;
      finalProfit?: components["schemas"]["Sravni.Osago.PartnerProfit"];
      /** @description признак пролонгации для агентского кабинета */
      isProlongationForAk?: boolean;
      /** @description дополнительные параметры заказа */
      additionalProperties?: components["schemas"]["Sravni.Osago.Shared.Dto.OsagoAdditionalProperty"][] | null;
    };
    "Sravni.Osago.Passport": {
      series?: string | null;
      number?: string | null;
      /** Format: date-time */
      issueDate?: string | null;
    };
    "Sravni.Osago.PaymentGateway.Item": {
      productType?: string | null;
      /** Format: int32 */
      price?: number;
      orderId?: string | null;
      description?: string | null;
      vendor?: components["schemas"]["Sravni.Osago.PaymentGateway.Vendor"];
      meta?: components["schemas"]["Sravni.Osago.PaymentGateway.Meta"];
    };
    "Sravni.Osago.PaymentGateway.Meta": {
      policyNumber?: string | null;
      insurer?: string | null;
    };
    "Sravni.Osago.PaymentGateway.Vendor": {
      inn?: string | null;
      name?: string | null;
      /** Format: int32 */
      companyId?: number | null;
      phones?: string[] | null;
    };
    /** @description Статус номера по обзвона колцентром */
    "Sravni.Osago.PhoneCallCenterStatus": {
      /** @description Приостановлена отправка емейлов */
      isEmailSuspended?: boolean;
      /** @description Приостановлена отправка смс */
      isSmsSuspended?: boolean;
      /** @description Приостановлена отправка в КЦ */
      isCCSuspended?: boolean;
    };
    "Sravni.Osago.PreviousDriverInfo": {
      lastName?: string | null;
      middleName?: string | null;
      firstName?: string | null;
      fullName?: string | null;
      license?: components["schemas"]["Sravni.Osago.DriverLicense"];
    };
    "Sravni.Osago.PreviousPolicy": {
      series?: string | null;
      number?: string | null;
      company?: string | null;
      /** Format: int32 */
      companyId?: number;
      /** Format: date-time */
      policyStartDate?: string | null;
      /** Format: date-time */
      policyEndDate?: string | null;
      vin?: string | null;
      carNumber?: string | null;
      bodyNumber?: string | null;
      location?: string | null;
      /** Format: double */
      price?: number | null;
      /** Format: date-time */
      insurantBirthDate?: string | null;
      insurantName?: string | null;
      /** Format: double */
      kbm?: number | null;
      /** Format: date-time */
      ownerBirthDate?: string | null;
      ownerName?: string | null;
      isPurchasedViaSravni?: boolean;
      /** Format: int32 */
      driversCount?: number;
      /** Format: int32 */
      enginePower?: number;
    };
    "Sravni.Osago.PreviousPolicyShort": {
      series?: string | null;
      number?: string | null;
    };
    /** @description Результат запроса печати */
    "Sravni.Osago.Print.PrintResult": {
      /** @description Описание */
      description?: string | null;
      /** @description результат */
      result?: boolean;
      /**
       * Format: byte
       * @description Полис.
       */
      policy?: string | null;
      /** @description Получили ли полис. */
      hasPolicy?: boolean;
      /** @description Документы апсейлов */
      upsaleDocuments?: components["schemas"]["Sravni.Osago.Print.UpsaleDocument"][] | null;
    };
    /** @description Документ апсейла */
    "Sravni.Osago.Print.UpsaleDocument": {
      /**
       * Format: int32
       * @description Id продукта апсейла
       */
      productId?: number;
      /** @description Внешний id апсейла */
      externalId?: string | null;
      /**
       * Format: byte
       * @description Документ апсейла в бинарном виде
       */
      data?: string | null;
    };
    "Sravni.Osago.Product": {
      canRedirect?: boolean;
      canSell?: boolean;
      provider?: components["schemas"]["Sravni.Osago.Shared.Dto.InsuranceProvider"];
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      hasofferId?: number;
      externalUrl?: string | null;
      /** Format: int64 */
      carDocumentType?: number;
      forecast?: string | null;
      /** Format: int32 */
      order?: number;
      /** Format: int32 */
      franchise?: number;
    };
    "Sravni.Osago.Prolongation.MaskedDriver": {
      lastName?: string | null;
      middleName?: string | null;
      firstName?: string | null;
      fullName?: string | null;
      /**
       * Format: int64
       * @description Идентификатор
       */
      id?: number;
      /** @description Дата рождения */
      birthDate?: string | null;
      license?: components["schemas"]["Sravni.Osago.Prolongation.MaskedLicense"];
      passport?: components["schemas"]["Sravni.Osago.Prolongation.MaskedPassport"];
    };
    "Sravni.Osago.Prolongation.MaskedLicense": {
      /** @description серия */
      series?: string | null;
      /** @description номер */
      number?: string | null;
      /** @description Дата выдачи */
      issueDate?: string | null;
    };
    "Sravni.Osago.Prolongation.MaskedPassport": {
      series?: string | null;
      number?: string | null;
      /** @description Дата выдачи */
      issueDate?: string | null;
    };
    "Sravni.Osago.Prolongation.MaskedPerson": {
      lastName?: string | null;
      middleName?: string | null;
      firstName?: string | null;
      fullName?: string | null;
      /** @description Дата рождения */
      birthDate?: string | null;
      passport?: components["schemas"]["Sravni.Osago.Prolongation.MaskedPassport"];
      /** @description Адрес регистрации */
      registrationAddress?: string | null;
    };
    /** @description Информация по пролонгации, возвращаемая !:IProlongationProvider */
    "Sravni.Osago.Prolongation.ProlongationInfo": {
      osagoQuery?: components["schemas"]["Sravni.Osago.OsagoQuery"];
      /** @description Номер прошлого полиса */
      lastPolicyNumber?: string | null;
      /** @description Серия прошлого полиса */
      lastPolicySeries?: string | null;
      /** @description Номер прошлого полиса (с серией, если есть) */
      lastPolicyCompanyName?: string | null;
      /**
       * Format: date-time
       * @description Дата начала прошлого полиса
       */
      lastPolicyStartDate?: string | null;
      /**
       * Format: int32
       * @description ИД СК - источника данных (0 - данные базы сравни.ру)
       */
      dataSourceCompanyId?: number;
      /**
       * Format: double
       * @description Цена если известно
       */
      price?: number;
    };
    /** @description запрос для получения данных по прошлому полису */
    "Sravni.Osago.Prolongation.ProlongationInfoByPolicyRequest": {
      previousPolicy?: components["schemas"]["Sravni.Osago.PreviousPolicyShort"];
      fio?: components["schemas"]["Sravni.Osago.Fio"];
    };
    /**
     * @description Тип говорящи что с данными
     * @enum {string}
     */
    "Sravni.Osago.Prolongation.ProlongationInfoByPolicyResponceStatusType": "notFound" | "found" | "foundNotValid";
    /** @description данные по прошлому полису */
    "Sravni.Osago.Prolongation.ProlongationInfoByPolicyResponse": {
      prolongationInfo?: components["schemas"]["Sravni.Osago.Prolongation.ProlongationInfo"];
      status?: components["schemas"]["Sravni.Osago.Prolongation.ProlongationInfoByPolicyResponceStatusType"];
    };
    /** @description запрос на данные пролонгации по номеру авто */
    "Sravni.Osago.Prolongation.ProlongationKeyRequest": {
      /** @description Номер автомобиля */
      carNumber?: string | null;
      utm?: components["schemas"]["Sravni.Osago.UtmQuery"];
    };
    /** @description Результат пролонгации с данными для первых шагов */
    "Sravni.Osago.Prolongation.ProlongationKeyResult": {
      /** @description Ключ пролонгации */
      prolongationKey?: string | null;
      brand?: components["schemas"]["Sravni.Osago.BrandInfo"];
      model?: components["schemas"]["Sravni.Osago.ModelInfo"];
      /** @description VIN ТС */
      vin?: string | null;
      /** @description номер кузова */
      bodyNumber?: string | null;
      /** @description Номер Шасси */
      chassisNumber?: string | null;
      /** @description Номер автомобиля */
      carNumber?: string | null;
      /**
       * Format: int32
       * @description год выпуска ТС
       */
      year?: number;
      /**
       * Format: int32
       * @description мощность ТС
       */
      power?: number;
    };
    /** @description Данные для проверки пользователя по данным пролонгации */
    "Sravni.Osago.Prolongation.ProlongationUserCheckData": {
      /** @description Ключ пролонгации */
      prolongationKey?: string | null;
      /** @description ФИО */
      firstName?: string | null;
      lastName?: string | null;
      middleName?: string | null;
      /**
       * Format: date-time
       * @description Дата рождения
       */
      birthDate?: string | null;
      /** @description Серия паспорта */
      passportSerial?: string | null;
      /** @description Номер паспорта */
      passportNumber?: string | null;
      /** @description Водители */
      driverList?: components["schemas"]["Sravni.Osago.Prolongation.ProlongationUserDriverCheckData"][] | null;
    };
    /** @description Данные водителей для проверки */
    "Sravni.Osago.Prolongation.ProlongationUserDriverCheckData": {
      /** @description ФИО */
      firstName?: string | null;
      lastName?: string | null;
      middleName?: string | null;
      /**
       * Format: date-time
       * @description Дата рождения
       */
      birthDate?: string;
      license?: components["schemas"]["Sravni.Osago.DriverLicense"];
    };
    /** @description Данные пользователя для пролонгации */
    "Sravni.Osago.Prolongation.ProlongationUserInfo": {
      /**
       * Format: int32
       * @description ИД компании - источника данных для пролонгации
       */
      companyId?: number;
      /** @description Успешная проверка для отображения персональных данных */
      isWithPersonal?: boolean;
      owner?: components["schemas"]["Sravni.Osago.Prolongation.MaskedPerson"];
      insurer?: components["schemas"]["Sravni.Osago.Prolongation.MaskedPerson"];
      /** @description Номер прошлого полиса */
      lastPolicyNum?: string | null;
      /**
       * Format: date-time
       * @description Дата прошлого полиса
       */
      lastPolicyDate?: string | null;
      /** @description Название компании прошлого полиса */
      lastPolicyCompanyName?: string | null;
      /** @description населенный пункт регистрации */
      registration?: string | null;
      /** @description населенный пункт получения */
      getting?: string | null;
      driverAmount?: components["schemas"]["Sravni.Osago.DriverAmount"];
      /** @description список водителей */
      drivers?: components["schemas"]["Sravni.Osago.Prolongation.MaskedDriver"][] | null;
      /**
       * Format: date-time
       * @description Период страхования
       */
      nextPolicyStartDate?: string;
      /** Format: date-time */
      nextPolicyEndDate?: string;
      /**
       * Format: date-time
       * @description Дата выдачи документа на машину
       */
      carDocumentDate?: string | null;
    };
    "Sravni.Osago.PromotionQuery": {
      source?: string | null;
      campaign?: string | null;
      category?: string | null;
      sub1?: string | null;
      sub2?: string | null;
    };
    /** @description Ссылка для редиректа */
    "Sravni.Osago.RedirectLink": {
      /**
       * @description Ссылка
       * Если есть возможность оплатить, то на оплату
       * Иначе - на выдачу
       */
      url?: string | null;
    };
    /** @description Модель для вывода части списка с указанием */
    "Sravni.Osago.ResultModel`1[[Sravni.Osago.Agentka.OrderDto, Sravni.Osago.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      result?: components["schemas"]["Sravni.Osago.Agentka.OrderDto"][] | null;
      error?: string | null;
      hasError?: boolean;
      /**
       * Format: int32
       * @description общее количество записей
       */
      total?: number;
    };
    /** @description Модель для вывода части списка с указанием */
    "Sravni.Osago.ResultModel`1[[Sravni.Osago.LastUserOrderInfo, Sravni.Osago.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      result?: components["schemas"]["Sravni.Osago.LastUserOrderInfo"][] | null;
      error?: string | null;
      hasError?: boolean;
      /**
       * Format: int32
       * @description общее количество записей
       */
      total?: number;
    };
    /** @description Модель для вывода части списка с указанием */
    "Sravni.Osago.ResultModel`1[[Sravni.Osago.LastUserSearchInfo, Sravni.Osago.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      result?: components["schemas"]["Sravni.Osago.LastUserSearchInfo"][] | null;
      error?: string | null;
      hasError?: boolean;
      /**
       * Format: int32
       * @description общее количество записей
       */
      total?: number;
    };
    /** @description Модель для вывода части списка с указанием */
    "Sravni.Osago.ResultModel`1[[Sravni.Osago.UserOrderInfo, Sravni.Osago.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      result?: components["schemas"]["Sravni.Osago.UserOrderInfo"][] | null;
      error?: string | null;
      hasError?: boolean;
      /**
       * Format: int32
       * @description общее количество записей
       */
      total?: number;
    };
    /** @description Модель для вывода части списка с указанием */
    "Sravni.Osago.ResultModel`1[[Sravni.Osago.UserSearchInfo, Sravni.Osago.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      result?: components["schemas"]["Sravni.Osago.UserSearchInfo"][] | null;
      error?: string | null;
      hasError?: boolean;
      /**
       * Format: int32
       * @description общее количество записей
       */
      total?: number;
    };
    "Sravni.Osago.ReturnUrls": {
      succesUrl?: string | null;
      failureUrl?: string | null;
    };
    "Sravni.Osago.SaveQuery": {
      /** Format: int32 */
      productId?: number;
      /** Format: int64 */
      searchId?: number;
      isRoute?: boolean;
      /** Format: int32 */
      originalCompanyId?: number | null;
      isTrySave?: boolean;
      isThroughOrder?: boolean;
      /** Format: int32 */
      requiredOsagoUpsaleId?: number | null;
    };
    "Sravni.Osago.SaveQueryResult": {
      /** Format: int64 */
      id?: number;
      hash?: string | null;
    };
    /** @enum {string} */
    "Sravni.Osago.SaveResultType": "none" | "ok" | "error" | "noPrice" | "timeOut" | "userError" | "sap" | "incorrectSmsCode";
    /** @description Запрос на отправку ссылки на расчет по электронной почте */
    "Sravni.Osago.SendCalcLinkRequest": {
      /**
       * Format: int64
       * @description Полный запрос на расчет ОСАГО
       */
      calculationId?: number;
      query?: components["schemas"]["Sravni.Osago.OsagoQuery"];
      /** @description Электронная почта, на которую следует отправить письмо со ссылкой */
      email?: string | null;
      /**
       * Format: int32
       * @description Номер шага, с которого выполняется отправка ссылки в письме
       */
      step?: number;
    };
    /** @description Запрос на отправку ссылки на расчет по смс */
    "Sravni.Osago.SendCalcLinkViaSmsRequest": {
      query?: components["schemas"]["Sravni.Osago.OsagoQuery"];
      /** @description Номер телефона, на который следует отправить СМС со ссылкой */
      phoneNumber?: string | null;
      /** @description Полный запрос на расчет ОСАГО */
      searchHash?: string | null;
    };
    /** @enum {string} */
    "Sravni.Osago.Sex": "unknown" | "male" | "female";
    "Sravni.Osago.Shared.Dto.Api.BrandEntityBinding": {
      catalogueName?: string | null;
      companyName?: string | null;
      /** Format: int32 */
      id?: number;
      models?: components["schemas"]["Sravni.Osago.Shared.Dto.Api.EntityBinding"][] | null;
    };
    "Sravni.Osago.Shared.Dto.Api.CompanyVehicleBase": {
      type?: string | null;
      name?: string | null;
    };
    "Sravni.Osago.Shared.Dto.Api.CompanyVehicleBrand": {
      type?: string | null;
      name?: string | null;
      code?: string | null;
      models?: components["schemas"]["Sravni.Osago.Shared.Dto.Api.CompanyVehicleBase"][] | null;
    };
    "Sravni.Osago.Shared.Dto.Api.CompanyVehicles": {
      /** Format: int32 */
      companyId?: number;
      brands?: components["schemas"]["Sravni.Osago.Shared.Dto.Api.CompanyVehicleBrand"][] | null;
    };
    "Sravni.Osago.Shared.Dto.Api.ContactInfo": {
      email?: string | null;
      phone?: string | null;
    };
    "Sravni.Osago.Shared.Dto.Api.CreateNameBindingResponse": {
      /** Format: int32 */
      result?: number;
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.Shared.Dto.Api.EntityBinding": {
      catalogueName?: string | null;
      companyName?: string | null;
      /** Format: int32 */
      id?: number;
    };
    "Sravni.Osago.Shared.Dto.Api.InflightResult": {
      isSuccess?: boolean;
      errors?: string[] | null;
    };
    "Sravni.Osago.Shared.Dto.Api.NameBinding": {
      catalogueName?: string | null;
      companyName?: string | null;
    };
    "Sravni.Osago.Shared.Dto.Api.ProlongationDriverModel": {
      fullName?: string | null;
    };
    "Sravni.Osago.Shared.Dto.Api.RemoveNameBindingResponse": {
      result?: boolean;
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.Shared.Dto.Api.SendCommunicationRequest": {
      isInstant?: boolean;
      /** Format: int64 */
      communicationType: number;
    };
    "Sravni.Osago.Shared.Dto.Api.SendCommunicationResult": {
      state?: components["schemas"]["Sravni.Osago.Shared.Dto.Enums.CommunicationResultState"];
    };
    "Sravni.Osago.Shared.Dto.Api.SendPolicyByPhoneCommand": {
      phone?: string | null;
    };
    "Sravni.Osago.Shared.Dto.Api.UpdateNameBindingResponse": {
      result?: boolean;
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.Shared.Dto.Api.VehicleMappings": {
      /** Format: int32 */
      companyId?: number;
      brands?: components["schemas"]["Sravni.Osago.Shared.Dto.Api.BrandEntityBinding"][] | null;
    };
    /** @enum {string} */
    "Sravni.Osago.Shared.Dto.Api.VehicleSynonymSearchType": "id" | "catalogueName";
    "Sravni.Osago.Shared.Dto.BackOffice.CreateErrorModelResponse": {
      result?: string | null;
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.CreateErrorsGroupModelResponse": {
      result?: string | null;
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.DeleteErrorModelResponse": {
      result?: boolean;
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.DeleteErrorsGroupModelResponse": {
      result?: boolean;
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.ErrorRuleDetailModel": {
      name?: string | null;
      /** Format: int32 */
      companyId?: number;
      regex?: string | null;
      /** Format: int32 */
      sravniErrorId?: number;
      hash?: string | null;
      source?: string | null;
      show?: boolean;
      text?: string | null;
      sravniErrorModel?: components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorDetailModel"];
      companyName?: string | null;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.ErrorRuleInformationQuery": {
      errorRuleName?: string | null;
      sravniErrorName?: string | null;
      regex?: string | null;
      /** Format: int32 */
      companyId?: number;
      source?: string | null;
      online?: string | null;
      offline?: string | null;
      powerBI?: string | null;
      show?: boolean | null;
      text?: string | null;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.ErrorRuleModel": {
      name?: string | null;
      /** Format: int32 */
      companyId?: number;
      regex?: string | null;
      /** Format: int32 */
      sravniErrorId?: number;
      hash?: string | null;
      source?: string | null;
      show?: boolean;
      text?: string | null;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.ErrorRulePageQuery": {
      informationQuery?: components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRuleInformationQuery"];
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      pageSize?: number;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.ErrorRuleResponse": {
      result?: components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRuleDetailModel"];
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.ErrorRulesResponse": {
      items?: components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorRuleDetailModel"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      pageSize?: number;
      /** Format: int32 */
      total?: number;
      error?: string | null;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupDetailModel": {
      name?: string | null;
      /** Format: int32 */
      id?: number;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupModel": {
      name?: string | null;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupResponse": {
      result?: components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupDetailModel"];
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupUpdateRequest": {
      name?: string | null;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupsResponse": {
      items?: components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupDetailModel"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      pageSize?: number;
      /** Format: int32 */
      total?: number;
      error?: string | null;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.InsuranceCompany": {
      companyId?: string | null;
      name?: string | null;
      code?: string | null;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.SravniErrorDetailModel": {
      name?: string | null;
      online?: string | null;
      offline?: string | null;
      powerBI?: string | null;
      groupId?: string | null;
      hash?: string | null;
      /** Format: int32 */
      id?: number;
      errorsGroupModel?: components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.ErrorsGroupDetailModel"];
    };
    "Sravni.Osago.Shared.Dto.BackOffice.SravniErrorInformationQuery": {
      groupName?: string | null;
      name?: string | null;
      online?: string | null;
      offline?: string | null;
      powerBI?: string | null;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.SravniErrorModel": {
      name?: string | null;
      online?: string | null;
      offline?: string | null;
      powerBI?: string | null;
      groupId?: string | null;
      hash?: string | null;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.SravniErrorResponse": {
      result?: components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorDetailModel"];
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.SravniErrorsResponse": {
      items?: components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorDetailModel"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      pageSize?: number;
      /** Format: int32 */
      total?: number;
      error?: string | null;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.SravniPageErrorQuery": {
      informationQuery?: components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.SravniErrorInformationQuery"];
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      pageSize?: number;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.UpdateErrorModelResponse": {
      result?: boolean;
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.Shared.Dto.BackOffice.UpdateErrorsGroupModelResponse": {
      result?: boolean;
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.Shared.Dto.BonusInfo": {
      bonusValue?: string | null;
      bonusUnit?: string | null;
      bonusDescription?: string | null;
      servicePlace?: string | null;
    };
    "Sravni.Osago.Shared.Dto.Communication.UserCommunicationDto": {
      /** Format: int64 */
      id?: number;
      userEmail?: string | null;
      userPhone?: string | null;
      userName?: string | null;
      regNumber?: string | null;
      vin?: string | null;
      /** Format: date-time */
      createdDate?: string;
      /** Format: date-time */
      communicationDate?: string;
      /** Format: date-time */
      processingDate?: string;
      entityObject?: string | null;
      /** Format: int64 */
      entityObjectId?: number;
      channel?: components["schemas"]["Sravni.Osago.Shared.Dto.Enums.UserCommunicationChannel"];
      templateName?: string | null;
      communicationObject?: string | null;
      status?: components["schemas"]["Sravni.Osago.Shared.Dto.Enums.UserCommunicationStatus"];
      statusDescription?: string | null;
      externalId?: string | null;
      isTransactional?: boolean;
      isSkip?: boolean;
    };
    "Sravni.Osago.Shared.Dto.Communication.UserCommunicationWithAddressDto": {
      userCommunicationDto?: components["schemas"]["Sravni.Osago.Shared.Dto.Communication.UserCommunicationDto"];
      address?: string | null;
    };
    "Sravni.Osago.Shared.Dto.CompanySales": {
      /** Format: int32 */
      companyId?: number;
      /** Format: int32 */
      orderCount?: number;
    };
    "Sravni.Osago.Shared.Dto.Dto.AdditionalOfferAnswerDto": {
      isCascoAccepted?: boolean | null;
      isAgentAccepted?: boolean | null;
    };
    "Sravni.Osago.Shared.Dto.Dto.AdditionalOfferDto": {
      redirects?: components["schemas"]["Sravni.Osago.Shared.Dto.Dto.AdditionalOfferOsagoDto"][] | null;
      canSendToAgent?: boolean;
      /** Format: int32 */
      cascoShowOption?: number;
    };
    "Sravni.Osago.Shared.Dto.Dto.AdditionalOfferOsagoDto": {
      /** Format: int32 */
      osagoId?: number;
      /** Format: int32 */
      companyId?: number;
      redirectUrl?: string | null;
      /** Format: double */
      price?: number;
    };
    "Sravni.Osago.Shared.Dto.Dto.Mobile.UserProlongationDto": {
      /** Format: date-time */
      minDate?: string;
      /** Format: date-time */
      maxDate?: string;
      /** Format: double */
      kbm?: number;
      /** Format: int32 */
      companyId?: number;
      brand?: string | null;
      model?: string | null;
      query?: components["schemas"]["Sravni.Osago.OsagoQuery"];
    };
    "Sravni.Osago.Shared.Dto.Dto.Mobile.UserProlongationListItemDto": {
      orderHash?: string | null;
      carNumber?: string | null;
      brand?: string | null;
      model?: string | null;
      /** Format: int32 */
      year?: number;
      /** Format: date-time */
      policyEndDate?: string;
    };
    "Sravni.Osago.Shared.Dto.Dto.Order.InfoModelByPhoneNumberModel": {
      acceptedPolicy?: boolean | null;
      acceptedPolicyResult?: components["schemas"]["Sravni.Osago.Shared.Dto.Dto.Order.LastOrderModel"];
      haveCalculations?: boolean | null;
      isSegment?: boolean | null;
    };
    "Sravni.Osago.Shared.Dto.Dto.Order.LastOrderModel": {
      /** Format: date-time */
      policyStartDate?: string;
      /** Format: int32 */
      companyId?: number;
      companyName?: string | null;
    };
    "Sravni.Osago.Shared.Dto.Dto.Order.LoadPromoOptions": {
      loadMode?: string | null;
      promoBase64?: string | null;
    };
    "Sravni.Osago.Shared.Dto.Dto.Order.ProlongationOrderModel": {
      maskedPhone?: string | null;
      userName?: string | null;
      brandName?: string | null;
      modelName?: string | null;
      orderHash?: string | null;
      companyName?: string | null;
      previousPolicyNumber?: string | null;
      /** Format: date-time */
      policyEndDate?: string;
      /** Format: int32 */
      vehicleYear?: number;
      /** Format: int32 */
      driversCount?: number;
      drivers?: components["schemas"]["Sravni.Osago.Shared.Dto.Api.ProlongationDriverModel"][] | null;
    };
    "Sravni.Osago.Shared.Dto.Dto.Order.ProlongationRequestModel": {
      carNumber?: string | null;
      phone?: string | null;
      utm?: components["schemas"]["Sravni.Osago.UtmQuery"];
    };
    "Sravni.Osago.Shared.Dto.Dto.OsagoProlongationCommissionDto": {
      /** Format: int32 */
      id?: number;
      /** Format: date-time */
      dateFrom?: string;
      /** Format: date-time */
      dateTo?: string | null;
      /** Format: int32 */
      companyId?: number;
      locationRoute?: string | null;
      /** Format: int32 */
      osagoId?: number;
      /** Format: double */
      k0Level?: number;
      /** Format: double */
      k1Level?: number;
      /** Format: double */
      k2Level?: number;
      /** Format: double */
      k3Level?: number;
      /** Format: double */
      k4Level?: number;
      /** Format: double */
      commissionPlus?: number;
    };
    "Sravni.Osago.Shared.Dto.Dto.OsagoVehicleInfoResult": {
      brand?: components["schemas"]["Sravni.Osago.BrandInfo"];
      model?: components["schemas"]["Sravni.Osago.ModelInfo"];
      vin?: string | null;
      bodyNumber?: string | null;
      chassisNumber?: string | null;
      carNumber?: string | null;
      /** Format: int32 */
      year?: number;
      /** Format: int32 */
      power?: number;
      error?: string | null;
      isTaxi?: boolean;
      vehicleDocument?: components["schemas"]["Sravni.Osago.CarDocumentInfo"];
      recommendedStartDate?: components["schemas"]["Sravni.Osago.Shared.Dto.RecommendedStartDateDto"];
    };
    "Sravni.Osago.Shared.Dto.Dto.SendPaymentUrlResponse": {
      isSent?: boolean;
      errors?: string[] | null;
    };
    /** @enum {string} */
    "Sravni.Osago.Shared.Dto.Enums.CommunicationResultState": "none" | "notSent" | "sent" | "skipped" | "faulted";
    /** @enum {string} */
    "Sravni.Osago.Shared.Dto.Enums.CommunicationType": "phone" | "email";
    /** @enum {string} */
    "Sravni.Osago.Shared.Dto.Enums.CrmStatus": "removeProlongationSetNotSale" | "removeProlongationNotSetNotSale";
    /** @enum {string} */
    "Sravni.Osago.Shared.Dto.Enums.EgarantRequestState": "created" | "linked" | "success" | "fail" | "inProgress";
    /** @enum {string} */
    "Sravni.Osago.Shared.Dto.Enums.RegistrationState": "none" | "accepted" | "terminated" | "lesion" | "addendum";
    /** @enum {string} */
    "Sravni.Osago.Shared.Dto.Enums.TerminationAction": "removeOrderAcceptance";
    /** @enum {string} */
    "Sravni.Osago.Shared.Dto.Enums.UserCommunicationChannel": "email" | "sms" | "callCenter" | "mobilePush" | "robocall";
    /** @enum {string} */
    "Sravni.Osago.Shared.Dto.Enums.UserCommunicationStatus": "none" | "sent" | "notSent";
    /** @enum {string} */
    "Sravni.Osago.Shared.Dto.Enums.VehicleCategory": "b" | "c" | "a" | "d" | "e";
    "Sravni.Osago.Shared.Dto.ExtendedPromoInfo": {
      code?: string | null;
      /** Format: int32 */
      activationCount?: number;
      productType?: components["schemas"]["Sravni.OsagoPromo.Shared.Enums.ProductType"];
      /** Format: date-time */
      dateCreate?: string;
      isActive?: boolean;
      name?: string | null;
      description?: string | null;
      promoPartner?: components["schemas"]["Sravni.OsagoPromo.Shared.Enums.PromoPartner"];
      /** Format: double */
      benefitValue?: number;
      benefitType?: components["schemas"]["Sravni.OsagoPromo.Shared.Enums.BenefitType"];
      /** Format: date-time */
      dateFrom?: string;
      /** Format: date-time */
      expirationDate?: string;
      /** Format: int32 */
      programId?: number;
      programIsExtended?: boolean;
      geos?: components["schemas"]["Sravni.OsagoPromo.Shared.Models.PromoGeo"][] | null;
      organisations?: components["schemas"]["Sravni.OsagoPromo.Shared.Models.PromoOrganisation"][] | null;
      /** Format: int32 */
      amount?: number;
      isApplicableToZeroIncome?: boolean;
    };
    "Sravni.Osago.Shared.Dto.ExternalPromoData": {
      title?: string | null;
      description?: string[] | null;
    };
    "Sravni.Osago.Shared.Dto.FunnelStepInfo": {
      stepType?: string | null;
      stepName?: string | null;
      /** Format: int32 */
      stepNumber?: number;
      entityType?: string | null;
      entityId?: string | null;
      query?: components["schemas"]["Sravni.Osago.OsagoQuery"];
    };
    "Sravni.Osago.Shared.Dto.InsuranceProvider": {
      /** Format: int32 */
      id?: number;
      code?: string | null;
    };
    "Sravni.Osago.Shared.Dto.Order.LoadFileResponse": {
      url?: string | null;
      errors?: string[] | null;
    };
    "Sravni.Osago.Shared.Dto.Order.OrderPolicyLoadInfoDto": {
      policyLink?: string | null;
      archiveLink?: string | null;
      policyNumber?: string | null;
    };
    "Sravni.Osago.Shared.Dto.Order.OrderSuccessInfoDto": {
      firstUserName?: string | null;
      userEmail?: string | null;
      brandName?: string | null;
      modelName?: string | null;
      /** Format: date-time */
      policyStartDate?: string;
      /** Format: date-time */
      policyEndDate?: string;
    };
    "Sravni.Osago.Shared.Dto.Order.ProlongationOrderLightDto": {
      /** Format: int64 */
      id?: number;
      isAccepted?: boolean;
      /** Format: date-time */
      policyStartDate?: string;
      userPhone?: string | null;
      userEmail?: string | null;
      /** Format: int32 */
      companyId?: number;
      /** Format: int32 */
      osagoId?: number;
      externalContractNumber?: string | null;
      campaignMedium?: string | null;
      partnerCampaignMedium?: string | null;
      vin?: string | null;
      carNumber?: string | null;
      /** Format: int32 */
      queueId?: number;
    };
    "Sravni.Osago.Shared.Dto.OrderCommunicationInfo": {
      promoCodes?: components["schemas"]["Sravni.Osago.Shared.Dto.OrderCommunicationInfo+PromoCodeSendingInfoDto"][] | null;
      proxy?: components["schemas"]["Sravni.Osago.Shared.Dto.OrderCommunicationInfo+ProxyInfo"];
      callCenter?: components["schemas"]["Sravni.Osago.Shared.Dto.OrderCommunicationInfo+CallCenterCallInfo"];
    };
    "Sravni.Osago.Shared.Dto.OrderCommunicationInfo+CallCenterCallInfo": {
      status?: string | null;
      comment?: string | null;
      /** Format: date-time */
      date?: string | null;
    };
    "Sravni.Osago.Shared.Dto.OrderCommunicationInfo+PromoCodeSendingInfoDto": {
      program?: string | null;
      code?: string | null;
      /** Format: date-time */
      sendingDate?: string;
    };
    "Sravni.Osago.Shared.Dto.OrderCommunicationInfo+ProxyInfo": {
      proxyEmail?: string | null;
    };
    "Sravni.Osago.Shared.Dto.OrderHashCompanyDto": {
      hash?: string | null;
      /** Format: int32 */
      companyId?: number;
    };
    /** @enum {string} */
    "Sravni.Osago.Shared.Dto.OsagoAcquiringType": "external" | "sravniTinkoff" | "sravniDolyame";
    "Sravni.Osago.Shared.Dto.OsagoAdditionalProperty": {
      key?: string | null;
      value?: string | null;
    };
    "Sravni.Osago.Shared.Dto.OsagoCoeffs": {
      /** Format: double */
      tb?: number;
      /** Format: double */
      kt?: number;
      /** Format: double */
      kbm?: number;
      /** Format: double */
      kvs?: number;
      /** Format: double */
      ks?: number;
      /** Format: double */
      kp?: number;
      /** Format: double */
      km?: number;
      /** Format: double */
      kn?: number;
      /** Format: double */
      ko?: number;
      /** Format: double */
      kpr?: number;
    };
    "Sravni.Osago.Shared.Dto.OsagoCompanyRequestDto": {
      /** Format: int64 */
      id?: number;
      /** Format: int32 */
      osagoId?: number;
      /** Format: int32 */
      companyId?: number;
      /** Format: date-time */
      date?: string;
      /** Format: int32 */
      entityType?: number;
      /** Format: int64 */
      entityId?: number;
    };
    /** @enum {string} */
    "Sravni.Osago.Shared.Dto.OsagoPaymentStatus": "none" | "refunded" | "paid" | "error";
    "Sravni.Osago.Shared.Dto.PartnerAbout": {
      name?: string | null;
      description?: string | null;
      logoMinUrl?: string | null;
      advertisingName?: string | null;
      advertisingToken?: string | null;
    };
    /** @enum {string} */
    "Sravni.Osago.Shared.Dto.ProlongationDays": "daysToSendNotSaleToCc" | "daysToSendThirdResaleEmailAndSecondNotSaleEmail" | "daysToSendThirdResalePushAndNotSaleSms" | "daysToSendSecondResaleEmailAndResaleSms" | "daysToSendSecondResalePushAndNotSaleSms" | "daysToSendFirstResaleEmailAndFirstNotSaleEmail" | "daysToSendFirstResalePush" | "sendAgentEmails" | "daysToSendFourthResaleEmail";
    "Sravni.Osago.Shared.Dto.ProlongationEventDataDto": {
      orderHash?: string | null;
      utm?: string | null;
      communicationType?: string | null;
      campaignName?: string | null;
      /** Format: date-time */
      policyStartDate?: string | null;
    };
    "Sravni.Osago.Shared.Dto.PromoProgramDto": {
      code?: string | null;
      title?: string | null;
      shortPromoInfo?: string | null;
      description?: string | null;
      subDescription?: string | null;
      logoUrl?: string | null;
      logoBigUrl?: string | null;
      ruleUrl?: string | null;
      externalRuleUrl?: string | null;
      bonusInfo?: components["schemas"]["Sravni.Osago.Shared.Dto.BonusInfo"];
      about?: components["schemas"]["Sravni.Osago.Shared.Dto.PartnerAbout"];
      isGeneral?: boolean;
      /** Format: date-time */
      expirationDate?: string;
      data?: components["schemas"]["Sravni.Osago.Shared.Dto.ExternalPromoData"][] | null;
      needSendToOrderService?: boolean;
      needCreateGiftNotInsuranceCross?: boolean;
    };
    "Sravni.Osago.Shared.Dto.QuickPriceInfoDto": {
      /** Format: int32 */
      minPrice?: number;
      /** Format: int32 */
      medianPrice?: number;
      /** Format: int32 */
      maxPrice?: number;
    };
    "Sravni.Osago.Shared.Dto.RecommendedStartDateDto": {
      /** Format: date-time */
      startDate?: string;
      isByPolicy?: boolean;
      isByEarlyOrder?: boolean;
      insCompanyName?: string | null;
      /** Format: int32 */
      insCompanyId?: number;
      lastPolicyNumber?: string | null;
      /** Format: double */
      lastPolicyPrice?: number;
      /** Format: date-time */
      lastPolicyEndDate?: string | null;
      /** Format: double */
      lastPolicyKbm?: number;
    };
    "Sravni.Osago.Shared.Dto.RegNumberMarkerDto": {
      regNumber?: string | null;
      vin?: string | null;
      /** Format: int32 */
      userId?: number | null;
      utm?: components["schemas"]["Sravni.Osago.UtmQuery"];
      partner?: components["schemas"]["Sravni.Osago.PartnerQuery"];
      promotion?: components["schemas"]["Sravni.Osago.PromotionQuery"];
    };
    "Sravni.Osago.Shared.Dto.ShortProlongation.ShortProlongationCompanyInfo": {
      /** Format: int32 */
      companyId?: number;
      companyName?: string | null;
      availableFields?: components["schemas"]["Sravni.Osago.Shared.Dto.ShortProlongation.ShortProlongationField"][] | null;
    };
    /** @enum {string} */
    "Sravni.Osago.Shared.Dto.ShortProlongation.ShortProlongationField": "fio" | "birthDate" | "passport" | "previousPolicy" | "carIdentifier" | "email" | "phone";
    "Sravni.Osago.Shared.Dto.ShortProlongation.ShortProlongationPolicyInfo": {
      company?: components["schemas"]["Sravni.Osago.Shared.Dto.ShortProlongation.ShortProlongationCompanyInfo"];
      /** @description Бренд авто */
      brand?: string | null;
      /** @description Модель авто */
      model?: string | null;
      /** @description Номер полиса */
      policyNumber?: string | null;
      /** @description ГРЗ */
      carNumber?: string | null;
      /**
       * Format: date-time
       * @description Дата окончания полиса
       */
      policyEndDate?: string | null;
      /**
       * Format: int32
       * @description Количество водителей
       */
      driversAmount?: number;
      /**
       * Format: double
       * @description Цена
       */
      price?: number;
    };
    "Sravni.Osago.Shared.Dto.ShortProlongation.ShortProlongationPolicyInfoRequest": {
      carNumber?: string | null;
      policyNumber?: string | null;
      utm?: components["schemas"]["Sravni.Osago.UtmQuery"];
    };
    "Sravni.Osago.Shared.Dto.UpsaleResult": {
      /** Format: int32 */
      productId?: number;
      productName?: string | null;
      productDescription?: string | null;
      /** Format: double */
      price?: number;
      /** Format: double */
      commission?: number;
      externalId?: string | null;
      externalPid?: string | null;
      contractNumber?: string | null;
      /** Format: int32 */
      credentialId?: number | null;
      draftPolicyBlankLink?: string | null;
    };
    "Sravni.Osago.Shared.Dto.UserEventDto": {
      eventName?: string | null;
      /** Format: int64 */
      searchId?: number | null;
      orderHash?: string | null;
      query?: components["schemas"]["Sravni.Osago.OsagoQuery"];
      prolongationData?: components["schemas"]["Sravni.Osago.Shared.Dto.ProlongationEventDataDto"];
      quickPriceInfo?: components["schemas"]["Sravni.Osago.Shared.Dto.QuickPriceInfoDto"];
    };
    "Sravni.Osago.Shared.Dto.X.OsagoOrderCrossDto": {
      externalId?: string | null;
      /** Format: int32 */
      xType?: number;
      name?: string | null;
      policyNumber?: string | null;
      policyLink?: string | null;
      /** Format: double */
      price?: number;
      isAccepted?: boolean;
      /** Format: int32 */
      userId?: number;
      mainEntityId?: string | null;
      /** Format: date-time */
      dateStart?: string;
      /** Format: date-time */
      dateEnd?: string;
    };
    "Sravni.Osago.ShowPromoDto": {
      canShow?: boolean;
    };
    "Sravni.Osago.TerminationRequest": {
      policyNumber?: string | null;
      reason?: string | null;
      /** Format: date-time */
      terminationDate?: string | null;
      actions?: components["schemas"]["Sravni.Osago.Shared.Dto.Enums.TerminationAction"][] | null;
    };
    /** @description Продукт апсейла */
    "Sravni.Osago.Upsales.OsagoUpsale": {
      /**
       * Format: int32
       * @description Id продукта у нас
       */
      id?: number;
      /**
       * Format: int32
       * @description Id компании
       */
      companyId?: number;
      /** @description Наименование СК */
      companyName?: string | null;
      /** @description Логотип СК */
      companyLogoUrl?: string | null;
      /** @description Id продукта в СК */
      externalId?: string | null;
      /** @description Дополнительное Id продукта в СК */
      additionalExternalId?: string | null;
      sravniProduct?: components["schemas"]["Sravni.Osago.Upsales.SravniProduct"];
      /** @description Название продукта */
      name?: string | null;
      /** @description Описание продукта */
      description?: string | null;
      /**
       * Format: double
       * @description Страховое покрытие
       */
      limit?: number;
      /** @description Код документа для полиса продукта */
      policyDocumentCode?: string | null;
      /** @description Название файла полиса в наших коммуникациях */
      policyFileName?: string | null;
      /** @description Можно продавать для онлайна */
      canSellOnline?: boolean;
      /** @description Можно продавать для оффлайна */
      canSellOffline?: boolean;
      /** @description Включенные в продукт пакеты */
      includedPackages?: components["schemas"]["Sravni.Osago.Upsales.OsagoUpsalePackage"][] | null;
      /** @description Свойства продукта */
      properties?: components["schemas"]["Sravni.Osago.Upsales.OsagoUpsaleProperty"][] | null;
    };
    /** @description Пакет, включенный в продукт апсейла */
    "Sravni.Osago.Upsales.OsagoUpsalePackage": {
      /** @description Id пакета в СК */
      externalId?: string | null;
      /** @description Название пакета */
      name?: string | null;
    };
    /** @description Свойство продукта */
    "Sravni.Osago.Upsales.OsagoUpsaleProperty": {
      /** @description Ключ (идентификатор) свойства */
      key?: string | null;
      /** @description Название свойства */
      name?: string | null;
      /** @description Описание свойства */
      description?: string | null;
      /** @description Дополнительные текстовые элементы, описывающие свойство */
      textElements?: components["schemas"]["Sravni.Osago.Upsales.TextElement"][] | null;
    };
    /** @enum {string} */
    "Sravni.Osago.Upsales.SravniProduct": "kasko" | "accidentInsurance";
    /** @description Элемент описания свойства продукта */
    "Sravni.Osago.Upsales.TextElement": {
      /** @description Название элемента */
      name?: string | null;
    };
    /** @description Данные заказа для ЛК */
    "Sravni.Osago.UserOrderInfo": {
      /** Format: int64 */
      id?: number;
      /**
       * Format: date-time
       * @description Дата создания
       */
      created?: string;
      /** @description Набор полей с информацией о заказе Наименование: Данные */
      properties?: components["schemas"]["Sravni.Osago.NameValueItem"][] | null;
      /**
       * Format: int32
       * @description Id компании
       */
      companyId?: number;
      /** @description Акцептован? */
      isAccepted?: boolean;
      /** @description Аннулирован? */
      isCanceled?: boolean;
      /** @description url на полис */
      policyLink?: string | null;
      /** @description url на оплату или фрейм */
      paymentUrl?: string | null;
      /** @description url на оформление нового полиса */
      renewLink?: string | null;
    };
    /** @description Данные поиска в лк */
    "Sravni.Osago.UserSearchInfo": {
      /** Format: int64 */
      id?: number;
      /**
       * Format: date-time
       * @description Дата создания
       */
      created?: string;
      /** @description Набор полей с информацией о заказе Наименование: Данные */
      properties?: components["schemas"]["Sravni.Osago.NameValueItem"][] | null;
      /** @description Url на продолжение */
      searchUrl?: string | null;
      /** @description Ссылка на восстановление */
      renewLink?: string | null;
    };
    "Sravni.Osago.UtmQuery": {
      medium?: string | null;
      source?: string | null;
      campaign?: string | null;
      content?: string | null;
      term?: string | null;
      uaClientId?: string | null;
      ymClientId?: string | null;
    };
    "Sravni.Osago.Vsk.VskCallBack": {
      correlationId?: string | null;
      body?: string | null;
    };
    "Sravni.OsagoGateway.Service.Core.Models.PolicyDraftsResult": {
      result?: string | null;
      upsalePolicyDraftUrl?: string | null;
      kidUrl?: string | null;
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.OsagoPromo.MessageBroker.Service.LoyaltyInviteResult": {
      product?: string | null;
      /** Format: int32 */
      userId?: number;
      url?: string | null;
      /** Format: date-time */
      created?: string;
    };
    /** @enum {string} */
    "Sravni.OsagoPromo.Shared.Enums.BenefitType": "percent" | "amount";
    /** @enum {string} */
    "Sravni.OsagoPromo.Shared.Enums.ProductType": "osago";
    /** @enum {string} */
    "Sravni.OsagoPromo.Shared.Enums.PromoPartner": "mir" | "pcO10Moscow" | "pcO7MR" | "miR2" | "dodo" | "timeLimitedCashback" | "casH10" | "flashSale1" | "halvaCardPromo" | "vskSoglasieDobor" | "newYearGift" | "newYearGiftPolicy" | "promokodus";
    "Sravni.OsagoPromo.Shared.Models.PromoGeo": {
      route?: string | null;
    };
    "Sravni.OsagoPromo.Shared.Models.PromoOrganisation": {
      organisation?: string | null;
      /** Format: double */
      benefitValue?: number;
      isApplicableToZeroIncome?: boolean;
    };
    "Sravni.OsagoStaff.Service.MockCoeffiсientsController+AgeExperience": {
      /** Format: date-time */
      birthDate?: string;
      /** Format: date-time */
      experienceStartDate?: string;
      /** Format: int32 */
      age?: number;
      /** Format: int32 */
      experience?: number;
    };
    "Sravni.OsagoStaff.Service.MockCoeffiсientsController+Coefficients": {
      /** Format: double */
      kt?: number;
      /** Format: double */
      kvs?: number;
      /** Format: double */
      ks?: number;
      /** Format: double */
      kp?: number;
      /** Format: double */
      km?: number;
      /** Format: double */
      kn?: number;
      /** Format: double */
      ko?: number;
      /** Format: double */
      kpr?: number;
    };
    "Sravni.OsagoStaff.Service.MockCoeffiсientsController+CoefficientsRequest": {
      ageExperiences: components["schemas"]["Sravni.OsagoStaff.Service.MockCoeffiсientsController+AgeExperience"][];
      isMultidrive?: boolean;
      /** Format: int32 */
      power: number;
      registrationAddress: string;
      hasTrailer?: boolean;
    };
    "Sravni.OsagoStaff.Service.MockCoeffiсientsController+Driver": {
      lastName?: string | null;
      middleName?: string | null;
      firstName?: string | null;
      fullName?: string | null;
      /** Format: date-time */
      birthDate?: string;
      license?: components["schemas"]["DriverLicense"];
      previousInfo?: components["schemas"]["Sravni.Osago.PreviousDriverInfo"];
    };
    "Sravni.OsagoStaff.Service.MockCoeffiсientsController+Kbm": {
      /** Format: double */
      value?: number;
    };
    "System.Exception": {
      targetSite?: components["schemas"]["System.Reflection.MethodBase"];
      message?: string | null;
      data?: {
        [key: string]: unknown;
      } | null;
      innerException?: components["schemas"]["System.Exception"];
      helpLink?: string | null;
      source?: string | null;
      /** Format: int32 */
      hResult?: number;
      stackTrace?: string | null;
    };
    "System.IntPtr": Record<string, never>;
    "System.ModuleHandle": {
      /** Format: int32 */
      mdStreamVersion?: number;
    };
    "System.Reflection.Assembly": {
      definedTypes?: (readonly components["schemas"]["System.Reflection.TypeInfo"][]) | null;
      exportedTypes?: (readonly components["schemas"]["System.Type"][]) | null;
      codeBase?: string | null;
      entryPoint?: components["schemas"]["System.Reflection.MethodInfo"];
      fullName?: string | null;
      imageRuntimeVersion?: string | null;
      isDynamic?: boolean;
      location?: string | null;
      reflectionOnly?: boolean;
      isCollectible?: boolean;
      isFullyTrusted?: boolean;
      customAttributes?: (readonly components["schemas"]["System.Reflection.CustomAttributeData"][]) | null;
      escapedCodeBase?: string | null;
      manifestModule?: components["schemas"]["System.Reflection.Module"];
      modules?: (readonly components["schemas"]["System.Reflection.Module"][]) | null;
      /** @deprecated */
      globalAssemblyCache?: boolean;
      /** Format: int64 */
      hostContext?: number;
      securityRuleSet?: components["schemas"]["System.Security.SecurityRuleSet"];
    };
    /** @enum {string} */
    "System.Reflection.CallingConventions": "standard" | "varArgs" | "any" | "hasThis" | "explicitThis";
    "System.Reflection.ConstructorInfo": {
      name?: string | null;
      declaringType?: components["schemas"]["System.Type"];
      reflectedType?: components["schemas"]["System.Type"];
      module?: components["schemas"]["System.Reflection.Module"];
      customAttributes?: (readonly components["schemas"]["System.Reflection.CustomAttributeData"][]) | null;
      isCollectible?: boolean;
      /** Format: int32 */
      metadataToken?: number;
      attributes?: components["schemas"]["System.Reflection.MethodAttributes"];
      methodImplementationFlags?: components["schemas"]["System.Reflection.MethodImplAttributes"];
      callingConvention?: components["schemas"]["System.Reflection.CallingConventions"];
      isAbstract?: boolean;
      isConstructor?: boolean;
      isFinal?: boolean;
      isHideBySig?: boolean;
      isSpecialName?: boolean;
      isStatic?: boolean;
      isVirtual?: boolean;
      isAssembly?: boolean;
      isFamily?: boolean;
      isFamilyAndAssembly?: boolean;
      isFamilyOrAssembly?: boolean;
      isPrivate?: boolean;
      isPublic?: boolean;
      isConstructedGenericMethod?: boolean;
      isGenericMethod?: boolean;
      isGenericMethodDefinition?: boolean;
      containsGenericParameters?: boolean;
      methodHandle?: components["schemas"]["System.RuntimeMethodHandle"];
      isSecurityCritical?: boolean;
      isSecuritySafeCritical?: boolean;
      isSecurityTransparent?: boolean;
      memberType?: components["schemas"]["System.Reflection.MemberTypes"];
    };
    "System.Reflection.CustomAttributeData": {
      attributeType?: components["schemas"]["System.Type"];
      constructor?: components["schemas"]["System.Reflection.ConstructorInfo"];
      constructorArguments?: (readonly components["schemas"]["System.Reflection.CustomAttributeTypedArgument"][]) | null;
      namedArguments?: (readonly components["schemas"]["System.Reflection.CustomAttributeNamedArgument"][]) | null;
    };
    "System.Reflection.CustomAttributeNamedArgument": {
      memberInfo?: components["schemas"]["System.Reflection.MemberInfo"];
      typedValue?: components["schemas"]["System.Reflection.CustomAttributeTypedArgument"];
      memberName?: string | null;
      isField?: boolean;
    };
    "System.Reflection.CustomAttributeTypedArgument": {
      argumentType?: components["schemas"]["System.Type"];
      value?: Record<string, unknown> | null;
    };
    /** @enum {string} */
    "System.Reflection.EventAttributes": "none" | "specialName" | "rtSpecialName";
    "System.Reflection.EventInfo": {
      name?: string | null;
      declaringType?: components["schemas"]["System.Type"];
      reflectedType?: components["schemas"]["System.Type"];
      module?: components["schemas"]["System.Reflection.Module"];
      customAttributes?: (readonly components["schemas"]["System.Reflection.CustomAttributeData"][]) | null;
      isCollectible?: boolean;
      /** Format: int32 */
      metadataToken?: number;
      memberType?: components["schemas"]["System.Reflection.MemberTypes"];
      attributes?: components["schemas"]["System.Reflection.EventAttributes"];
      isSpecialName?: boolean;
      addMethod?: components["schemas"]["System.Reflection.MethodInfo"];
      removeMethod?: components["schemas"]["System.Reflection.MethodInfo"];
      raiseMethod?: components["schemas"]["System.Reflection.MethodInfo"];
      isMulticast?: boolean;
      eventHandlerType?: components["schemas"]["System.Type"];
    };
    /** @enum {string} */
    "System.Reflection.FieldAttributes": "privateScope" | "private" | "famANDAssem" | "assembly" | "family" | "famORAssem" | "public" | "fieldAccessMask" | "static" | "initOnly" | "literal" | "notSerialized" | "hasFieldRVA" | "specialName" | "rtSpecialName" | "hasFieldMarshal" | "pinvokeImpl" | "hasDefault" | "reservedMask";
    "System.Reflection.FieldInfo": {
      name?: string | null;
      declaringType?: components["schemas"]["System.Type"];
      reflectedType?: components["schemas"]["System.Type"];
      module?: components["schemas"]["System.Reflection.Module"];
      customAttributes?: (readonly components["schemas"]["System.Reflection.CustomAttributeData"][]) | null;
      isCollectible?: boolean;
      /** Format: int32 */
      metadataToken?: number;
      memberType?: components["schemas"]["System.Reflection.MemberTypes"];
      attributes?: components["schemas"]["System.Reflection.FieldAttributes"];
      fieldType?: components["schemas"]["System.Type"];
      isInitOnly?: boolean;
      isLiteral?: boolean;
      isNotSerialized?: boolean;
      isPinvokeImpl?: boolean;
      isSpecialName?: boolean;
      isStatic?: boolean;
      isAssembly?: boolean;
      isFamily?: boolean;
      isFamilyAndAssembly?: boolean;
      isFamilyOrAssembly?: boolean;
      isPrivate?: boolean;
      isPublic?: boolean;
      isSecurityCritical?: boolean;
      isSecuritySafeCritical?: boolean;
      isSecurityTransparent?: boolean;
      fieldHandle?: components["schemas"]["System.RuntimeFieldHandle"];
    };
    /** @enum {string} */
    "System.Reflection.GenericParameterAttributes": "none" | "covariant" | "contravariant" | "varianceMask" | "referenceTypeConstraint" | "notNullableValueTypeConstraint" | "defaultConstructorConstraint" | "specialConstraintMask";
    "System.Reflection.ICustomAttributeProvider": Record<string, never>;
    "System.Reflection.MemberInfo": {
      memberType?: components["schemas"]["System.Reflection.MemberTypes"];
      name?: string | null;
      declaringType?: components["schemas"]["System.Type"];
      reflectedType?: components["schemas"]["System.Type"];
      module?: components["schemas"]["System.Reflection.Module"];
      customAttributes?: (readonly components["schemas"]["System.Reflection.CustomAttributeData"][]) | null;
      isCollectible?: boolean;
      /** Format: int32 */
      metadataToken?: number;
    };
    /** @enum {string} */
    "System.Reflection.MemberTypes": "constructor" | "event" | "field" | "method" | "property" | "typeInfo" | "custom" | "nestedType" | "all";
    /** @enum {string} */
    "System.Reflection.MethodAttributes": "reuseSlot" | "private" | "famANDAssem" | "assembly" | "family" | "famORAssem" | "public" | "memberAccessMask" | "unmanagedExport" | "static" | "final" | "virtual" | "hideBySig" | "newSlot" | "checkAccessOnOverride" | "abstract" | "specialName" | "rtSpecialName" | "pinvokeImpl" | "hasSecurity" | "requireSecObject" | "reservedMask";
    "System.Reflection.MethodBase": {
      memberType?: components["schemas"]["System.Reflection.MemberTypes"];
      name?: string | null;
      declaringType?: components["schemas"]["System.Type"];
      reflectedType?: components["schemas"]["System.Type"];
      module?: components["schemas"]["System.Reflection.Module"];
      customAttributes?: (readonly components["schemas"]["System.Reflection.CustomAttributeData"][]) | null;
      isCollectible?: boolean;
      /** Format: int32 */
      metadataToken?: number;
      attributes?: components["schemas"]["System.Reflection.MethodAttributes"];
      methodImplementationFlags?: components["schemas"]["System.Reflection.MethodImplAttributes"];
      callingConvention?: components["schemas"]["System.Reflection.CallingConventions"];
      isAbstract?: boolean;
      isConstructor?: boolean;
      isFinal?: boolean;
      isHideBySig?: boolean;
      isSpecialName?: boolean;
      isStatic?: boolean;
      isVirtual?: boolean;
      isAssembly?: boolean;
      isFamily?: boolean;
      isFamilyAndAssembly?: boolean;
      isFamilyOrAssembly?: boolean;
      isPrivate?: boolean;
      isPublic?: boolean;
      isConstructedGenericMethod?: boolean;
      isGenericMethod?: boolean;
      isGenericMethodDefinition?: boolean;
      containsGenericParameters?: boolean;
      methodHandle?: components["schemas"]["System.RuntimeMethodHandle"];
      isSecurityCritical?: boolean;
      isSecuritySafeCritical?: boolean;
      isSecurityTransparent?: boolean;
    };
    /** @enum {string} */
    "System.Reflection.MethodImplAttributes": "il" | "native" | "optil" | "runtime" | "unmanaged" | "noInlining" | "forwardRef" | "synchronized" | "noOptimization" | "preserveSig" | "aggressiveInlining" | "aggressiveOptimization" | "internalCall" | "maxMethodImplVal";
    "System.Reflection.MethodInfo": {
      name?: string | null;
      declaringType?: components["schemas"]["System.Type"];
      reflectedType?: components["schemas"]["System.Type"];
      module?: components["schemas"]["System.Reflection.Module"];
      customAttributes?: (readonly components["schemas"]["System.Reflection.CustomAttributeData"][]) | null;
      isCollectible?: boolean;
      /** Format: int32 */
      metadataToken?: number;
      attributes?: components["schemas"]["System.Reflection.MethodAttributes"];
      methodImplementationFlags?: components["schemas"]["System.Reflection.MethodImplAttributes"];
      callingConvention?: components["schemas"]["System.Reflection.CallingConventions"];
      isAbstract?: boolean;
      isConstructor?: boolean;
      isFinal?: boolean;
      isHideBySig?: boolean;
      isSpecialName?: boolean;
      isStatic?: boolean;
      isVirtual?: boolean;
      isAssembly?: boolean;
      isFamily?: boolean;
      isFamilyAndAssembly?: boolean;
      isFamilyOrAssembly?: boolean;
      isPrivate?: boolean;
      isPublic?: boolean;
      isConstructedGenericMethod?: boolean;
      isGenericMethod?: boolean;
      isGenericMethodDefinition?: boolean;
      containsGenericParameters?: boolean;
      methodHandle?: components["schemas"]["System.RuntimeMethodHandle"];
      isSecurityCritical?: boolean;
      isSecuritySafeCritical?: boolean;
      isSecurityTransparent?: boolean;
      memberType?: components["schemas"]["System.Reflection.MemberTypes"];
      returnParameter?: components["schemas"]["System.Reflection.ParameterInfo"];
      returnType?: components["schemas"]["System.Type"];
      returnTypeCustomAttributes?: components["schemas"]["System.Reflection.ICustomAttributeProvider"];
    };
    "System.Reflection.Module": {
      assembly?: components["schemas"]["System.Reflection.Assembly"];
      fullyQualifiedName?: string | null;
      name?: string | null;
      /** Format: int32 */
      mdStreamVersion?: number;
      /** Format: uuid */
      moduleVersionId?: string;
      scopeName?: string | null;
      moduleHandle?: components["schemas"]["System.ModuleHandle"];
      customAttributes?: (readonly components["schemas"]["System.Reflection.CustomAttributeData"][]) | null;
      /** Format: int32 */
      metadataToken?: number;
    };
    /** @enum {string} */
    "System.Reflection.ParameterAttributes": "none" | "in" | "out" | "lcid" | "retval" | "optional" | "hasDefault" | "hasFieldMarshal" | "reserved3" | "reserved4" | "reservedMask";
    "System.Reflection.ParameterInfo": {
      attributes?: components["schemas"]["System.Reflection.ParameterAttributes"];
      member?: components["schemas"]["System.Reflection.MemberInfo"];
      name?: string | null;
      parameterType?: components["schemas"]["System.Type"];
      /** Format: int32 */
      position?: number;
      isIn?: boolean;
      isLcid?: boolean;
      isOptional?: boolean;
      isOut?: boolean;
      isRetval?: boolean;
      defaultValue?: Record<string, unknown> | null;
      rawDefaultValue?: Record<string, unknown> | null;
      hasDefaultValue?: boolean;
      customAttributes?: (readonly components["schemas"]["System.Reflection.CustomAttributeData"][]) | null;
      /** Format: int32 */
      metadataToken?: number;
    };
    /** @enum {string} */
    "System.Reflection.PropertyAttributes": "none" | "specialName" | "rtSpecialName" | "hasDefault" | "reserved2" | "reserved3" | "reserved4" | "reservedMask";
    "System.Reflection.PropertyInfo": {
      name?: string | null;
      declaringType?: components["schemas"]["System.Type"];
      reflectedType?: components["schemas"]["System.Type"];
      module?: components["schemas"]["System.Reflection.Module"];
      customAttributes?: (readonly components["schemas"]["System.Reflection.CustomAttributeData"][]) | null;
      isCollectible?: boolean;
      /** Format: int32 */
      metadataToken?: number;
      memberType?: components["schemas"]["System.Reflection.MemberTypes"];
      propertyType?: components["schemas"]["System.Type"];
      attributes?: components["schemas"]["System.Reflection.PropertyAttributes"];
      isSpecialName?: boolean;
      canRead?: boolean;
      canWrite?: boolean;
      getMethod?: components["schemas"]["System.Reflection.MethodInfo"];
      setMethod?: components["schemas"]["System.Reflection.MethodInfo"];
    };
    /** @enum {string} */
    "System.Reflection.TypeAttributes": "notPublic" | "public" | "nestedPublic" | "nestedPrivate" | "nestedFamily" | "nestedAssembly" | "nestedFamANDAssem" | "nestedFamORAssem" | "sequentialLayout" | "explicitLayout" | "layoutMask" | "interface" | "abstract" | "sealed" | "specialName" | "rtSpecialName" | "import" | "serializable" | "windowsRuntime" | "unicodeClass" | "autoClass" | "customFormatClass" | "hasSecurity" | "reservedMask" | "beforeFieldInit" | "customFormatMask";
    "System.Reflection.TypeInfo": {
      name?: string | null;
      customAttributes?: (readonly components["schemas"]["System.Reflection.CustomAttributeData"][]) | null;
      isCollectible?: boolean;
      /** Format: int32 */
      metadataToken?: number;
      isInterface?: boolean;
      memberType?: components["schemas"]["System.Reflection.MemberTypes"];
      namespace?: string | null;
      assemblyQualifiedName?: string | null;
      fullName?: string | null;
      assembly?: components["schemas"]["System.Reflection.Assembly"];
      module?: components["schemas"]["System.Reflection.Module"];
      isNested?: boolean;
      declaringType?: components["schemas"]["System.Type"];
      declaringMethod?: components["schemas"]["System.Reflection.MethodBase"];
      reflectedType?: components["schemas"]["System.Type"];
      underlyingSystemType?: components["schemas"]["System.Type"];
      isTypeDefinition?: boolean;
      isArray?: boolean;
      isByRef?: boolean;
      isPointer?: boolean;
      isConstructedGenericType?: boolean;
      isGenericParameter?: boolean;
      isGenericTypeParameter?: boolean;
      isGenericMethodParameter?: boolean;
      isGenericType?: boolean;
      isGenericTypeDefinition?: boolean;
      isSZArray?: boolean;
      isVariableBoundArray?: boolean;
      isByRefLike?: boolean;
      hasElementType?: boolean;
      genericTypeArguments?: (readonly components["schemas"]["System.Type"][]) | null;
      /** Format: int32 */
      genericParameterPosition?: number;
      genericParameterAttributes?: components["schemas"]["System.Reflection.GenericParameterAttributes"];
      attributes?: components["schemas"]["System.Reflection.TypeAttributes"];
      isAbstract?: boolean;
      isImport?: boolean;
      isSealed?: boolean;
      isSpecialName?: boolean;
      isClass?: boolean;
      isNestedAssembly?: boolean;
      isNestedFamANDAssem?: boolean;
      isNestedFamily?: boolean;
      isNestedFamORAssem?: boolean;
      isNestedPrivate?: boolean;
      isNestedPublic?: boolean;
      isNotPublic?: boolean;
      isPublic?: boolean;
      isAutoLayout?: boolean;
      isExplicitLayout?: boolean;
      isLayoutSequential?: boolean;
      isAnsiClass?: boolean;
      isAutoClass?: boolean;
      isUnicodeClass?: boolean;
      isCOMObject?: boolean;
      isContextful?: boolean;
      isEnum?: boolean;
      isMarshalByRef?: boolean;
      isPrimitive?: boolean;
      isValueType?: boolean;
      isSignatureType?: boolean;
      isSecurityCritical?: boolean;
      isSecuritySafeCritical?: boolean;
      isSecurityTransparent?: boolean;
      structLayoutAttribute?: components["schemas"]["System.Runtime.InteropServices.StructLayoutAttribute"];
      typeInitializer?: components["schemas"]["System.Reflection.ConstructorInfo"];
      typeHandle?: components["schemas"]["System.RuntimeTypeHandle"];
      /** Format: uuid */
      guid?: string;
      baseType?: components["schemas"]["System.Type"];
      isSerializable?: boolean;
      containsGenericParameters?: boolean;
      isVisible?: boolean;
      genericTypeParameters?: (readonly components["schemas"]["System.Type"][]) | null;
      declaredConstructors?: (readonly components["schemas"]["System.Reflection.ConstructorInfo"][]) | null;
      declaredEvents?: (readonly components["schemas"]["System.Reflection.EventInfo"][]) | null;
      declaredFields?: (readonly components["schemas"]["System.Reflection.FieldInfo"][]) | null;
      declaredMembers?: (readonly components["schemas"]["System.Reflection.MemberInfo"][]) | null;
      declaredMethods?: (readonly components["schemas"]["System.Reflection.MethodInfo"][]) | null;
      declaredNestedTypes?: (readonly components["schemas"]["System.Reflection.TypeInfo"][]) | null;
      declaredProperties?: (readonly components["schemas"]["System.Reflection.PropertyInfo"][]) | null;
      implementedInterfaces?: (readonly components["schemas"]["System.Type"][]) | null;
    };
    /** @enum {string} */
    "System.Runtime.InteropServices.LayoutKind": "sequential" | "explicit" | "auto";
    "System.Runtime.InteropServices.StructLayoutAttribute": {
      typeId?: Record<string, unknown> | null;
      value?: components["schemas"]["System.Runtime.InteropServices.LayoutKind"];
    };
    "System.RuntimeFieldHandle": {
      value?: components["schemas"]["System.IntPtr"];
    };
    "System.RuntimeMethodHandle": {
      value?: components["schemas"]["System.IntPtr"];
    };
    "System.RuntimeTypeHandle": {
      value?: components["schemas"]["System.IntPtr"];
    };
    /** @enum {string} */
    "System.Security.SecurityRuleSet": "none" | "level1" | "level2";
    "System.Type": {
      name?: string | null;
      customAttributes?: (readonly components["schemas"]["System.Reflection.CustomAttributeData"][]) | null;
      isCollectible?: boolean;
      /** Format: int32 */
      metadataToken?: number;
      isInterface?: boolean;
      memberType?: components["schemas"]["System.Reflection.MemberTypes"];
      namespace?: string | null;
      assemblyQualifiedName?: string | null;
      fullName?: string | null;
      assembly?: components["schemas"]["System.Reflection.Assembly"];
      module?: components["schemas"]["System.Reflection.Module"];
      isNested?: boolean;
      declaringType?: components["schemas"]["System.Type"];
      declaringMethod?: components["schemas"]["System.Reflection.MethodBase"];
      reflectedType?: components["schemas"]["System.Type"];
      underlyingSystemType?: components["schemas"]["System.Type"];
      isTypeDefinition?: boolean;
      isArray?: boolean;
      isByRef?: boolean;
      isPointer?: boolean;
      isConstructedGenericType?: boolean;
      isGenericParameter?: boolean;
      isGenericTypeParameter?: boolean;
      isGenericMethodParameter?: boolean;
      isGenericType?: boolean;
      isGenericTypeDefinition?: boolean;
      isSZArray?: boolean;
      isVariableBoundArray?: boolean;
      isByRefLike?: boolean;
      hasElementType?: boolean;
      genericTypeArguments?: (readonly components["schemas"]["System.Type"][]) | null;
      /** Format: int32 */
      genericParameterPosition?: number;
      genericParameterAttributes?: components["schemas"]["System.Reflection.GenericParameterAttributes"];
      attributes?: components["schemas"]["System.Reflection.TypeAttributes"];
      isAbstract?: boolean;
      isImport?: boolean;
      isSealed?: boolean;
      isSpecialName?: boolean;
      isClass?: boolean;
      isNestedAssembly?: boolean;
      isNestedFamANDAssem?: boolean;
      isNestedFamily?: boolean;
      isNestedFamORAssem?: boolean;
      isNestedPrivate?: boolean;
      isNestedPublic?: boolean;
      isNotPublic?: boolean;
      isPublic?: boolean;
      isAutoLayout?: boolean;
      isExplicitLayout?: boolean;
      isLayoutSequential?: boolean;
      isAnsiClass?: boolean;
      isAutoClass?: boolean;
      isUnicodeClass?: boolean;
      isCOMObject?: boolean;
      isContextful?: boolean;
      isEnum?: boolean;
      isMarshalByRef?: boolean;
      isPrimitive?: boolean;
      isValueType?: boolean;
      isSignatureType?: boolean;
      isSecurityCritical?: boolean;
      isSecuritySafeCritical?: boolean;
      isSecurityTransparent?: boolean;
      structLayoutAttribute?: components["schemas"]["System.Runtime.InteropServices.StructLayoutAttribute"];
      typeInitializer?: components["schemas"]["System.Reflection.ConstructorInfo"];
      typeHandle?: components["schemas"]["System.RuntimeTypeHandle"];
      /** Format: uuid */
      guid?: string;
      baseType?: components["schemas"]["System.Type"];
      isSerializable?: boolean;
      containsGenericParameters?: boolean;
      isVisible?: boolean;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
