/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/v1/orders/decrypt/base64": {
    /** Расшифровать ID */
    post: {
      parameters: {
        query?: {
          /** @description зашифрованный ID */
          id?: string;
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/orders/encrypt/base64": {
    /** Зашифровать ID */
    post: {
      parameters: {
        query?: {
          /** @description id */
          id?: string;
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/analytics/regNumber/markers": {
    /**
     * Сохраняет метки по регзнаку
     * @deprecated
     */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Analytics.Models.RegNumberMarkerDto"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Analytics.Models.RegNumberMarkerDto"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Analytics.Models.RegNumberMarkerDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/bigautodata/policyreport/{number}": {
    /** получить информацию по полисам */
    get: {
      parameters: {
        query?: {
          queryType?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Auto.Models.AvtoInfoQueryType"];
          source?: string;
          medium?: string;
          campaign?: string;
        };
        path: {
          number: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.ParserApiInfo"];
            "application/json": components["schemas"]["Sravni.Osago.ParserApiInfo"];
            "text/json": components["schemas"]["Sravni.Osago.ParserApiInfo"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/calculations": {
    /** Старт расчета */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.StartCalculationRequest"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.StartCalculationRequest"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.StartCalculationRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.StartCalculationResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.StartCalculationResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.StartCalculationResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/calculations/{calcHash}": {
    /** Результат расчета */
    get: {
      parameters: {
        path: {
          calcHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.CalculationResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.CalculationResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.CalculationResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/calculations/recommendedstartdate": {
    /** Возвращает рекомендуемую дату начала действия нового полиса */
    post: {
      /** @description Модель, принимающая номер ТС и VIN ТС */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.RecommendedStartDateRequestModel"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.RecommendedStartDateRequestModel"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.RecommendedStartDateRequestModel"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.RecommendedStartDateDto"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.RecommendedStartDateDto"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.RecommendedStartDateDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/payurl/order/{orderHash}/sms": {
    /** Отправляет смс с ссылкой на оплату */
    post: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.SendPaymentUrlResponse"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.SendPaymentUrlResponse"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Dto.SendPaymentUrlResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/companies": {
    /** Список компаний */
    post: {
      parameters: {
        query?: {
          route?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Companies.Models.Company"][];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Companies.Models.Company"][];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Companies.Models.Company"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/companies/{companyId}/columns": {
    /** Возвращает количество проданных полисов за вчерашний день, кол-во лет на рынке и кол-во лет со Сравни конкретной СК */
    get: {
      parameters: {
        path: {
          /** @description Id СК */
          companyId: number;
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/dl/osago/{path}": {
    /** Скачивает полис ОСАГО или архив документов */
    get: {
      parameters: {
        query?: {
          jpg?: number;
        };
        path: {
          path: string;
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/emails/v1/mail-hostings": {
    /** Получение популярных хостингов емейлов */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": string[];
            "application/json": string[];
            "text/json": string[];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/events": {
    /** Сохранение эвента */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Events.Models.CreateEventRequest"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Events.Models.CreateEventRequest"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.Events.Models.CreateEventRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/events/wishes": {
    /** Сохранение пожеланий пользователей */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.Funnel.Shared.Dto.WishQuery"];
          "text/json": components["schemas"]["Sravni.Funnel.Shared.Dto.WishQuery"];
          "application/*+json": components["schemas"]["Sravni.Funnel.Shared.Dto.WishQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/events/marketing": {
    /** Возвращает маркетинговые баннеры и рандомные отзывы */
    get: {
      parameters: {
        query?: {
          userId?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Events.Models.MarketingThingsModel"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Events.Models.MarketingThingsModel"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Events.Models.MarketingThingsModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/events/early-leads": {
    /** Сохранение контактов пользователя */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.Osago.OsagoEarlyLeadQuery"];
          "text/json": components["schemas"]["Sravni.Osago.OsagoEarlyLeadQuery"];
          "application/*+json": components["schemas"]["Sravni.Osago.OsagoEarlyLeadQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Guid, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Guid, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.Osago.Dto.AnyResult`1[[System.Guid, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/events/pulling/click": {
    /** Запись клика по результату пулинга ОСАГО */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Events.Models.OsagoSearchResultClickRequest"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Events.Models.OsagoSearchResultClickRequest"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.Events.Models.OsagoSearchResultClickRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Funnel.Shared.Dto.OsagoResult"];
            "application/json": components["schemas"]["Sravni.Funnel.Shared.Dto.OsagoResult"];
            "text/json": components["schemas"]["Sravni.Funnel.Shared.Dto.OsagoResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/limiter/{hash}": {
    /** Лимитирует запросы */
    get: {
      parameters: {
        path: {
          /** @description Идентификатор расчета, зашифрованный */
          hash: string;
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/locations": {
    /** Ищет населённые пункты по route */
    get: {
      parameters: {
        query?: {
          route?: string;
          limit?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Location.Models.Location"][];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Location.Models.Location"][];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Location.Models.Location"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/loyalty/invite": {
    /** Получение ссылки "Приведи друга" */
    post: {
      parameters: {
        query?: {
          /** @description UserId */
          userId?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/many-orders": {
    /** Создание заказа */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.StartOrderRequest"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.StartOrderRequest"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.StartOrderRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.StartManyOrdersResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.StartManyOrdersResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.StartManyOrdersResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/many-orders/{orderHash}": {
    /** Результаты заказа */
    get: {
      parameters: {
        query?: {
          withoutSomeAlerts?: boolean;
        };
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.PollingResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.PollingResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.PollingResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/many-orders/{orderHash}/info": {
    /** Информация о заказе */
    get: {
      parameters: {
        query?: {
          force?: boolean;
        };
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.ExtendedOrdersInfoResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.ExtendedOrdersInfoResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.ExtendedOrdersInfoResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/orders": {
    /** Создание заказа */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.StartOrderRequest"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.StartOrderRequest"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.StartOrderRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.StartOrderResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.StartOrderResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.StartOrderResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/orders/{orderHash}": {
    /** Результаты заказа */
    get: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.OrderWithTrySaveResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.OrderWithTrySaveResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.OrderWithTrySaveResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/orders/{orderHash}/offers": {
    /** Информация о предложениях клиенту в случае отказа страховой */
    get: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.AdditionalOfferDto"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.AdditionalOfferDto"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.AdditionalOfferDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/orders/{orderHash}/inflight/update": {
    /** Создает Inflight-запрос на изменение текущих контактов для заказа в обработке */
    patch: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.InflightUpdateRequest"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.InflightUpdateRequest"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.InflightUpdateRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.InflightResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.InflightResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.InflightResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/orders/prolongation-auth/{carNumber}": {
    /**
     * Получает данные для пролонгации полиса авторизованного пользователя
     * @deprecated
     */
    post: {
      parameters: {
        path: {
          carNumber: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.UserRequest"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.UserRequest"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.Core.UserRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.ProlongationResultModel"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.ProlongationResultModel"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.ProlongationResultModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/orders/prolongationOffer": {
    /** Получает данные для пролонгации полиса */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.ProlongationRequestModel"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.ProlongationRequestModel"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.ProlongationRequestModel"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.ProlongationOfferResponse"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.ProlongationOfferResponse"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.ProlongationOfferResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/orders/prolongation-noauth": {
    /**
     * Получает данные для пролонгации полиса неавторизованного пользователя
     * @deprecated
     */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.ProlongationRequestModel"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.ProlongationRequestModel"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.ProlongationRequestModel"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ProlongationOrderModel"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ProlongationOrderModel"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ProlongationOrderModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/orders/{orderHash}/spoil": {
    /** Получает данные для пролонгации полиса неавторизованного пользователя */
    get: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/orders/assignUserId": {
    /** Присваивает userId для заказа и рассылает по связным системам массово */
    post: {
      /** @description пара OrderHash - UserId */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Orders.Models.OrderHashUserIdPair"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Orders.Models.OrderHashUserIdPair"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Orders.Models.OrderHashUserIdPair"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/orders/{orderHash}/payment-url": {
    /** получение ссылки на оплату */
    get: {
      parameters: {
        path: {
          /** @description Хэш заказа */
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PaymentUrlResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PaymentUrlResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PaymentUrlResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
    /** запуск получения ссылки на оплату */
    post: {
      parameters: {
        path: {
          /** @description Хэш заказа */
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/orders/{orderHash}/policyinfo": {
    /** Загружает информацию о полисе */
    post: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.Order.OrderPolicyLoadInfoDto"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.Order.OrderPolicyLoadInfoDto"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.Order.OrderPolicyLoadInfoDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/orders/{orderHash}/remove-trash": {
    /** Проставляет заказу признак, что заказ выбран пользователем, а не сформирован из проброса */
    post: {
      parameters: {
        path: {
          /** @description хеш заказа */
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/orders/payment-item/{orderId}": {
    /** Получение информации о апсейлах для платежного шлюза по Id осаго */
    get: {
      parameters: {
        path: {
          /** @description Id заказа осаго */
          orderId: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.PaymentGateway.Models.Item"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.PaymentGateway.Models.Item"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.PaymentGateway.Models.Item"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/pdata/v1/info/{numbertype}/{number}/{key}": {
    /** Получение полиса по Id ТС */
    get: {
      parameters: {
        path: {
          numbertype: string;
          number: string;
          key: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataResponseResult`1[[Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataPolicyInfo, Sravni.OsagoGateway.Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataResponseResult`1[[Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataPolicyInfo, Sravni.OsagoGateway.Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataResponseResult`1[[Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataPolicyInfo, Sravni.OsagoGateway.Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/pdata/v1/info/by-person/{fio}/{birthDay}/{address}/{key}": {
    /** Получение информации о полисах по персоне */
    get: {
      parameters: {
        path: {
          fio: string;
          birthDay: string;
          address: string;
          key: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataResponseResult`1[[System.Collections.Generic.List`1[[Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataPolicyInfo, Sravni.OsagoGateway.Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataResponseResult`1[[System.Collections.Generic.List`1[[Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataPolicyInfo, Sravni.OsagoGateway.Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataResponseResult`1[[System.Collections.Generic.List`1[[Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataPolicyInfo, Sravni.OsagoGateway.Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/pdata/v1/info2/{numbertype}/{number}/{key}/{key2}": {
    /** Получение полиса по Id ТС */
    get: {
      parameters: {
        path: {
          numbertype: string;
          number: string;
          key: string;
          key2: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataResponseResult`1[[Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataPolicyInfo, Sravni.OsagoGateway.Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataResponseResult`1[[Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataPolicyInfo, Sravni.OsagoGateway.Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataResponseResult`1[[Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataPolicyInfo, Sravni.OsagoGateway.Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/policydrafts": {
    /** Получает черновик полиса для заданных параметров в квере */
    post: {
      parameters: {
        query?: {
          companyId?: number;
          force?: boolean;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoQuery"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoQuery"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.PolicyDraftsResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.PolicyDraftsResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.PolicyDraftsResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/policydrafts/order/{orderHash}": {
    /** Получает черновик полиса по хешу заказа */
    get: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.PolicyDraftsResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.PolicyDraftsResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.PolicyDraftsResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/profile/resumeLink": {
    /** Получение ссылок восстановления */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.UserRequest"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.UserRequest"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.Core.UserRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Profile.Models.LinkResult"][];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Profile.Models.LinkResult"][];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Profile.Models.LinkResult"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/previouspolicy/{carNumber}": {
    /** Возвращает инфу по прошлому полису */
    get: {
      parameters: {
        query?: {
          Medium?: string;
          Source?: string;
          Campaign?: string;
          Content?: string;
          Term?: string;
          UAClientId?: string;
          YMClientId?: string;
        };
        path: {
          /** @description Номер тачки */
          carNumber: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.PreviousPolicy"];
            "application/json": components["schemas"]["Sravni.Osago.PreviousPolicy"];
            "text/json": components["schemas"]["Sravni.Osago.PreviousPolicy"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/osago/send-calc-link-updated": {
    /** Отправляет по электронной почте ссылку на расчет */
    post: {
      /** @description Запрос для отправки ссылки на расчет ОСАГО по почте */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.SendCalcLinkRequest"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.SendCalcLinkRequest"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.SendCalcLinkRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/osago/send-calc-link-updated-sms": {
    /** Отправляет по смс ссылку на расчет */
    post: {
      /** @description Запрос для отправки ссылки на расчет ОСАГО по смс */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.SendCalcLinkViaSmsRequest"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.SendCalcLinkViaSmsRequest"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.SendCalcLinkViaSmsRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/promoprograms": {
    /** Список промо-акций */
    post: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.PromoPrograms.Models.PromoProgram"][];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.PromoPrograms.Models.PromoProgram"][];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.PromoPrograms.Models.PromoProgram"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/promoprograms/{calcHash}/promo": {
    /** Возвращает список промоакций, применимых для данного расчета */
    get: {
      parameters: {
        query: {
          productId: number;
        };
        path: {
          calcHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.OsagoPromo.Models.PromoProgramDto"][];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.OsagoPromo.Models.PromoProgramDto"][];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.OsagoPromo.Models.PromoProgramDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/promoprograms/orders/{orderHash}/promos": {
    /** Возвращает список промоакций, применимых для данного заказа */
    get: {
      parameters: {
        path: {
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.OsagoPromo.Models.PromoProgramDto"][];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.OsagoPromo.Models.PromoProgramDto"][];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.OsagoPromo.Models.PromoProgramDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/orders/{orderHash}/queries": {
    /** Возвращает query для заказа */
    get: {
      parameters: {
        query?: {
          /** @description Игнорируем ДНД */
          ignoreLastDnd?: boolean;
        };
        path: {
          /** @description Хэш заказа */
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoQueryViewModel"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoQueryViewModel"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoQueryViewModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/queries/searchHash/{hash}/restore": {
    /** Восстанавливает query по хэшу расчета */
    get: {
      parameters: {
        path: {
          /** @description Хэш расчета */
          hash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Queries.Models.EnrichedOsagoQuery"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Queries.Models.EnrichedOsagoQuery"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Queries.Models.EnrichedOsagoQuery"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/queries/id/{id}/hash/{hash}": {
    /** Извлечение query по id и хэшу query */
    get: {
      parameters: {
        path: {
          id: number;
          /** @description Хэш запроса */
          hash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Queries.Models.EnrichedOsagoQuery"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Queries.Models.EnrichedOsagoQuery"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Queries.Models.EnrichedOsagoQuery"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/queries/orderHash/{orderHash}": {
    /** Возвращает query по хэшу заказа */
    get: {
      parameters: {
        path: {
          /** @description Хэш заказа */
          orderHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Queries.Models.EnrichedOsagoQuery"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Queries.Models.EnrichedOsagoQuery"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Queries.Models.EnrichedOsagoQuery"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/rates/split-osago-percent-rate/calculation": {
    /** Процент трафика на сервис расчетов ОСАГО */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/rates/split-osago-percent-rate/calculation/{rate}/{minutes}": {
    /** Процент трафика на сплитованное ОСАГО */
    post: {
      parameters: {
        path: {
          rate: number;
          minutes: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/rating/insurance-companies/summary": {
    /** Возвращает список со сводной информацией о рейтингах страховых компаний */
    get: {
      parameters: {
        query?: {
          date?: string;
          insuranceProductType?: string;
          sortType?: string;
          limit?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Rating.Models.InsuranceCompanyRatingResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Rating.Models.InsuranceCompanyRatingResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Rating.Models.InsuranceCompanyRatingResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/reviews": {
    /** Возвращает отзывы */
    get: {
      parameters: {
        query?: {
          locationId?: number;
          reviewObjectId?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Review.Models.ReviewsShortResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Review.Models.ReviewsShortResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Review.Models.ReviewsShortResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/seo/orders/recent": {
    /** Возвращение последних купленных полисов по фильтрам */
    get: {
      parameters: {
        query: {
          Quantity: number;
          CompanyId?: number;
          Route?: string;
          ModelId?: number;
          BrandId?: number;
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/short-prolongation/companies": {
    /** Получает информацию по доступным СК */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationCompanyInfo"][];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationCompanyInfo"][];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationCompanyInfo"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/short-prolongation/policyinfo": {
    /** Получить информацию по полису */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationPolicyInfoRequest"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationPolicyInfoRequest"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationPolicyInfoRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationPolicyInfo"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationPolicyInfo"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationPolicyInfo"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/short-prolongation": {
    /** Запуск короткой пролонгации */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationQuery"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationQuery"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.CreateShortProlongationResponse"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.CreateShortProlongationResponse"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.CreateShortProlongationResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/short-prolongation/{taskHash}": {
    /** Результаты короткой пролонгации */
    get: {
      parameters: {
        path: {
          /** @description taskHash */
          taskHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ShortProlongation.Models.ShortProlongationPollingResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ShortProlongation.Models.ShortProlongationPollingResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ShortProlongation.Models.ShortProlongationPollingResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/short-prolongation/{taskHash}/mock": {
    /** Результаты короткой пролонгации MOCK */
    get: {
      parameters: {
        path: {
          /** @description taskHash */
          taskHash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ShortProlongation.Models.ShortProlongationPollingResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ShortProlongation.Models.ShortProlongationPollingResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ShortProlongation.Models.ShortProlongationPollingResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/summaries": {
    /** Создание саммари */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Summary.Models.CreateSummaryRequest"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Summary.Models.CreateSummaryRequest"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.Summary.Models.CreateSummaryRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Summary.Models.CreateSummaryResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Summary.Models.CreateSummaryResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Summary.Models.CreateSummaryResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/x/test/redis": {
    /** Создает подписку пользователя */
    post: {
      parameters: {
        query?: {
          host?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/userorders/last": {
    /** Возвращает информацию о последних заказах пользователя */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.ResultModel`1[[Sravni.OsagoGateway.Service.ExternalDependencies.User.LastUserOrderInfo, Sravni.OsagoGateway.Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.ResultModel`1[[Sravni.OsagoGateway.Service.ExternalDependencies.User.LastUserOrderInfo, Sravni.OsagoGateway.Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.ResultModel`1[[Sravni.OsagoGateway.Service.ExternalDependencies.User.LastUserOrderInfo, Sravni.OsagoGateway.Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/usersearches/last": {
    /** Возвращает информацию о последних расчетах пользователя */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.ResultModel`1[[Sravni.OsagoGateway.Service.ExternalDependencies.User.LastUserSearchInfo, Sravni.OsagoGateway.Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.ResultModel`1[[Sravni.OsagoGateway.Service.ExternalDependencies.User.LastUserSearchInfo, Sravni.OsagoGateway.Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.ResultModel`1[[Sravni.OsagoGateway.Service.ExternalDependencies.User.LastUserSearchInfo, Sravni.OsagoGateway.Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/vsk/callback": {
    /** Сохранение колбэка от ВСК */
    post: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/x/calculation": {
    /** Старт расчета кроссов */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XCalculationRequest"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XCalculationRequest"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XCalculationRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XCalculationResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XCalculationResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XCalculationResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/x/calculation/{hash}": {
    /** Получение расчетов кроссов */
    get: {
      parameters: {
        path: {
          hash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XCalculationResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XCalculationResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XCalculationResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/x/order": {
    /** Запуск оформления заказа */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XOrderQuery"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XOrderQuery"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XOrderQuery"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XOrderResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XOrderResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XOrderResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/x/order/{hash}": {
    /** Получение результата оформления заказа */
    get: {
      parameters: {
        path: {
          hash: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XOrderResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XOrderResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XOrderResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/auto/v1/regnumber-token": {
    /** шифрование номера ТС */
    get: {
      parameters: {
        query?: {
          /** @description НомерТС */
          regNumber?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Auto.Models.CarNumberTokenResult"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Auto.Models.CarNumberTokenResult"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Auto.Models.CarNumberTokenResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/auto/v1/regnumber-token-info": {
    /** Получение информации о ТС по токену */
    get: {
      parameters: {
        query: {
          regNumberToken: string;
          "utm.campaign"?: string;
          "utm.medium"?: string;
          "utm.source"?: string;
          "partnerUtm.source"?: string;
          "partnerUtm.medium"?: string;
          "partnerUtm.campaign"?: string;
          userAgent?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Auto.Models.AutoInfo"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Auto.Models.AutoInfo"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Auto.Models.AutoInfo"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/auto/v1/clean/vehicle": {
    /** Стандартизация автомобилей */
    post: {
      /** @description Название авто */
      requestBody?: {
        content: {
          "application/json": string[];
          "text/json": string[];
          "application/*+json": string[];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Dadata.Models.CleanVehicleResult"][];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Dadata.Models.CleanVehicleResult"][];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Dadata.Models.CleanVehicleResult"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/auto/v1/brand/{brandId}": {
    /** Получение бренда ТС по Id */
    get: {
      parameters: {
        path: {
          /** @description Id марки */
          brandId: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Auto.Models.BrandViewModel"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Auto.Models.BrandViewModel"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Auto.Models.BrandViewModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/auto/v1/brands": {
    /** Получение марок авто, без года возвращает за последние 6 лет */
    get: {
      parameters: {
        query?: {
          yearFrom?: number;
          categories?: string[];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Auto.Models.BrandViewModel"][];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Auto.Models.BrandViewModel"][];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Auto.Models.BrandViewModel"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/auto/v1/info": {
    /** Получение информации о ТС */
    get: {
      parameters: {
        query: {
          /** @description Тип принимаемого значения (Number/Vin) */
          type: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Auto.Models.AvtoInfoQueryType"];
          value: string;
          "utm.campaign"?: string;
          "utm.medium"?: string;
          "utm.source"?: string;
          "partnerUtm.source"?: string;
          "partnerUtm.medium"?: string;
          "partnerUtm.campaign"?: string;
          userAgent?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.Auto.Models.AutoInfo"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.Auto.Models.AutoInfo"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.Auto.Models.AutoInfo"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/coefficients/kbm": {
    /** Возвращает КБМ по водителю */
    post: {
      /** @description Информация о водителе */
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoGateway.Service.OsagoCoefficients.Models.DriverRequestWithMarkersModel"];
          "text/json": components["schemas"]["Sravni.OsagoGateway.Service.OsagoCoefficients.Models.DriverRequestWithMarkersModel"];
          "application/*+json": components["schemas"]["Sravni.OsagoGateway.Service.OsagoCoefficients.Models.DriverRequestWithMarkersModel"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoGateway.Service.OsagoCoefficients.Models.CoefficientResponse"];
            "application/json": components["schemas"]["Sravni.OsagoGateway.Service.OsagoCoefficients.Models.CoefficientResponse"];
            "text/json": components["schemas"]["Sravni.OsagoGateway.Service.OsagoCoefficients.Models.CoefficientResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    "Sravni.Funnel.Data.Models.MarketingReviewsModel": {
      title?: string | null;
      /** Format: double */
      overallRating?: number;
      reviews?: components["schemas"]["Sravni.Funnel.Data.Models.ReviewDto"][] | null;
    };
    "Sravni.Funnel.Data.Models.ReviewDto": {
      /** Format: int32 */
      id?: number;
      name?: string | null;
      /** Format: double */
      rating?: number;
      text?: string | null;
    };
    "Sravni.Funnel.Shared.Dto.OsagoResult": {
      isSuccessfully?: boolean;
      error?: string | null;
    };
    "Sravni.Funnel.Shared.Dto.WishQuery": {
      wishText?: string | null;
      userAgent?: string | null;
    };
    /** @enum {string} */
    "Sravni.Funnel.Shared.Enums.AuthorType": "none" | "noAuth" | "auth";
    "Sravni.Micro.Errors.Error": {
      code?: string | null;
      target?: string | null;
      message?: string | null;
      attemptedValue?: string | null;
      details?: components["schemas"]["Sravni.Micro.Errors.Error"][] | null;
    };
    "Sravni.Micro.Errors.ErrorModel": {
      error?: components["schemas"]["Sravni.Micro.Errors.Error"];
    };
    "Sravni.Osago.CarDocumentInfo": {
      series?: string | null;
      number?: string | null;
      /** Format: date-time */
      date?: string;
      documentType?: components["schemas"]["Sravni.Osago.CarDocumentType"];
    };
    /** @enum {string} */
    "Sravni.Osago.CarDocumentType": "pts" | "sts" | "ePts";
    /** @enum {string} */
    "Sravni.Osago.DriverAmount": "limited" | "unlimited";
    "Sravni.Osago.DriverInfo": {
      lastName?: string | null;
      middleName?: string | null;
      firstName?: string | null;
      fullName?: string | null;
      /** Format: int64 */
      id?: number;
      /** Format: date-time */
      birthDate?: string;
      license?: components["schemas"]["Sravni.Osago.DriverLicense"];
      passport?: components["schemas"]["Sravni.Osago.Passport"];
      previousInfo?: components["schemas"]["Sravni.Osago.PreviousDriverInfo"];
      /** Format: int32 */
      age?: number;
      /** Format: int32 */
      experience?: number;
    };
    "Sravni.Osago.DriverLicense": {
      series?: string | null;
      number?: string | null;
      /** Format: date-time */
      date?: string;
    };
    "Sravni.Osago.DriversInfo": {
      driverAmount?: components["schemas"]["Sravni.Osago.DriverAmount"];
      drivers?: components["schemas"]["Sravni.Osago.DriverInfo"][] | null;
    };
    "Sravni.Osago.Dto.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
      result?: boolean;
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.Dto.AnyResult`1[[System.Guid, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
      /** Format: uuid */
      result?: string;
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.Osago.Fio": {
      lastName?: string | null;
      middleName?: string | null;
      firstName?: string | null;
      fullName?: string | null;
    };
    "Sravni.Osago.InsurancePeriod": {
      /** Format: date-time */
      periodBegin?: string;
      /** Format: date-time */
      periodEnd?: string;
    };
    "Sravni.Osago.MobileMarkers": {
      conversationId?: string | null;
      savedSearchId?: string | null;
      flowId?: string | null;
      isFlow?: boolean | null;
    };
    "Sravni.Osago.OsagoEarlyLeadQuery": {
      userPhone?: string | null;
      query?: components["schemas"]["Sravni.Osago.OsagoQuery"];
    };
    "Sravni.Osago.OsagoPerson": {
      lastName?: string | null;
      middleName?: string | null;
      firstName?: string | null;
      fullName?: string | null;
      passport?: components["schemas"]["Sravni.Osago.Passport"];
      /** Format: date-time */
      birthDate?: string;
      gender?: components["schemas"]["Sravni.Osago.Sex"];
      phone?: string | null;
      email?: string | null;
      registrationAddress?: string | null;
      /** Format: int32 */
      regionalCenterId?: number | null;
      io?: string | null;
      /** Format: int32 */
      age?: number;
    };
    "Sravni.Osago.OsagoQuery": {
      /** Format: int32 */
      brandId?: number;
      brandName?: string | null;
      modelName?: string | null;
      /** Format: int32 */
      year?: number;
      /** Format: int32 */
      modelId?: number;
      modification?: string | null;
      /** Format: int32 */
      enginePower?: number;
      engineSp?: string | null;
      registrationRoute?: string | null;
      registration?: string | null;
      getting?: string | null;
      gettingRoute?: string | null;
      /** Format: int32 */
      usageMonthsPerYear?: number;
      /** Format: date-time */
      policyStartDate?: string;
      driversInfo?: components["schemas"]["Sravni.Osago.DriversInfo"];
      carNumber?: string | null;
      vin?: string | null;
      bodyNumber?: string | null;
      chassisNumber?: string | null;
      /** Format: uuid */
      xUserId?: string | null;
      /** Format: int32 */
      userId?: number | null;
      owner?: components["schemas"]["Sravni.Osago.OsagoPerson"];
      insurer?: components["schemas"]["Sravni.Osago.OsagoPerson"];
      carDocument?: components["schemas"]["Sravni.Osago.CarDocumentInfo"];
      save?: components["schemas"]["Sravni.Osago.SaveQuery"];
      utm?: components["schemas"]["Sravni.Osago.UtmQuery"];
      partner?: components["schemas"]["Sravni.Osago.PartnerQuery"];
      promotionQuery?: components["schemas"]["Sravni.Osago.PromotionQuery"];
      mobileMarkers?: components["schemas"]["Sravni.Osago.MobileMarkers"];
      returnUrls?: components["schemas"]["Sravni.Osago.ReturnUrls"];
      amplitudeId?: string | null;
      platform?: string | null;
      withCasco?: boolean;
      isProlongation?: boolean;
      fromProlongation?: boolean;
      /** Format: int32 */
      accountPriority?: number | null;
      previousPolicy?: components["schemas"]["Sravni.Osago.PreviousPolicy"];
      prolongationKey?: string | null;
      isQuickSave?: boolean;
      periods?: components["schemas"]["Sravni.Osago.InsurancePeriod"][] | null;
      clid?: string | null;
      vehicleCategory?: components["schemas"]["Sravni.Osago.Shared.Dto.Enums.VehicleCategory"];
      /** Format: int32 */
      allowWeight?: number | null;
      hasTrailer?: boolean;
      isHealthPromo?: boolean;
      benefitCode?: string | null;
    };
    "Sravni.Osago.ParserApiInfo": {
      companyName?: string | null;
      policyNumber?: string | null;
      policySerial?: string | null;
      /** Format: date-time */
      policyStartDate?: string;
      /** Format: date-time */
      policyEndDate?: string;
      vin?: string | null;
      carNumber?: string | null;
      bodyNumber?: string | null;
      location?: string | null;
      /** Format: double */
      cost?: number | null;
      /** Format: date-time */
      insurantBirthDate?: string | null;
      insurantName?: string | null;
      /** Format: double */
      kbm?: number | null;
      /** Format: date-time */
      ownerBirthDate?: string | null;
      ownerName?: string | null;
      isPurchasedViaSravni?: boolean;
      /** Format: int32 */
      driversCount?: number;
    };
    "Sravni.Osago.PartnerQuery": {
      medium?: string | null;
      source?: string | null;
      campaign?: string | null;
      content?: string | null;
      term?: string | null;
      uaClientId?: string | null;
      ymClientId?: string | null;
      /** Format: int32 */
      referId?: number | null;
      allowZeroReward?: boolean | null;
      platform?: string | null;
      subId?: string | null;
      alfaUserId?: string | null;
      renessansUserId?: string | null;
      subagentRoute?: string | null;
      /** Format: int32 */
      affId?: number | null;
      /** Format: int32 */
      offerId?: number | null;
      affSub1?: string | null;
      affSub2?: string | null;
      affSub3?: string | null;
      affSub4?: string | null;
      affSub5?: string | null;
      sourceId?: string | null;
      transactionId?: string | null;
      agentRegion?: string | null;
    };
    "Sravni.Osago.Passport": {
      series?: string | null;
      number?: string | null;
      /** Format: date-time */
      issueDate?: string | null;
    };
    "Sravni.Osago.PreviousDriverInfo": {
      lastName?: string | null;
      middleName?: string | null;
      firstName?: string | null;
      fullName?: string | null;
      license?: components["schemas"]["Sravni.Osago.DriverLicense"];
    };
    "Sravni.Osago.PreviousPolicy": {
      series?: string | null;
      number?: string | null;
      company?: string | null;
      /** Format: int32 */
      companyId?: number;
      /** Format: date-time */
      policyStartDate?: string | null;
      /** Format: date-time */
      policyEndDate?: string | null;
      vin?: string | null;
      carNumber?: string | null;
      bodyNumber?: string | null;
      location?: string | null;
      /** Format: double */
      price?: number | null;
      /** Format: date-time */
      insurantBirthDate?: string | null;
      insurantName?: string | null;
      /** Format: double */
      kbm?: number | null;
      /** Format: date-time */
      ownerBirthDate?: string | null;
      ownerName?: string | null;
      isPurchasedViaSravni?: boolean;
      /** Format: int32 */
      driversCount?: number;
    };
    "Sravni.Osago.PromotionQuery": {
      source?: string | null;
      campaign?: string | null;
      category?: string | null;
      sub1?: string | null;
      sub2?: string | null;
    };
    "Sravni.Osago.ReturnUrls": {
      succesUrl?: string | null;
      failureUrl?: string | null;
    };
    "Sravni.Osago.SaveQuery": {
      /** Format: int32 */
      productId?: number;
      /** Format: int64 */
      searchId?: number;
      isRoute?: boolean;
      /** Format: int32 */
      originalCompanyId?: number | null;
      isTrySave?: boolean;
      isThroughOrder?: boolean;
      /** Format: int32 */
      requiredOsagoUpsaleId?: number | null;
    };
    /** @enum {string} */
    "Sravni.Osago.Sex": "unknown" | "male" | "female";
    "Sravni.Osago.Shared.Dto.Dto.SendPaymentUrlResponse": {
      isSent?: boolean;
      errors?: string[] | null;
    };
    /** @enum {string} */
    "Sravni.Osago.Shared.Dto.Enums.VehicleCategory": "b" | "c" | "a";
    "Sravni.Osago.Shared.Dto.ExtendedPromoInfo": {
      code?: string | null;
      /** Format: int32 */
      activationCount?: number;
      productType?: components["schemas"]["Sravni.OsagoPromo.Shared.Enums.ProductType"];
      /** Format: date-time */
      dateCreate?: string;
      isActive?: boolean;
      name?: string | null;
      description?: string | null;
      promoPartner?: components["schemas"]["Sravni.OsagoPromo.Shared.Enums.PromoPartner"];
      /** Format: double */
      benefitValue?: number;
      benefitType?: components["schemas"]["Sravni.OsagoPromo.Shared.Enums.BenefitType"];
      /** Format: date-time */
      dateFrom?: string;
      /** Format: date-time */
      expirationDate?: string;
      /** Format: int32 */
      programId?: number;
      programIsExtended?: boolean;
      geos?: components["schemas"]["Sravni.OsagoPromo.Shared.Models.PromoGeo"][] | null;
      organisations?: components["schemas"]["Sravni.OsagoPromo.Shared.Models.PromoOrganisation"][] | null;
      /** Format: int32 */
      amount?: number;
    };
    "Sravni.Osago.Shared.Dto.Order.OrderPolicyLoadInfoDto": {
      policyLink?: string | null;
      archiveLink?: string | null;
      policyNumber?: string | null;
    };
    "Sravni.Osago.UtmQuery": {
      medium?: string | null;
      source?: string | null;
      campaign?: string | null;
      content?: string | null;
      term?: string | null;
      uaClientId?: string | null;
      ymClientId?: string | null;
    };
    /** @description Информация по номеру авто и связанные с ней данные для заполнения формы */
    "Sravni.OsagoGateway.Service.Auto.Models.AutoInfo": {
      brand?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Auto.Models.BrandViewModel"];
      model?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Auto.Models.ModelViewModel"];
      carDocument?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Auto.Models.CarDocumentInfoViewModel"];
      /** @description VIN */
      vin?: string | null;
      /** @description номер кузова */
      bodyNumber?: string | null;
      /** @description Номер Шасси */
      chassisNumber?: string | null;
      /** @description Регистрационный номер автомобиля. */
      carNumber?: string | null;
      /**
       * Format: int32
       * @description г/в
       */
      year?: number;
      /**
       * Format: int32
       * @description мощность л.с.
       */
      power?: number;
      /** @description список годов выпуска марки */
      years?: number[] | null;
      /** @description список моделей марки по году выпуска */
      models?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Auto.Models.ModelViewModel"][] | null;
      /** @description список л.с. марки */
      powers?: number[] | null;
      /**
       * Format: date-time
       * @description Дата выдачи СТС
       */
      stsReceive?: string | null;
      /** @description Категория */
      category?: string | null;
    };
    "Sravni.OsagoGateway.Service.Auto.Models.CarNumberTokenResult": {
      token?: string | null;
      page?: string | null;
      param?: string | null;
    };
    "Sravni.OsagoGateway.Service.Calculations.Models.CalculationResult": {
      /** @description Расчет завершен */
      isCompleted?: boolean;
      /** @description Ответы от СК */
      results?: components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.CompanyCalculationResult"][] | null;
      kbmInfo?: components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.KbmInfo"];
      /** @description Коэффициенты */
      osagoCoefficients?: components["schemas"]["Sravni.OsagoGateway.Service.OsagoCoefficients.Models.OsagoCoefficient"][] | null;
      economyRecommendations?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.EconomyRecommenadtions.EconomyRecommendations"];
    };
    /** @description Данные о документе на ТС */
    "Sravni.OsagoGateway.Service.Calculations.Models.CarDocumentInfoNullableDate": {
      /** @description Серия */
      series?: string | null;
      /** @description Номер */
      number?: string | null;
      /**
       * Format: date-time
       * @description Дата выдачи
       */
      date?: string | null;
      documentType?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.CarDocumentType"];
    };
    "Sravni.OsagoGateway.Service.Calculations.Models.CompanyCalculationResult": {
      /**
       * Format: int32
       * @description Ид Продукта ОСАГО
       */
      osagoId?: number;
      /**
       * Format: int32
       * @description Ид компании
       */
      companyId?: number;
      /**
       * Format: double
       * @description Цена
       */
      price?: number;
      fractionalPaymentInfo?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.FractionalPaymentInfo"];
      isProlongation?: boolean;
      /** @description Список кодов промоакций, применимых для предложения */
      promoList?: string[] | null;
      tb?: components["schemas"]["Sravni.OsagoGateway.Service.OsagoCoefficients.Models.OsagoCoefficient"];
    };
    "Sravni.OsagoGateway.Service.Calculations.Models.DriverKbm": {
      /** @description Фамилия */
      lastName?: string | null;
      /** @description Отчество */
      middleName?: string | null;
      /** @description Имя */
      firstName?: string | null;
      /** Format: double */
      kbm?: number | null;
    };
    "Sravni.OsagoGateway.Service.Calculations.Models.KbmInfo": {
      drivers?: components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.DriverKbm"][] | null;
      multidrive?: components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.Multidrive"];
    };
    /** @description Дефолтный КБМ при мультидрайве */
    "Sravni.OsagoGateway.Service.Calculations.Models.Multidrive": {
      /** Format: double */
      defaultKbm?: number;
    };
    /** @description Информация о рекомендуемой ДНД */
    "Sravni.OsagoGateway.Service.Calculations.Models.RecommendedStartDateDto": {
      /** @description Рекомендуемая дата */
      startDate?: string | null;
      /** @description Признак того что рекомендуемая ДНД основана на данных о прошлом полисе */
      isByPolicy?: boolean;
      /** @description Признак того что рекомендуемая ДНД основана на раннем заказе */
      isByEarlyOrder?: boolean;
      /** @description Название предыдущей страховой */
      insCompanyName?: string | null;
      /**
       * Format: date-time
       * @description Дата окончания прошлого полиса
       */
      lastPolicyEndDate?: string | null;
      /**
       * Format: int32
       * @description Id предыдущей страховой
       */
      insCompanyId?: number;
      /**
       * Format: double
       * @description Цена прошлого полиса
       */
      lastPolicyPrice?: number;
    };
    "Sravni.OsagoGateway.Service.Calculations.Models.RecommendedStartDateRequestModel": {
      /** @description Номер автомобиля */
      carNumber?: string | null;
      /** @description VIN ТС */
      vin?: string | null;
      /** @description Кузов ТС */
      bodyNumber?: string | null;
      utm?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.UtmQuery"];
      ownerFio?: components["schemas"]["Sravni.Osago.Fio"];
      /**
       * Format: date-time
       * @description Дата рождения страхователя
       */
      ownerBirthDate?: string | null;
    };
    "Sravni.OsagoGateway.Service.Calculations.Models.StartCalculationRequest": {
      /**
       * Format: int32
       * @description id бренда ТС
       */
      brandId?: number;
      /**
       * Format: int32
       * @description год выпуска ТС
       */
      year?: number;
      /**
       * Format: int32
       * @description id модели ТС
       */
      modelId?: number;
      /** @description Модификация ТС */
      modification?: string | null;
      /**
       * Format: int32
       * @description мощность ТС
       */
      enginePower?: number;
      /** @description населенный пункт регистрации собственника */
      registration?: string | null;
      /** @description населенный пункт получения */
      getting?: string | null;
      /**
       * Format: date-time
       * @description Дата начала договора || расчета кбм
       */
      policyStartDate?: string;
      driversInfo?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.DriversInfo"];
      /** @description Номер автомобиля */
      carNumber?: string | null;
      /** @description VIN ТС */
      vin?: string | null;
      /** @description Номер кузова */
      bodyNumber?: string | null;
      /** @description Номер Шасси */
      chassisNumber?: string | null;
      /**
       * Format: int32
       * @description id пользователя в системе сравни.ру
       */
      userId?: number | null;
      owner?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoPerson"];
      insurer?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoPerson"];
      carDocument?: components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.CarDocumentInfoNullableDate"];
      utm?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.UtmQuery"];
      partner?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PartnerQuery"];
      promotionQuery?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PromotionQuery"];
      /** @description Id в системе Amplitude */
      amplitudeId?: string | null;
      /** @description Для кастомной прометки: например (Основной веб-сайт, новый сайт, мобилка и т.д.) */
      platform?: string | null;
      /** @description Пролонгация? */
      isProlongation?: boolean;
      /** @description Признак того, что квери получена из пролонгации. Делаем отдельно от IsProlongation, чтобы не было проблем при создании заказа */
      fromProlongation?: boolean;
      /**
       * Format: int32
       * @description Аккаунт под которым выполняется сохранение в СК
       */
      accountPriority?: number | null;
      previousPolicy?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PreviousPolicy"];
      /** @description Опциональный ключ пролонгации */
      prolongationKey?: string | null;
      /** @description Метка контекстной рекламы */
      clid?: string | null;
      vehicleCategory?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.VehicleCategory"];
      isResident?: boolean;
      /** Format: int32 */
      usageMonthsPerYear?: number;
      /** @description Промокод */
      benefitCode?: string | null;
    };
    "Sravni.OsagoGateway.Service.Calculations.Models.StartCalculationResult": {
      /** @description Хэш созданного расчета */
      hash?: string | null;
      /** @description Признак ошибки РСА, при которой создание расчета невозможно */
      isRsaError?: boolean;
      /** @description Показывать поле промо */
      showPromoField?: boolean;
    };
    "Sravni.OsagoGateway.Service.Companies.Models.Company": {
      /**
       * Format: int32
       * @description ИД компании
       */
      id?: number;
      /** @description Название */
      name?: string | null;
      /** @description Ссылка на лого компании */
      logoUrl?: string | null;
      ratingInfo?: components["schemas"]["Sravni.OsagoGateway.Service.Companies.Models.RatingInfo"];
      /**
       * Format: int32
       * @description Лет на рынке
       */
      yearsOnMarket?: number | null;
      /**
       * Format: int32
       * @description кол-во отделений
       */
      branchCount?: number;
      /**
       * Format: int32
       * @description Работает со сравни
       */
      yearsWithSravni?: number | null;
      /** @description Продано полисов */
      soldPolicyCount?: string | null;
      /** @description Продано полисов за вчера */
      soldYesterdayPolicyCount?: string | null;
      /**
       * Format: int32
       * @description Год основания компании
       */
      foundationYear?: number | null;
      /**
       * Format: double
       * @description Доля рынка
       */
      marketShare?: number | null;
    };
    "Sravni.OsagoGateway.Service.Companies.Models.Rating": {
      /** @description Название */
      name?: string | null;
      /** @description Описание */
      description?: string | null;
      /** @description Величина рейтинга */
      value?: string | null;
      /** @description Текстовое описание для значение */
      ratingDescription?: string | null;
    };
    /** @description Разбивка рейтинга */
    "Sravni.OsagoGateway.Service.Companies.Models.RatingDetalization": {
      /** Format: int32 */
      star1Count?: number;
      /** Format: int32 */
      star2Count?: number;
      /** Format: int32 */
      star3Count?: number;
      /** Format: int32 */
      star4Count?: number;
      /** Format: int32 */
      star5Count?: number;
    };
    "Sravni.OsagoGateway.Service.Companies.Models.RatingInfo": {
      /**
       * Format: double
       * @description клиентский рейтинг
       */
      clientRating?: number;
      /**
       * Format: double
       * @description Экспертный рейтинг
       */
      expertRating?: number | null;
      /** @description Рейтинг выплат */
      paymentRating?: string | null;
      /** @description Значение рейтинга выплат */
      paymentRatingDescription?: string | null;
      clientRatingDetalization?: components["schemas"]["Sravni.OsagoGateway.Service.Companies.Models.RatingDetalization"];
      positiveTag?: components["schemas"]["Sravni.OsagoGateway.Service.Companies.Models.ReviewRating"];
      negativeTag?: components["schemas"]["Sravni.OsagoGateway.Service.Companies.Models.ReviewRating"];
      /** @description Рейтинги */
      ratings?: components["schemas"]["Sravni.OsagoGateway.Service.Companies.Models.Rating"][] | null;
      /** @description Комментарий к рейтингам (Доля отказов выше среднего...) */
      comment?: string | null;
    };
    "Sravni.OsagoGateway.Service.Companies.Models.ReviewRating": {
      /** @description Название */
      name?: string | null;
      /** @description Описание */
      description?: string | null;
      /** @description Значение */
      ratingValue?: string | null;
    };
    "Sravni.OsagoGateway.Service.Core.Models.AnyResult`1[[System.Boolean, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
      result?: boolean;
      error?: string | null;
      hasError?: boolean;
    };
    "Sravni.OsagoGateway.Service.Core.Models.EnrichedAddress": {
      /** @description Уровень ФИАС */
      fiasLevel?: string | null;
      /** @description Стандартизированный адрес */
      normalizedAddress?: string | null;
      /** @description Квартира */
      flatNumber?: string | null;
      /** @description Регион */
      region?: string | null;
      /** @description Поселение */
      settlement?: string | null;
      /** @description Город */
      city?: string | null;
      /** @description Улица */
      street?: string | null;
      /** @description Область */
      area?: string | null;
    };
    /** @description Маркер Source/Medium/Campaign */
    "Sravni.OsagoGateway.Service.Core.Models.Marker": {
      /** @description Source */
      source?: string | null;
      /** @description Medium */
      medium?: string | null;
      /** @description Campaign */
      campaign?: string | null;
    };
    "Sravni.OsagoGateway.Service.Core.Models.PersonAddress": {
      data?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.EnrichedAddress"];
      /** @description Форматированный адрес для отображения */
      formattedAddress?: string | null;
      /** @description ФИАС-уровень на основе форматированного адреса */
      formattedFiasLevel?: string | null;
    };
    "Sravni.OsagoGateway.Service.Core.Models.PolicyDraftsResult": {
      result?: string | null;
      upsalePolicyDraftUrl?: string | null;
      kidUrl?: string | null;
      error?: string | null;
      hasError?: boolean;
    };
    /** @description Модель для вывода части списка с указанием */
    "Sravni.OsagoGateway.Service.Core.Models.ResultModel`1[[Sravni.OsagoGateway.Service.ExternalDependencies.User.LastUserOrderInfo, Sravni.OsagoGateway.Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      result?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.User.LastUserOrderInfo"][] | null;
      error?: string | null;
      hasError?: boolean;
      /**
       * Format: int32
       * @description общее количество записей
       */
      total?: number;
    };
    /** @description Модель для вывода части списка с указанием */
    "Sravni.OsagoGateway.Service.Core.Models.ResultModel`1[[Sravni.OsagoGateway.Service.ExternalDependencies.User.LastUserSearchInfo, Sravni.OsagoGateway.Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      result?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.User.LastUserSearchInfo"][] | null;
      error?: string | null;
      hasError?: boolean;
      /**
       * Format: int32
       * @description общее количество записей
       */
      total?: number;
    };
    /**
     * @description Возможно есть что поправить надо сообщить фронту где
     * @enum {string}
     */
    "Sravni.OsagoGateway.Service.Core.Polling.AlertAction": "none" | "goToDriverStep" | "disableUpsale" | "policyPriceChange" | "enterRegNumber" | "turnOffDrivers" | "policyEndDateText" | "takePayUrlOnTheNextStep" | "recommendedInsuranceCompany" | "cashbackMobile" | "enterSTS" | "enterRegNumberAndSTS" | "openPromoModal";
    "Sravni.OsagoGateway.Service.Core.Polling.AlertModel": {
      alert?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.ColorType"];
      title?: string | null;
      description?: string | null;
      modalTitle?: string | null;
      url?: string | null;
      action?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.AlertAction"];
      code?: string | null;
    };
    /**
     * @description Цвет
     * @enum {string}
     */
    "Sravni.OsagoGateway.Service.Core.Polling.ColorType": "green" | "red" | "orange" | "blue" | "gray" | "white" | "yellow" | "dark" | "violet";
    /**
     * @description Тип цвета
     * @enum {string}
     */
    "Sravni.OsagoGateway.Service.Core.Polling.ColorVariant": "primary" | "secondary";
    "Sravni.OsagoGateway.Service.Core.Polling.CompanyInfo": {
      main?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.MainInfo"];
      hidden?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.HiddenInfo"];
      /** Format: int32 */
      id?: number;
      name?: string | null;
    };
    "Sravni.OsagoGateway.Service.Core.Polling.CompanyShortProposition": {
      /** Format: int32 */
      id?: number;
      name?: string | null;
      price?: string | null;
      paymentUrl?: string | null;
    };
    "Sravni.OsagoGateway.Service.Core.Polling.Field": {
      name?: string | null;
      title?: string | null;
      value?: string | null;
      subTitle?: string | null;
      accordionItems?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.Field"][] | null;
      icon?: string | null;
      alerts?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.AlertModel"][] | null;
      subFields?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.Field"][] | null;
      files?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.SravniFile"][] | null;
      proposition?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.CompanyShortProposition"];
    };
    "Sravni.OsagoGateway.Service.Core.Polling.FormulaInfo": {
      resultText?: string | null;
      multipliers?: string[] | null;
    };
    "Sravni.OsagoGateway.Service.Core.Polling.GoodBadInfo": {
      positiveTag?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.InternalRow"];
      negativeTag?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.InternalRow"];
    };
    "Sravni.OsagoGateway.Service.Core.Polling.HiddenInfo": {
      rating?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.RatingRow"];
      price?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.PriceRow"];
      promo?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.PromoRow"];
      alerts?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.AlertModel"][] | null;
      aboutCompany?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.Row"];
      offices?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.Row"];
    };
    "Sravni.OsagoGateway.Service.Core.Polling.InternalRow": {
      title?: string | null;
      description?: string | null;
      label?: string | null;
      value?: string | null;
      color?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.ColorType"];
    };
    "Sravni.OsagoGateway.Service.Core.Polling.MainInfo": {
      /** Format: double */
      stars?: number;
      /** Format: int32 */
      promoCount?: number;
      columns?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.TitleDescription"][] | null;
    };
    "Sravni.OsagoGateway.Service.Core.Polling.Offer": {
      company?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.CompanyInfo"];
      /** Format: int32 */
      osagoId?: number;
      /** Format: double */
      price?: number;
      fractionalPaymentInfo?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.FractionalPaymentInfo"];
      isProlongation?: boolean;
      upsaleResults?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.UpsaleDto"][] | null;
      /** Format: date-time */
      startDate?: string | null;
      tags?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.Tag"][] | null;
      upperTags?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.UpperTag"][] | null;
      /** Format: double */
      tb?: number | null;
      alerts?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.AlertModel"][] | null;
      calcHash?: string | null;
      finallyPrice?: string | null;
      /** @description Признак Спонсора раздела */
      isSectionSponsor?: boolean;
      policyBlankLink?: string | null;
    };
    /** @enum {string} */
    "Sravni.OsagoGateway.Service.Core.Polling.OfferTagType": "promo" | "insuranceCompany" | "startDate" | "upSale" | "recommendedCompany" | "cheapestCompany" | "cashbackCalculation" | "cashbackOrder" | "timeLimitedCashbackCalculation" | "timeLimitedCashbackOrder" | "promoWithDetails";
    "Sravni.OsagoGateway.Service.Core.Polling.PollingResult": {
      /** @description процесс завершен? */
      isCompleted?: boolean;
      /** @description предложения к выводу */
      offers?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.Offer"][] | null;
      orderInfo?: components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.OrderInfo"];
      /** @description алерты к выводу */
      alerts?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.AlertModel"][] | null;
      kbmInfo?: components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.KbmInfo"];
      economyRecommendations?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.EconomyRecommenadtions.EconomyRecommendations"];
      benefitSuccess?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.AlertModel"][] | null;
      /** Format: int32 */
      benefitCodeSecondsLeft?: number | null;
      recommendedStartDate?: components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.RecommendedStartDateDto"];
      marketingBanner?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Recommendations.MarketingBannerModel"][] | null;
      unavailableOffers?: components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.OrderInfo.ShortCompanyInfo"][] | null;
      inProgressOffers?: components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.OrderInfo.ShortCompanyInfo"][] | null;
    };
    "Sravni.OsagoGateway.Service.Core.Polling.PriceRow": {
      title?: string | null;
      subTitle?: string | null;
      comment?: string | null;
      description?: string | null;
      texts?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.TitleDescription"][] | null;
      isOpen?: boolean;
      formula?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.FormulaInfo"];
      formulaRows?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.InternalRow"][] | null;
      price?: string | null;
      priceTitle?: string | null;
    };
    "Sravni.OsagoGateway.Service.Core.Polling.PromoRow": {
      title?: string | null;
      subTitle?: string | null;
      comment?: string | null;
      description?: string | null;
      texts?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.TitleDescription"][] | null;
      isOpen?: boolean;
      promos?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.OsagoPromo.Models.PromoProgramDto"][] | null;
    };
    "Sravni.OsagoGateway.Service.Core.Polling.RatingDetalization": {
      /** Format: int32 */
      star1Count?: number;
      /** Format: int32 */
      star2Count?: number;
      /** Format: int32 */
      star3Count?: number;
      /** Format: int32 */
      star4Count?: number;
      /** Format: int32 */
      star5Count?: number;
    };
    "Sravni.OsagoGateway.Service.Core.Polling.RatingRow": {
      title?: string | null;
      subTitle?: string | null;
      comment?: string | null;
      description?: string | null;
      texts?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.TitleDescription"][] | null;
      isOpen?: boolean;
      detalization?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.RatingDetalization"];
      goodBad?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.GoodBadInfo"];
      ratings?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.InternalRow"][] | null;
    };
    "Sravni.OsagoGateway.Service.Core.Polling.Row": {
      title?: string | null;
      subTitle?: string | null;
      comment?: string | null;
      description?: string | null;
      texts?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.TitleDescription"][] | null;
      isOpen?: boolean;
    };
    "Sravni.OsagoGateway.Service.Core.Polling.SravniFile": {
      name?: string | null;
      src?: string | null;
    };
    /** @description Additional affer infos */
    "Sravni.OsagoGateway.Service.Core.Polling.Tag": {
      type?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.OfferTagType"];
      /** @description Additional offer info text */
      title?: string | null;
      color?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.ColorType"];
      colorVariant?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.ColorVariant"];
    };
    "Sravni.OsagoGateway.Service.Core.Polling.TitleDescription": {
      title?: string | null;
      description?: string | null;
    };
    /** @description UpperTag */
    "Sravni.OsagoGateway.Service.Core.Polling.UpperTag": {
      type?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.OfferTagType"];
      /** @description Additional offer info text */
      title?: string | null;
      color?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.ColorType"];
      colorVariant?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.ColorVariant"];
      /** @description Text */
      text?: string | null;
      /** @description Идентификатор */
      code?: string | null;
    };
    "Sravni.OsagoGateway.Service.Core.Polling.UpsaleDto": {
      /** Format: double */
      price?: number;
      name?: string | null;
      description?: string | null;
      finallyPrice?: string | null;
    };
    "Sravni.OsagoGateway.Service.Core.UserRequest": {
      userToken?: string | null;
    };
    "Sravni.OsagoGateway.Service.Events.Models.CreateEventRequest": {
      /** @description События, возникающие при пользовательских действиях на фронте */
      eventName?: string | null;
      /** @description Предыдущий шаг флоу */
      previousStepName?: string | null;
      /** @description ИД расчета */
      searchId?: string | null;
      /** @description Хэш заказа */
      orderHash?: string | null;
      /** @description Токен пользователя */
      userToken?: string | null;
      /** @description Юзер агент */
      userAgent?: string | null;
      query?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoQuery"];
      quickPriceInfo?: components["schemas"]["Sravni.OsagoGateway.Service.Events.Models.QuickPriceInfoDto"];
      authorType?: components["schemas"]["Sravni.Funnel.Shared.Enums.AuthorType"];
      /** @description Флаг отказа от коммуникации с экспонией */
      withoutCommunication?: boolean;
    };
    "Sravni.OsagoGateway.Service.Events.Models.MarketingThingsModel": {
      marketingBanners?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Recommendations.MarketingBannerModel"][] | null;
      marketingReviews?: components["schemas"]["Sravni.Funnel.Data.Models.MarketingReviewsModel"];
    };
    "Sravni.OsagoGateway.Service.Events.Models.OsagoSearchResultClickRequest": {
      hash?: string | null;
      /** Format: int32 */
      place?: number;
      /** Format: int32 */
      osagoId?: number;
      /** Format: date-time */
      clickDate?: string;
    };
    "Sravni.OsagoGateway.Service.Events.Models.QuickPriceInfoDto": {
      /**
       * Format: int32
       * @description Минимальная цена
       */
      minPrice?: number;
      /**
       * Format: int32
       * @description Медианная цена
       */
      medianPrice?: number;
      /**
       * Format: int32
       * @description Максимальная цена
       */
      maxPrice?: number;
    };
    /** @description Метки по регзнаку */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Analytics.Models.RegNumberMarkerDto": {
      regNumber?: string | null;
      vin?: string | null;
      /** Format: int32 */
      userId?: number | null;
      utm?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.UtmQuery"];
      partner?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PartnerQuery"];
      promotion?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PromotionQuery"];
    };
    /**
     * @description Тип данных, по которым нужно узнать информацию о ТС.
     * @enum {string}
     */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Auto.Models.AvtoInfoQueryType": "number" | "vin" | "body" | "chassis" | "policy";
    /** @description Марка автомобиля */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Auto.Models.BrandViewModel": {
      /**
       * Format: int32
       * @description Id
       */
      id?: number;
      /** @description Название */
      name?: string | null;
      /** @description Алиас */
      alias?: string | null;
      /**
       * Format: int32
       * @description Популярность
       */
      popularity?: number;
      /** @description Первая буква марки */
      firstLetter?: string | null;
      /** @description Иностранная */
      isImported?: boolean;
      /** @description популярный? */
      isPopular?: boolean;
    };
    /** @description Данные о документе на ТС */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Auto.Models.CarDocumentInfoViewModel": {
      /** @description Серия */
      series?: string | null;
      /** @description Номер */
      number?: string | null;
      /**
       * Format: date-time
       * @description Дата выдачи
       */
      date?: string | null;
      documentType?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.CarDocumentType"];
    };
    /** @description модель вью модели авто */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Auto.Models.ModelViewModel": {
      /**
       * Format: int32
       * @description id
       */
      id?: number;
      /** @description название */
      name?: string | null;
      /** @description alias */
      alias?: string | null;
      /** @description Доступные категории ТС */
      categories?: string[] | null;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.Dadata.Models.CleanVehicleResult": {
      source?: string | null;
      brand?: string | null;
      model?: string | null;
    };
    /** @description Населённый пункт */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Location.Models.Location": {
      /**
       * Format: int32
       * @description Идентификатор
       */
      id?: number;
      /** @description Название */
      name?: string | null;
      /** @description Полное название */
      fullName?: string | null;
      /** @description Название региона */
      regionName?: string | null;
      /** @description Название в местном падеже с предлогом (в Москве, во Владивостоке) */
      nameLocative?: string | null;
      /** @description Название в родительном падеже (Москвы, Владивостока) */
      nameGenitive?: string | null;
      /** @description Роут */
      route?: string | null;
      /** @description Уникальный алиас */
      alias?: string | null;
      /** @description Тип населённого пункта */
      localityType?: string | null;
      /** @description Тип населённого пункта (сокращенное наименование) */
      shortLocationType?: string | null;
      /**
       * Format: double
       * @description широта
       */
      latitude?: number;
      /**
       * Format: double
       * @description долгота
       */
      longitude?: number;
      /**
       * Format: int32
       * @description Порядок сортировки (от большего к меньшему)
       */
      priority?: number | null;
      /**
       * Format: uuid
       * @description Классификатор ФИАС
       */
      fias?: string | null;
      /** @description Классификатор КЛАДР */
      kladr?: string | null;
      /** @description Код региона */
      regionCode?: string | null;
      /** @description ОКАТО */
      okato?: string | null;
      /** @description ОКТМО */
      oktmo?: string | null;
    };
    /** @description Пары orderHash - userId */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Orders.Models.OrderHashUserIdPair": {
      /** @description Hash заказа */
      orderHash?: string | null;
      /**
       * Format: int32
       * @description Id пользователя
       */
      userId?: number;
    };
    /** @description Предложение пользователю в случае неуспешного заказа */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.AdditionalOfferDto": {
      redirects?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.AdditionalOfferOsagoDto"][] | null;
      /** @description Признак того что заявку можно отдать агентам */
      canSendToAgent?: boolean;
      /**
       * Format: int32
       * @description Показывать ли предложение по каско
       */
      cascoShowOption?: number;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.AdditionalOfferOsagoDto": {
      /**
       * Format: int32
       * @description ид продукта
       */
      osagoId?: number;
      /**
       * Format: int32
       * @description ид компании
       */
      companyId?: number;
      /** @description Ссылка перехода на сайт СК */
      redirectUrl?: string | null;
      /**
       * Format: double
       * @description Цена
       */
      price?: number;
    };
    /** @description Данные о документе на ТС */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.CarDocumentInfo": {
      /** @description Серия */
      series?: string | null;
      /** @description Номер */
      number?: string | null;
      /**
       * Format: date-time
       * @description Дата выдачи
       */
      date?: string;
      documentType?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.CarDocumentType"];
    };
    /**
     * @description Тип документа на ТС
     * @enum {string}
     */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.CarDocumentType": "pts" | "sts" | "ePts";
    /**
     * @description ограничение по водителям
     * @enum {string}
     */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.DriverAmount": "limited" | "unlimited";
    /** @description Информация о водителе */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.DriverInfo": {
      /** @description Фамилия */
      lastName?: string | null;
      /** @description Отчество */
      middleName?: string | null;
      /** @description Имя */
      firstName?: string | null;
      /**
       * Format: int64
       * @description Идентификатор
       */
      id?: number;
      /**
       * Format: date-time
       * @description Дата рождения
       */
      birthDate?: string;
      license?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.DriverLicense"];
      previousInfo?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PreviousDriverInfo"];
      /**
       * Format: int32
       * @description Возраст
       */
      age?: number;
      /**
       * Format: int32
       * @description Стаж
       */
      experience?: number;
      /** @description полное имя */
      fullName?: string | null;
    };
    /** @description данные В/У */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.DriverLicense": {
      /** @description серия паспорта */
      series?: string | null;
      /** @description номер паспорта */
      number?: string | null;
      /**
       * Format: date-time
       * @description дата выдачи первых В/У. написанно в В/У или в последнем договоре ОСАГО
       */
      date?: string;
    };
    /** @description Информация о водителях */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.DriversInfo": {
      driverAmount?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.DriverAmount"];
      /** @description список водителей */
      drivers?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.DriverInfo"][] | null;
    };
    /** @description Рекомендация по исключению водителя с худшим коэффициентом возраста/стажа */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.EconomyRecommenadtions.AgeExperienceRecommendation": {
      worstDriverFirstName?: string | null;
      worstDriverLastName?: string | null;
      worstDriverMiddleName?: string | null;
      /** Format: date-time */
      worstDriverBirthDate?: string;
      /** Format: double */
      worstDriverAgeExperienceCoeff?: number;
      /** Format: double */
      economyMin?: number;
      /** Format: double */
      economyMax?: number;
      text?: string | null;
    };
    /** @description Рекомендация о количестве водителей */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.EconomyRecommenadtions.DriversCountRecommendation": {
      /** Format: int32 */
      curentDriversCount?: number;
      /** Format: int32 */
      suitableDriversCount?: number;
      text?: string | null;
    };
    /** @description Рекомендации по экономии на покупке полиса */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.EconomyRecommenadtions.EconomyRecommendations": {
      kbmRecommendation?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.EconomyRecommenadtions.KbmRecommendation"];
      ownerRecommendation?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.EconomyRecommenadtions.OwnerRecommendation"];
      startDateRecommendation?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.EconomyRecommenadtions.StartDateRecommendation"];
      driversCountRecommendation?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.EconomyRecommenadtions.DriversCountRecommendation"];
      ageExperienceRecommendation?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.EconomyRecommenadtions.AgeExperienceRecommendation"];
    };
    /** @description Рекомендация по исключению водителя с худшим КБМ */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.EconomyRecommenadtions.KbmRecommendation": {
      worstDriverFirstName?: string | null;
      worstDriverLastName?: string | null;
      worstDriverMiddleName?: string | null;
      /** Format: date-time */
      worstDriverBirthDate?: string;
      /** Format: double */
      worstDriverKbm?: number;
      /** Format: double */
      economyMin?: number;
      /** Format: double */
      economyMax?: number;
      text?: string | null;
    };
    /** @description Рекомендация о том, что владелец и страхователь должен быть одним лицом */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.EconomyRecommenadtions.OwnerRecommendation": {
      ownerName?: string | null;
      insurerName?: string | null;
      text?: string | null;
    };
    /** @description Рекомендация о ДНД полиса */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.EconomyRecommenadtions.StartDateRecommendation": {
      /** Format: date-time */
      currentStartDate?: string;
      /** Format: date-time */
      recommendedStartDate?: string;
      /** Format: date-time */
      suitableStartDateMin?: string;
      /** Format: date-time */
      suitableStartDateMax?: string;
      text?: string | null;
    };
    /** @description Информация об оплате долями. */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.FractionalPaymentInfo": {
      /**
       * Format: double
       * @description Стоимость с учетом комиссии.
       */
      price?: number;
      /**
       * Format: double
       * @description Комиссия.
       */
      commission?: number;
      /** @description Ссылка оплаты. */
      paymentUrl?: string | null;
      /** @description Информация о частичных платежах. */
      paymentParts?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.FractionalPaymentPart"][] | null;
    };
    /** @description Информация о частичном платеже. */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.FractionalPaymentPart": {
      /**
       * Format: double
       * @description Сумма частичного платежа.
       */
      paymentSum?: number;
      /**
       * Format: date-time
       * @description Дата частичного платежа.
       */
      paymentDate?: string;
    };
    /** @description Метки мобильного приложения */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.MobileMarkers": {
      /** @description мобильный ID чата */
      conversationId?: string | null;
      /** @description мобильный ID расчета */
      savedSearchId?: string | null;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoPerson": {
      /** @description Фамилия */
      lastName?: string | null;
      /** @description Отчество */
      middleName?: string | null;
      /** @description Имя */
      firstName?: string | null;
      /** @description полное имя */
      fullName?: string | null;
      passport?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.Passport"];
      /**
       * Format: date-time
       * @description Дата рождения
       */
      birthDate?: string;
      gender?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.Sex"];
      /** @description Телефон (моб.) */
      phone?: string | null;
      /** @description e-mail */
      email?: string | null;
      /** @description прокси e-mail */
      proxyEmail?: string | null;
      /** @description Адрес регистрации */
      registrationAddress?: string | null;
      /**
       * Format: int32
       * @description Id Регионального центра
       */
      regionalCenterId?: number | null;
      /**
       * Format: int32
       * @description Возраст
       */
      age?: number;
    };
    /** @description запрос на расчет осаго */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoQuery": {
      /**
       * Format: int32
       * @description id бренда ТС
       */
      brandId?: number;
      /**
       * Format: int32
       * @description год выпуска ТС
       */
      year?: number;
      /**
       * Format: int32
       * @description id модели ТС
       */
      modelId?: number;
      /** @description Модификация ТС */
      modification?: string | null;
      /**
       * Format: int32
       * @description мощность ТС
       */
      enginePower?: number;
      /** @description запись вида: 1.5 (123.00 л.с.) */
      engineSp?: string | null;
      /** @description канонический id региона регистрации */
      registrationRoute?: string | null;
      /** @description населенный пункт регистрации собственника */
      registration?: string | null;
      /** @description населенный пункт получения */
      getting?: string | null;
      /** @description канонический id региона покупки */
      gettingRoute?: string | null;
      /**
       * Format: int32
       * @description использование в течение года. сколько месяцев (10 и более = год)
       */
      usageMonthsPerYear?: number;
      /**
       * Format: date-time
       * @description Дата начала договора || расчета кбм
       */
      policyStartDate?: string;
      driversInfo?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.DriversInfo"];
      /** @description Номер автомобиля */
      carNumber?: string | null;
      /** @description VIN ТС */
      vin?: string | null;
      /** @description Номер кузова */
      bodyNumber?: string | null;
      /** @description Номер Шасси */
      chassisNumber?: string | null;
      /**
       * Format: uuid
       * @description уникальный id пользователя
       */
      xUserId?: string | null;
      /**
       * Format: int32
       * @description id пользователя в системе сравни.ру
       */
      userId?: number | null;
      owner?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoPerson"];
      insurer?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoPerson"];
      carDocument?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.CarDocumentInfo"];
      save?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.SaveQuery"];
      utm?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.UtmQuery"];
      partner?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PartnerQuery"];
      promotionQuery?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PromotionQuery"];
      mobileMarkers?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.MobileMarkers"];
      returnUrls?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ReturnUrls"];
      /** @description Id в системе Amplitude */
      amplitudeId?: string | null;
      /** @description Для кастомной прометки: например (Основной веб-сайт, новый сайт, мобилка и т.д.) */
      platform?: string | null;
      /** @description Считать ли дополнительно пакетное каско? */
      withCasco?: boolean;
      /** @description Пролонгация? */
      isProlongation?: boolean;
      /** @description Признак того, что квери получена из пролонгации. Делаем отдельно от IsProlongation, чтобы не было проблем при создании заказа */
      fromProlongation?: boolean;
      /**
       * Format: int32
       * @description Аккаунт под которым выполняется сохранение в СК
       */
      accountPriority?: number | null;
      previousPolicy?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PreviousPolicy"];
      /** @description Опциональный ключ пролонгации */
      prolongationKey?: string | null;
      /** @description Признак того что нужно идти по короткому пути заказа */
      isQuickSave?: boolean;
      /** @description Метка контекстной рекламы */
      clid?: string | null;
      vehicleCategory?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.VehicleCategory"];
      /**
       * Format: int32
       * @description Разрешенная максимальная масса
       */
      allowWeight?: number | null;
      /** @description Используется с прицепом */
      hasTrailer?: boolean;
      /** @description Признак акции яндекс здоровье */
      isHealthPromo?: boolean;
      /** @description Код промо по реферальной ссылке */
      benefitCode?: string | null;
    };
    /** @description Модель query заказа с ID компании */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoQueryViewModel": {
      result?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoQuery"];
      error?: string | null;
      hasError?: boolean;
      /**
       * Format: int32
       * @description id компании выдавшей ОСАГО
       */
      companyId?: number;
      /**
       * Format: date-time
       * @description Дата создания заказа
       */
      orderDate?: string;
      /**
       * Format: date-time
       * @description ДНД полиса ОСАГО
       */
      orderPolicyStartDate?: string;
      /** @description Ссылка на черновик полиса */
      policyDraftLink?: string | null;
      /** @description Признак b2b */
      isOffline?: boolean;
      hazyInfo?: string | null;
    };
    /** @description Партнерский блок */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PartnerQuery": {
      /** @description канал */
      medium?: string | null;
      /** @description источник */
      source?: string | null;
      /** @description компания */
      campaign?: string | null;
      /** @description Контент. */
      content?: string | null;
      /** @description Поисковый запрос. */
      term?: string | null;
      /** @description google id */
      uaClientId?: string | null;
      /** @description yandex id */
      ymClientId?: string | null;
      /**
       * Format: int32
       * @description Id агента пригласившего в реферальную программу пользователя продавшего заказ
       */
      referId?: number | null;
      /** @description Площадка продажи полиса */
      platform?: string | null;
      /** @description доп метка */
      subId?: string | null;
      /** @description Id агента в системе Альфа страхования */
      alfaUserId?: string | null;
      /** @description Id агента в системе Ренесанс страхования */
      renessansUserId?: string | null;
      /** @description доп метка роута для субагентов АК */
      subagentRoute?: string | null;
      /**
       * Format: int32
       * @description партнерские данные (Id аффилиата по hasoffers)
       */
      affId?: number | null;
      /**
       * Format: int32
       * @description партнерские данные( Id оффера из hasoffers )
       */
      offerId?: number | null;
      /** @description партнерские данные (Id/externalId виджета по админке партнерки) */
      affSub1?: string | null;
      /** @description партнерские данные (Id/externalId виджета по админке партнерки) */
      affSub2?: string | null;
      /** @description партнерские данные (Id/externalId виджета по админке партнерки) */
      affSub3?: string | null;
      /** @description партнерские данные (Id/externalId виджета по админке партнерки) */
      affSub4?: string | null;
      /** @description партнерские данные (Id/externalId виджета по админке партнерки) */
      affSub5?: string | null;
      /** @description партнерские данные (Id площадки) */
      sourceId?: string | null;
      /** @description партнерские данные (Id клика перехода на сравни.ру с паретнерской площадки) */
      transactionId?: string | null;
      /** @description Регион агента (по КЛАДР) */
      agentRegion?: string | null;
      /**
       * Format: date-time
       * @description Дата установки куки
       */
      setDate?: string | null;
    };
    /** @description данные паспорта */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.Passport": {
      /** @description серия паспорта */
      series?: string | null;
      /** @description номер паспорта */
      number?: string | null;
      /**
       * Format: date-time
       * @description Дата выдачи паспорта
       */
      issueDate?: string | null;
    };
    /** @description результат получения платежной ссылки */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PaymentUrlResult": {
      /** @description платежная ссылка */
      paymentUrl?: string | null;
      /**
       * Format: int32
       * @description результат операции 0-операция идет - пуль еще, 1-все хорошо - покажи успех, 2 и более какая-то ошибка - покажи ошибку
       */
      getResultType?: number;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PreviousDriverInfo": {
      /** @description Фамилия */
      lastName?: string | null;
      /** @description Отчество */
      middleName?: string | null;
      /** @description Имя */
      firstName?: string | null;
      /** @description полное имя */
      fullName?: string | null;
      license?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.DriverLicense"];
    };
    /** @description данные прошлого полиса */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PreviousPolicy": {
      /** @description Серия предыдущего полиса ОСАГО */
      series?: string | null;
      /** @description Номер предыдущего полиса ОСАГО */
      number?: string | null;
      /** @description компания, выдавшая полис */
      company?: string | null;
      /**
       * Format: int32
       * @description id Ск
       */
      companyId?: number;
      /**
       * Format: date-time
       * @description Дата окончания полиса
       */
      policyEndDate?: string | null;
      /** @description Vin по полису */
      vin?: string | null;
      /** @description Номер ТС по полису */
      carNumber?: string | null;
      /** @description Номер Кузова по полису */
      bodyNumber?: string | null;
      /** @description город собственика по полису */
      location?: string | null;
      /**
       * Format: double
       * @description Цена полиса
       */
      price?: number | null;
      /**
       * Format: date-time
       * @description Д/Р страхователя
       */
      insurantBirthDate?: string | null;
      /** @description ФИО страхователя */
      insurantName?: string | null;
      /**
       * Format: double
       * @description Кбм
       */
      kbm?: number | null;
      /**
       * Format: date-time
       * @description Д/Р собственика
       */
      ownerBirthDate?: string | null;
      /** @description ФИО собственика */
      ownerName?: string | null;
      /** @description Полис приобретен через платформу "Сравни.ру" */
      isPurchasedViaSravni?: boolean;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ProlongationDriverModel": {
      fullName?: string | null;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ProlongationOrderModel": {
      maskedPhone?: string | null;
      userName?: string | null;
      brandName?: string | null;
      modelName?: string | null;
      orderHash?: string | null;
      companyName?: string | null;
      previousPolicyNumber?: string | null;
      /** Format: date-time */
      policyEndDate?: string;
      /** Format: int32 */
      vehicleYear?: number;
      /** Format: int32 */
      driversCount?: number;
      drivers?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ProlongationDriverModel"][] | null;
    };
    /** @description Promotion метки */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PromotionQuery": {
      /** @description источник */
      source?: string | null;
      /** @description компания */
      campaign?: string | null;
      category?: string | null;
      sub1?: string | null;
      sub2?: string | null;
    };
    /** @description Ссылки для возврата */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ReturnUrls": {
      /** @description страница успеха */
      succesUrl?: string | null;
      /** @description страница не успеха */
      failureUrl?: string | null;
    };
    /** @description Команда на сохранение */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.SaveQuery": {
      /**
       * Format: int32
       * @description Id продукта
       */
      productId?: number;
      /** @description Id расчета в базе данных */
      searchId?: string | null;
      /** @description заказ с проброса */
      isRoute?: boolean;
      /**
       * Format: int32
       * @description с какой компании был проброс
       */
      originalCompanyId?: number | null;
    };
    /** @description Запрос на отправку ссылки на расчет по электронной почте */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.SendCalcLinkRequest": {
      /**
       * Format: int64
       * @description Полный запрос на расчет ОСАГО
       */
      calculationId?: number;
      query?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoQuery"];
      /** @description Электронная почта, на которую следует отправить письмо со ссылкой */
      email?: string | null;
      /**
       * Format: int32
       * @description Номер шага, с которого выполняется отправка ссылки в письме
       */
      step?: number;
    };
    /** @description Запрос на отправку ссылки на расчет по смс */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.SendCalcLinkViaSmsRequest": {
      query?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoQuery"];
      /** @description Номер телефона, на который следует отправить СМС со ссылкой */
      phoneNumber?: string | null;
    };
    /**
     * @description пол
     * @enum {string}
     */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.Sex": "unknown" | "male" | "female";
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.CreateShortProlongationResponse": {
      /**
       * Format: int32
       * @description TaskId
       */
      taskId?: number;
      /** @description TaskHash */
      taskHash?: string | null;
      /**
       * Format: date-time
       * @description Дата созания заказа
       */
      date?: string;
      /** @description Сохранился с ошибкой? */
      isSaveWithError?: boolean;
      /**
       * Format: int32
       * @description Id компании
       */
      companyId?: number;
      /** @description Ошибка */
      error?: string | null;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationCompanyInfo": {
      /** Format: int32 */
      companyId?: number;
      companyName?: string | null;
      availableFields?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationField"][] | null;
    };
    /** @enum {string} */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationField": "fio" | "birthDate" | "passport" | "previousPolicy" | "carIdentifier";
    /** @description роль Собственник или Страхователь ТС */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationPerson": {
      lastName?: string | null;
      middleName?: string | null;
      firstName?: string | null;
      fullName?: string | null;
      passport?: components["schemas"]["Sravni.Osago.Passport"];
      /**
       * Format: date-time
       * @description Дата рождения
       */
      birthDate?: string;
      /** @description Телефон (моб.) */
      phone?: string | null;
      /** @description e-mail */
      email?: string | null;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationPolicyInfo": {
      company?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationCompanyInfo"];
      /** @description Бренд авто */
      brand?: string | null;
      /** @description Модель авто */
      model?: string | null;
      /** @description Номер полиса */
      policyNumber?: string | null;
      /** @description ГРЗ */
      carNumber?: string | null;
      /**
       * Format: date-time
       * @description Дата окончания полиса
       */
      policyEndDate?: string | null;
      /**
       * Format: int32
       * @description Количество водителей
       */
      driversAmount?: number;
      /**
       * Format: double
       * @description Цена
       */
      price?: number;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationPolicyInfoRequest": {
      carNumber?: string | null;
      policyNumber?: string | null;
      utm?: components["schemas"]["Sravni.OsagoGateway.Service.Models.Utm"];
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationQuery": {
      insurer?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationPerson"];
      /**
       * Format: int32
       * @description Id страховой
       */
      companyId?: number;
      /** @description Для кастомной прометки: например (Основной веб-сайт, новый сайт, мобилка и т.д.) */
      platform?: string | null;
      utm?: components["schemas"]["Sravni.Osago.UtmQuery"];
      partner?: components["schemas"]["Sravni.Osago.PartnerQuery"];
      promotionQuery?: components["schemas"]["Sravni.Osago.PromotionQuery"];
      mobileMarkers?: components["schemas"]["Sravni.Osago.MobileMarkers"];
      /** @description Метка контекстной рекламы */
      clid?: string | null;
      /**
       * Format: int32
       * @description Id пользователя в системе сравни.ру
       */
      userId?: number | null;
      /** @description ГРЗ */
      carNumber?: string | null;
      /** @description Номер полиса */
      policyNumber?: string | null;
    };
    /** @enum {string} */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationStatus": "none" | "running" | "success" | "timeout" | "error" | "correctableError";
    /** @description Utm метки */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.UtmQuery": {
      /** @description канал */
      medium?: string | null;
      /** @description источник */
      source?: string | null;
      /** @description компания */
      campaign?: string | null;
      /** @description Контент. */
      content?: string | null;
      /** @description Поисковый запрос. */
      term?: string | null;
      /** @description google id */
      uaClientId?: string | null;
      /** @description yandex id */
      ymClientId?: string | null;
      /**
       * Format: date-time
       * @description Дата установки куки
       */
      setDate?: string | null;
    };
    /**
     * @description Категория ВУ
     * @enum {string}
     */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.VehicleCategory": "b" | "c" | "a" | "d" | "e";
    "Sravni.OsagoGateway.Service.ExternalDependencies.OsagoPromo.Models.BonusInfo": {
      bonusValue?: string | null;
      bonusUnit?: string | null;
      bonusDescription?: string | null;
      servicePlace?: string | null;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.OsagoPromo.Models.ExternalPromoData": {
      title?: string | null;
      description?: string[] | null;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.OsagoPromo.Models.PartnerAbout": {
      name?: string | null;
      description?: string | null;
      logoMinUrl?: string | null;
      /** @description Рекламное название */
      advertisingName?: string | null;
      /** @description Рекламный токен */
      advertisingToken?: string | null;
    };
    /** @description Промакция */
    "Sravni.OsagoGateway.Service.ExternalDependencies.OsagoPromo.Models.PromoProgramDto": {
      /**
       * Format: int32
       * @description CampaignId
       */
      campaignId?: number;
      /** @description Код */
      code?: string | null;
      /** @description Заголовок */
      title?: string | null;
      /** @description Короткая информация о промо */
      shortPromoInfo?: string | null;
      /** @description Описание */
      description?: string | null;
      /** @description Пояснение */
      subDescription?: string | null;
      /** @description Ссылка на лого акции */
      logoUrl?: string | null;
      /** @description Ссылка на лого для короткой карточки */
      logoBigUrl?: string | null;
      /** @description Ссылка на правила акции */
      ruleUrl?: string | null;
      /** @description Ссылка на внешние акции */
      externalRuleUrl?: string | null;
      bonusInfo?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.OsagoPromo.Models.BonusInfo"];
      about?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.OsagoPromo.Models.PartnerAbout"];
      /** @description Признак того что акция общая и действует на все предложения */
      isGeneral?: boolean;
      /**
       * Format: date-time
       * @description Дата окончания предложения
       */
      expirationDate?: string | null;
      /** @description Дата окончания предложения */
      data?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.OsagoPromo.Models.ExternalPromoData"][] | null;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.PaymentGateway.Models.Item": {
      productType?: string | null;
      /** Format: int32 */
      price?: number;
      orderId?: string | null;
      description?: string | null;
      vendor?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.PaymentGateway.Models.Vendor"];
      meta?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.PaymentGateway.Models.Meta"];
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.PaymentGateway.Models.Meta": {
      policyNumber?: string | null;
      insurer?: string | null;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.PaymentGateway.Models.Vendor": {
      inn?: string | null;
      name?: string | null;
      /** Format: int32 */
      companyId?: number | null;
      phones?: string[] | null;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataPolicyInfo": {
      carNumber?: string | null;
      vin?: string | null;
      body?: string | null;
      chassis?: string | null;
      mark?: string | null;
      model?: string | null;
      category?: string | null;
      /** Format: int32 */
      enginePower?: number | null;
      owner?: string | null;
      insurer?: string | null;
      purpose?: string | null;
      /** Format: double */
      kbm?: number;
      /** Format: double */
      cost?: number;
      region?: string | null;
      company?: string | null;
      policyId?: string | null;
      /** Format: date-time */
      dateCreate?: string;
      /** Format: date-time */
      dateActionStart?: string;
      /** Format: date-time */
      dateActionEnd?: string;
      /** Format: date-time */
      ownerBirthday?: string | null;
      /** Format: date-time */
      insurerBirthday?: string | null;
      policySerial?: string | null;
      policyNumber?: string | null;
      /** Format: int32 */
      driversCount?: number;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataResponseResult`1[[Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataPolicyInfo, Sravni.OsagoGateway.Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      result?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataPolicyInfo"];
      /** Format: int32 */
      status?: number;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataResponseResult`1[[System.Collections.Generic.List`1[[Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataPolicyInfo, Sravni.OsagoGateway.Service, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
      result?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Pdata.PdataPolicyInfo"][] | null;
      /** Format: int32 */
      status?: number;
    };
    /** @description Информация о рейтингах страховой компании. */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Rating.Models.InsuranceCompanyRating": {
      /**
       * Format: int32
       * @description Идентификатор страховой компании
       */
      insuranceCompanyId?: number;
      /**
       * Format: double
       * @description Размер сборов средств
       */
      feesAmount?: number;
      /**
       * Format: int32
       * @description Место в рейтинге по сборам средств
       */
      feesRatingPosition?: number | null;
      /**
       * Format: double
       * @description Рейтинг по сбору средств
       */
      feesRating?: number | null;
      /**
       * Format: double
       * @description Размер суммы выплат
       */
      paymentAmount?: number;
      /**
       * Format: int32
       * @description Место в рейтинге по сумме выплат
       */
      paymentRatingPosition?: number | null;
      /**
       * Format: double
       * @description Рейтинг по сборам средств
       */
      paymentRating?: number | null;
      /**
       * Format: double
       * @description Размер средней суммы выплат
       */
      averagePaymentAmount?: number;
      /**
       * Format: int32
       * @description Место в рейтинге по средней сумме выплат
       */
      averagePaymentAmountRatingPosition?: number | null;
      /**
       * Format: double
       * @description Рейтинг по размеру средних выплат
       */
      averagePaymentRating?: number | null;
      /**
       * Format: double
       * @description Доля отказов в выплатах в процентах
       */
      deniedPaymentPart?: number;
      /**
       * Format: int32
       * @description Место в рейтинге по доле отказа в выплатах
       */
      deniedPaymentRatingPosition?: number | null;
      /**
       * Format: double
       * @description Рейтинг по доле отказов в выплатах
       */
      deniedPaymentRating?: number | null;
      /** @description Тип страхового продукта */
      insuranceProductType?: string | null;
      /**
       * Format: date-time
       * @description Дата
       */
      date?: string;
      /**
       * Format: double
       * @description Годовой прирост вознаграждения
       */
      feesYearIncrease?: number | null;
      /**
       * Format: double
       * @description Изменение рейтинга по суммам выплат
       */
      feesRatingIncrease?: number | null;
      reviewRating?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Rating.Models.ReviewRating"];
      /** Format: double */
      solvencyYearIncrease?: number | null;
      /** Format: double */
      solvencyRatingIncrease?: number | null;
      /**
       * Format: double
       * @description Клиентский рейтинг
       */
      clientRating?: number | null;
      /**
       * Format: int32
       * @description Место в клиентском рейтинге
       */
      clientRatingPosition?: number | null;
      /**
       * Format: double
       * @description количество жалоб на 10 000 полисов(пока только для осаго)
       */
      complaintsPart?: number | null;
      /**
       * Format: double
       * @description место в рейтинге количеству жалоб на 10 000 полисов(пока только для осаго)
       */
      complaintsPartPosition?: number | null;
      /**
       * Format: double
       * @description Рейтинг Сравни.ру
       */
      sravniRuRating?: number;
    };
    /** @description Рейтиги страховых компаний */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Rating.Models.InsuranceCompanyRatingResult": {
      /**
       * Format: date-time
       * @description Дата последнего обновления рейтингов
       */
      lastKnownDate?: string | null;
      /**
       * Format: date-time
       * @description Дата самых ранних рейтингов
       */
      earliestKnownDate?: string | null;
      /** @description Список результатов */
      results?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Rating.Models.InsuranceCompanyRating"][] | null;
    };
    /** @description Модель клиентского (по отзывам) рейтинга. */
    "Sravni.OsagoGateway.Service.ExternalDependencies.Rating.Models.ReviewRating": {
      /**
       * Format: int32
       * @description Идентификатор страховой компании
       */
      insuranceCompanyId?: number;
      /**
       * Format: double
       * @description Клиентский рейтинг.
       */
      clientRating?: number;
      /**
       * Format: int32
       * @description Место в рейтинге по клиентскому рейтингу.
       */
      clientRatingPosition?: number | null;
      /**
       * Format: double
       * @description Средняя оценка страховой компании.
       */
      averageScore?: number;
      /**
       * Format: int32
       * @description Общее количетсво отзывов о страховой компании.
       */
      reviewsCount?: number;
      /**
       * Format: int32
       * @description Количество зачтенных отзывов.
       */
      validReviewsCount?: number;
      /**
       * Format: int32
       * @description Количество решенных проблем клиентов.
       */
      resolvedProblemsCount?: number;
      /**
       * Format: int32
       * @description Количество ответов страховой компании.
       */
      insuranceCompanyAnswersCount?: number;
      /** @description Тип страхового продукта */
      insuranceProductType?: string | null;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.Recommendations.MarketingBannerModel": {
      imageUrl?: string | null;
      description?: string[] | null;
      /** Format: int32 */
      durationInSeconds?: number;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.Review.Models.ReviewListShortItemModel": {
      /**
       * Format: int32
       * @description id локации
       */
      locationId?: number | null;
      /** @description id Организации */
      reviewObjectId?: string | null;
      /** @description автор */
      authorName?: string | null;
      /**
       * Format: int32
       * @description id отзыва
       */
      id?: number;
      /** @description заголовок */
      title?: string | null;
      /** @description текст */
      text?: string | null;
      /**
       * Format: int32
       * @description оценка
       */
      rating?: number | null;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.Review.Models.ReviewsShortResult": {
      /** @description часть списка */
      items?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Review.Models.ReviewListShortItemModel"][] | null;
      /**
       * Format: int32
       * @description общее количество записей
       */
      total?: number;
      /**
       * Format: double
       * @description средний рейтинг
       */
      averageRating?: number | null;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.User.LastDriverInfo": {
      fio?: string | null;
      /** Format: double */
      kbm?: number | null;
    };
    /** @description Данные о заказе пользователя */
    "Sravni.OsagoGateway.Service.ExternalDependencies.User.LastUserOrderInfo": {
      hash?: string | null;
      /**
       * Format: int32
       * @description Id компании
       */
      companyId?: number;
      /** @description Название компании */
      companyName?: string | null;
      /** @description url на полис */
      policyLink?: string | null;
      /** @description Бренд */
      brandName?: string | null;
      /** @description Name of model */
      modelName?: string | null;
      /**
       * Format: date-time
       * @description End date of policy
       */
      policyEndDate?: string;
      /** @description Признак пролонгации */
      isProlongation?: boolean;
      /** @description Рег знак */
      regNumber?: string | null;
      /** @description ВИН */
      vin?: string | null;
      vehicleCategory?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.VehicleCategory"];
      /** @description Drivers list */
      drivers?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.User.LastDriverInfo"][] | null;
    };
    /** @description Данные о расчете пользователя */
    "Sravni.OsagoGateway.Service.ExternalDependencies.User.LastUserSearchInfo": {
      /** @description Хэш расчета */
      hash?: string | null;
      /** @description Бренд */
      brandName?: string | null;
      /** @description Модель */
      modelName?: string | null;
      /**
       * Format: date-time
       * @description date of search
       */
      searchDate?: string;
      /**
       * Format: double
       * @description Минимальная цена предложения
       */
      minPrice?: number | null;
      /** @description Рег знак */
      regNumber?: string | null;
      /** @description ВИН */
      vin?: string | null;
      vehicleCategory?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.VehicleCategory"];
      /** @description Drivers list */
      drivers?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.User.LastDriverInfo"][] | null;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.EnrichedProductProperty": {
      id?: string | null;
      name?: string | null;
      description?: string | null;
      /** Format: int32 */
      number?: number;
      icon?: string | null;
      file?: string | null;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.LimitProperty": {
      title?: string | null;
      /** Format: double */
      limit?: number;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.ProductInfo": {
      id?: string | null;
      name?: string | null;
      description?: string | null;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.ProductProperty": {
      id?: string | null;
      name?: string | null;
      description?: string | null;
      /** Format: int32 */
      number?: number;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XCalculationRequest": {
      orderHash?: string | null;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XCalculationResult": {
      hash?: string | null;
      products?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.ProductInfo"][] | null;
      propositions?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XProposition"][] | null;
      status?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XCalculationStatus"];
    };
    /** @enum {string} */
    "Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XCalculationStatus": "none" | "noProducts" | "created" | "running" | "finished";
    "Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XFullProductInfo": {
      id?: string | null;
      name?: string | null;
      description?: string | null;
      properties?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.EnrichedProductProperty"][] | null;
      recommendation?: string | null;
      risks?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.EnrichedProductProperty"][] | null;
      actions?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.ProductProperty"][] | null;
      restrictions?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.EnrichedProductProperty"][] | null;
      documents?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.EnrichedProductProperty"][] | null;
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XOrderQuery": {
      propositionHash?: string | null;
      utm?: components["schemas"]["Sravni.XGateway.Shared.Dto.Osago.UtmQuery"];
    };
    "Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XOrderResult": {
      hash?: string | null;
      status?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XOrderStatus"];
      paymentUrl?: string | null;
      message?: string | null;
    };
    /** @enum {string} */
    "Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XOrderStatus": "none" | "error" | "created" | "running" | "finished";
    "Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XProposition": {
      hash?: string | null;
      /** Format: double */
      price?: number;
      limits?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.LimitProperty"][] | null;
      /** Format: date-time */
      startDate?: string;
      product?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XFullProductInfo"];
      /** Format: int32 */
      companyId?: number;
      companyName?: string | null;
      icon?: string | null;
      type?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XType"];
      insuranceEntity?: string | null;
    };
    /** @enum {string} */
    "Sravni.OsagoGateway.Service.ExternalDependencies.XGateway.Models.XType": "crossKasko" | "propertyInsurance" | "xNotInsurance";
    /** @description Метки */
    "Sravni.OsagoGateway.Service.Models.Utm": {
      campaign?: string | null;
      medium?: string | null;
      source?: string | null;
    };
    /** @description модель для передачи на ThankYouPage */
    "Sravni.OsagoGateway.Service.Orders.Models.ExtendedOrdersInfoResult": {
      company?: components["schemas"]["Sravni.OsagoGateway.Service.Companies.Models.Company"];
      /** @description Номер полиса ОСАГО */
      contractNumber?: string | null;
      /** @description Email пользователя */
      email?: string | null;
      /** @description Имя пользователя */
      name?: string | null;
      /**
       * Format: double
       * @description Цена
       */
      price?: number;
      /** @description ссылка на pdf полиса */
      policyBlankLink?: string | null;
      /** @description ссылка на zip архиф с документами полиса(чек, заявление, прочее) */
      policyDocumentsLink?: string | null;
      /**
       * Format: int32
       * @description продукта осаго Id
       */
      osagoId?: number;
      /**
       * Format: int32
       * @description UserId
       */
      userId?: number | null;
      /** @description Бенефиты */
      benefits?: components["schemas"]["Sravni.Osago.Shared.Dto.ExtendedPromoInfo"][] | null;
      cashBackSuccess?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.AlertModel"][] | null;
    };
    /** @description Результат исполнения операции Inflight */
    "Sravni.OsagoGateway.Service.Orders.Models.InflightResult": {
      /** @description Успех выполнения */
      isSuccess?: boolean;
      /** @description Ошубки, в слуае неуспеха */
      errors?: string[] | null;
    };
    /** @description Запрос на осуществление Inflight модификации заказа */
    "Sravni.OsagoGateway.Service.Orders.Models.InflightUpdateRequest": {
      /** @description Изменяемый Email заказа */
      email?: string | null;
      /** @description Изменяемый телефон заказа */
      phone?: string | null;
    };
    "Sravni.OsagoGateway.Service.Orders.Models.OrderInfo": {
      paymentUrl?: string | null;
      orderStatus?: components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.OrderStatus"];
      policyStartDate?: string | null;
      newPolicyStartDate?: string | null;
      /** Format: int32 */
      osagoId?: number;
      calcHash?: string | null;
      orderHash?: string | null;
      isProlongation?: boolean;
      finallyPrice?: string | null;
      orderDate?: string | null;
      company?: components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.OrderInfo.ShortCompanyInfo"];
      alert?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.AlertModel"];
      alerts?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.AlertModel"][] | null;
      tags?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.Tag"][] | null;
      upperTags?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.UpperTag"][] | null;
      startDateText?: string | null;
      /** Format: double */
      searchPrice?: number;
      isPriceChangedBad?: boolean;
      isPriceChanged?: boolean;
      /** Format: double */
      price?: number;
      fractionalPaymentInfo?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.FractionalPaymentInfo"];
      startDate?: string | null;
      upsaleResults?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.UpsaleDto"][] | null;
      draftFullUrl?: string | null;
      offer?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.Offer"];
    };
    "Sravni.OsagoGateway.Service.Orders.Models.OrderInfo.ShortCompanyInfo": {
      /** Format: int32 */
      id?: number;
      name?: string | null;
    };
    "Sravni.OsagoGateway.Service.Orders.Models.OrderResult": {
      /**
       * Format: int32
       * @description Ид компании
       */
      companyId?: number;
      /**
       * Format: double
       * @description Цена страховки
       */
      price?: number;
      fractionalPaymentInfo?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.FractionalPaymentInfo"];
      /**
       * Format: double
       * @description Цена расчета
       */
      searchPrice?: number | null;
      /** @description url на оплату или фрейм */
      url?: string | null;
      /** @description Список кодов промоакций, применимых для предложения */
      promoList?: string[] | null;
      /** @description Апсейлы к заказу */
      upsaleResults?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.UpsaleDto"][] | null;
    };
    /**
     * @description результат общей операции сохранения и проверки
     * @enum {string}
     */
    "Sravni.OsagoGateway.Service.Orders.Models.OrderStatus": "failed" | "loading" | "dateChanged" | "success";
    "Sravni.OsagoGateway.Service.Orders.Models.OrderWithTrySaveResult": {
      /** @description Заказ завершен */
      isCompleted?: boolean;
      /** @description Признак  завершения расчета */
      saveResultCompleted?: boolean;
      orderResult?: components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.OrderResult"];
      /** @description результат проброса */
      trySaveResults?: components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.TrySaveResult"][] | null;
      kbmInfo?: components["schemas"]["Sravni.OsagoGateway.Service.Calculations.Models.KbmInfo"];
      /** @description Коэффициенты */
      osagoCoefficients?: components["schemas"]["Sravni.OsagoGateway.Service.OsagoCoefficients.Models.OsagoCoefficient"][] | null;
      /** @description Признак агента */
      isOffline?: boolean;
    };
    "Sravni.OsagoGateway.Service.Orders.Models.ProlongationOfferResponse": {
      maskedPhone?: string | null;
      userName?: string | null;
      brandName?: string | null;
      modelName?: string | null;
      carNumber?: string | null;
      orderHash?: string | null;
      /** Format: int32 */
      companyId?: number;
      companyName?: string | null;
      /** Format: double */
      price?: number;
      previousPolicyNumber?: string | null;
      /** Format: int32 */
      vehicleYear?: number | null;
      /** Format: date-time */
      policyEndDate?: string;
      drivers?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ProlongationDriverModel"][] | null;
      /** Format: int32 */
      driversAmount?: number;
      type?: components["schemas"]["Sravni.OsagoGateway.Service.Orders.Models.ProlongationOfferType"];
      description?: string | null;
      availableFields?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationField"][] | null;
    };
    /** @enum {string} */
    "Sravni.OsagoGateway.Service.Orders.Models.ProlongationOfferType": "sravniProlongation" | "shortProlongation" | "lastSearch" | "newShortProlongation";
    "Sravni.OsagoGateway.Service.Orders.Models.ProlongationRequestModel": {
      carNumber?: string | null;
      phone?: string | null;
      utm?: components["schemas"]["Sravni.OsagoGateway.Service.Models.Utm"];
    };
    "Sravni.OsagoGateway.Service.Orders.Models.ProlongationResultModel": {
      modelName?: string | null;
      brandName?: string | null;
      carNumber?: string | null;
      companyName?: string | null;
      previousPolicyNumber?: string | null;
      /** Format: date-time */
      policyEndDate?: string;
      /** Format: int32 */
      driversCount?: number;
      orderHash?: string | null;
    };
    "Sravni.OsagoGateway.Service.Orders.Models.StartManyOrdersResult": {
      hash?: string | null;
      draftUrl?: string | null;
      draftFullUrl?: string | null;
    };
    "Sravni.OsagoGateway.Service.Orders.Models.StartOrderRequest": {
      /** @description Реферальный промо-код */
      benefitCode?: string | null;
      /**
       * Format: int32
       * @description id бренда ТС
       */
      brandId?: number;
      /**
       * Format: int32
       * @description год выпуска ТС
       */
      year?: number;
      /**
       * Format: int32
       * @description id модели ТС
       */
      modelId?: number;
      /** @description Модификация */
      modification?: string | null;
      /** @description Резидент РФ? */
      isResident?: boolean;
      /** @description канонический id региона регистрации */
      registrationRoute?: string | null;
      /** @description населенный пункт регистрации (необязательно) */
      registration?: string | null;
      /** @description канонический id региона покупки */
      gettingRoute?: string | null;
      /** @description населенный пункт получения (необязательно) */
      getting?: string | null;
      /**
       * Format: int32
       * @description мощность ТС
       */
      enginePower?: number;
      /**
       * Format: int32
       * @description использование в течение года. сколько месяцев (10 и более = год)
       */
      usageMonthsPerYear?: number;
      /** @description Дата начала договора || расчета кбм */
      policyStartDate?: string | null;
      driversInfo?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.DriversInfo"];
      /** @description VIN ТС */
      vin?: string | null;
      /** @description Номер кузова */
      bodyNumber?: string | null;
      /** @description Номер Шасси */
      chassisNumber?: string | null;
      /**
       * Format: int32
       * @description id пользователя в системе сравни.ру
       */
      userId?: number | null;
      owner?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoPerson"];
      insurer?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoPerson"];
      /** @description Номер автомобиля */
      carNumber?: string | null;
      carDocument?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.CarDocumentInfo"];
      save?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.SaveQuery"];
      utm?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.UtmQuery"];
      partner?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PartnerQuery"];
      promotionQuery?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PromotionQuery"];
      /** @description Для кастомной прометки: например (Основной веб-сайт, новый сайт, мобилка и т.д.) */
      platform?: string | null;
      /** @description Пролонгация? */
      isProlongation?: boolean;
      /**
       * Format: int32
       * @description Аккаунт под которым выполняется сохранение в СК
       */
      accountPriority?: number | null;
      /** @description Метка контекстной рекламы */
      clid?: string | null;
      /** @description Опциональный ключ пролонгации */
      prolongationKey?: string | null;
      vehicleCategory?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.VehicleCategory"];
      /** @description признак, что не надо отправлять смс со ссылкой на оплату */
      skipSms?: boolean;
    };
    "Sravni.OsagoGateway.Service.Orders.Models.StartOrderResult": {
      hash?: string | null;
    };
    "Sravni.OsagoGateway.Service.Orders.Models.TrySaveResult": {
      /**
       * Format: int32
       * @description Ид Продукта ОСАГО
       */
      osagoId?: number;
      /**
       * Format: int32
       * @description Ид компании
       */
      companyId?: number;
      /**
       * Format: double
       * @description Цена страховки
       */
      price?: number;
      isProlongation?: boolean;
      /** @description Список кодов промоакций, применимых для предложения */
      promoList?: string[] | null;
      tb?: components["schemas"]["Sravni.OsagoGateway.Service.OsagoCoefficients.Models.OsagoCoefficient"];
      /** @description Апсейлы к заказу */
      upsaleResults?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.UpsaleDto"][] | null;
    };
    "Sravni.OsagoGateway.Service.OsagoCoefficients.Models.CoefficientResponse": {
      /** Format: double */
      value?: number;
      errorMessage?: string | null;
    };
    "Sravni.OsagoGateway.Service.OsagoCoefficients.Models.DriverRequestWithMarkersModel": {
      driver?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.DriverInfo"];
      marker?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.Marker"];
    };
    /** @description Коэффициенты для расчета ОСАГО от СК */
    "Sravni.OsagoGateway.Service.OsagoCoefficients.Models.OsagoCoefficient": {
      /** @description Название коэффициента (КТ) */
      name?: string | null;
      /** @description Описание коэффициента (территориальный коэфф) */
      description?: string | null;
      /**
       * Format: double
       * @description Значение
       */
      value?: number;
      /** @description Пояснения по коэффициенту (Санкт-петербург) */
      details?: string[] | null;
    };
    "Sravni.OsagoGateway.Service.Profile.Models.LinkResult": {
      id?: string | null;
      hash?: string | null;
      url?: string | null;
    };
    "Sravni.OsagoGateway.Service.PromoPrograms.Models.PromoInclusions": {
      title?: string | null;
      comment?: string | null;
    };
    "Sravni.OsagoGateway.Service.PromoPrograms.Models.PromoProgram": {
      /** @description Идентификатор программы */
      code?: string | null;
      /** @description Название программы (FitService) */
      name?: string | null;
      /** @description Заголовок (2000 рублей на ремонт авто) */
      title?: string | null;
      /** @description Короткий Заголовок (2000 рублей) */
      shortTitle?: string | null;
      /** @description Описание (Действителен 90 дней после покупки) */
      description?: string | null;
      /** @description Пояснение */
      subDescription?: string | null;
      /** @description Короткое описание (в сети FitService) */
      shortDescription?: string | null;
      /** @description Ссылка на картинку */
      logoLink?: string | null;
      /** @description Ссылка на картинку для короткой карточки */
      logoBigLink?: string | null;
      /** @description Ссылка на правила акции */
      ruleLink?: string | null;
      /** @description Рекламное название */
      advertisingName?: string | null;
      /** @description Рекламный токен */
      advertisingToken?: string | null;
      /** @description Включено */
      inclusions?: components["schemas"]["Sravni.OsagoGateway.Service.PromoPrograms.Models.PromoInclusions"][] | null;
      /** @description Ограничения */
      restrictions?: components["schemas"]["Sravni.OsagoGateway.Service.PromoPrograms.Models.PromoInclusions"][] | null;
    };
    "Sravni.OsagoGateway.Service.Queries.Models.EnrichedOsagoPerson": {
      /** @description Фамилия */
      lastName?: string | null;
      /** @description Отчество */
      middleName?: string | null;
      /** @description Имя */
      firstName?: string | null;
      /** @description полное имя */
      fullName?: string | null;
      passport?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.Passport"];
      /**
       * Format: date-time
       * @description Дата рождения
       */
      birthDate?: string;
      gender?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.Sex"];
      /** @description Телефон (моб.) */
      phone?: string | null;
      /** @description e-mail */
      email?: string | null;
      /** @description прокси e-mail */
      proxyEmail?: string | null;
      address?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Models.PersonAddress"];
      /**
       * Format: int32
       * @description Id Регионального центра
       */
      regionalCenterId?: number | null;
      /**
       * Format: int32
       * @description Возраст
       */
      age?: number;
    };
    "Sravni.OsagoGateway.Service.Queries.Models.EnrichedOsagoQuery": {
      /**
       * Format: int32
       * @description id бренда ТС
       */
      brandId?: number;
      /**
       * Format: int32
       * @description год выпуска ТС
       */
      year?: number;
      /**
       * Format: int32
       * @description id модели ТС
       */
      modelId?: number;
      /** @description Модификация ТС */
      modification?: string | null;
      /**
       * Format: int32
       * @description мощность ТС
       */
      enginePower?: number;
      /** @description запись вида: 1.5 (123.00 л.с.) */
      engineSp?: string | null;
      /** @description канонический id региона регистрации */
      registrationRoute?: string | null;
      /** @description населенный пункт регистрации собственника */
      registration?: string | null;
      /** @description населенный пункт получения */
      getting?: string | null;
      /** @description канонический id региона покупки */
      gettingRoute?: string | null;
      /**
       * Format: int32
       * @description использование в течение года. сколько месяцев (10 и более = год)
       */
      usageMonthsPerYear?: number;
      /**
       * Format: date-time
       * @description Дата начала договора || расчета кбм
       */
      policyStartDate?: string;
      driversInfo?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.DriversInfo"];
      /** @description Номер автомобиля */
      carNumber?: string | null;
      /** @description VIN ТС */
      vin?: string | null;
      /** @description Номер кузова */
      bodyNumber?: string | null;
      /** @description Номер Шасси */
      chassisNumber?: string | null;
      /**
       * Format: uuid
       * @description уникальный id пользователя
       */
      xUserId?: string | null;
      /**
       * Format: int32
       * @description id пользователя в системе сравни.ру
       */
      userId?: number | null;
      /**
       * Format: int32
       * @description Id Страховой компании
       */
      companyId?: number | null;
      owner?: components["schemas"]["Sravni.OsagoGateway.Service.Queries.Models.EnrichedOsagoPerson"];
      insurer?: components["schemas"]["Sravni.OsagoGateway.Service.Queries.Models.EnrichedOsagoPerson"];
      carDocument?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.CarDocumentInfo"];
      save?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.SaveQuery"];
      utm?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.UtmQuery"];
      partner?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PartnerQuery"];
      promotionQuery?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PromotionQuery"];
      mobileMarkers?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.MobileMarkers"];
      returnUrls?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ReturnUrls"];
      /** @description Id в системе Amplitude */
      amplitudeId?: string | null;
      /** @description Для кастомной прометки: например (Основной веб-сайт, новый сайт, мобилка и т.д.) */
      platform?: string | null;
      /** @description Считать ли дополнительно пакетное каско? */
      withCasco?: boolean;
      /** @description Пролонгация? */
      isProlongation?: boolean;
      /** @description Признак того, что квери получена из пролонгации. Делаем отдельно от IsProlongation, чтобы не было проблем при создании заказа */
      fromProlongation?: boolean;
      /**
       * Format: int32
       * @description Аккаунт под которым выполняется сохранение в СК
       */
      accountPriority?: number | null;
      previousPolicy?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PreviousPolicy"];
      /** @description Опциональный ключ пролонгации */
      prolongationKey?: string | null;
      /** @description Признак того что нужно идти по короткому пути заказа */
      isQuickSave?: boolean;
      /** @description Метка контекстной рекламы */
      clid?: string | null;
      vehicleCategory?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.VehicleCategory"];
      /**
       * Format: int32
       * @description Разрешенная максимальная масса
       */
      allowWeight?: number | null;
      /** @description Используется с прицепом */
      hasTrailer?: boolean;
      /** @description Признак акции яндекс здоровье */
      isHealthPromo?: boolean;
      /** @description Код промо по реферальной ссылке */
      benefitCode?: string | null;
    };
    "Sravni.OsagoGateway.Service.ShortProlongation.Models.ShortProlongationPollingResult": {
      /** @description Hash */
      hash?: string | null;
      /**
       * Format: double
       * @description Цена
       */
      price?: number;
      /** @description Ошибка */
      error?: string | null;
      /**
       * Format: date-time
       * @description ДНД
       */
      policyStartDate?: string;
      /** @description Ссылка на оплату */
      paymentUrl?: string | null;
      /** @description Ссылка на полис */
      draftPolicyBlankLink?: string | null;
      status?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.ShortProlongation.ShortProlongationStatus"];
      /** @description Ссылка восстановления */
      restoreLink?: string | null;
      policy?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.Field"];
      insurance?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.Field"];
      company?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.Field"];
      payBlock?: components["schemas"]["Sravni.OsagoGateway.Service.Core.Polling.Field"];
    };
    "Sravni.OsagoGateway.Service.Summary.Models.CreateSummaryRequest": {
      /**
       * Format: int32
       * @description id бренда ТС
       */
      brandId?: number;
      /**
       * Format: int32
       * @description год выпуска ТС
       */
      year?: number;
      /**
       * Format: int32
       * @description id модели ТС
       */
      modelId?: number;
      /** @description Модификация */
      modification?: string | null;
      /** @description Резидент РФ? */
      isResident?: boolean;
      /** @description канонический id региона регистрации */
      registrationRoute?: string | null;
      /** @description населенный пункт регистрации (необязательно) */
      registration?: string | null;
      /** @description канонический id региона покупки */
      gettingRoute?: string | null;
      /** @description населенный пункт получения (необязательно) */
      getting?: string | null;
      /**
       * Format: int32
       * @description мощность ТС
       */
      enginePower?: number;
      /**
       * Format: int32
       * @description использование в течение года. сколько месяцев (10 и более = год)
       */
      usageMonthsPerYear?: number;
      /** @description Дата начала договора || расчета кбм */
      policyStartDate?: string | null;
      driversInfo?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.DriversInfo"];
      /** @description VIN ТС */
      vin?: string | null;
      /** @description Номер кузова */
      bodyNumber?: string | null;
      /** @description Номер Шасси */
      chassisNumber?: string | null;
      /**
       * Format: int32
       * @description id пользователя в системе сравни.ру
       */
      userId?: number | null;
      owner?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoPerson"];
      insurer?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.OsagoPerson"];
      /** @description Номер автомобиля */
      carNumber?: string | null;
      carDocument?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.CarDocumentInfo"];
      save?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.SaveQuery"];
      utm?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.UtmQuery"];
      partner?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PartnerQuery"];
      promotionQuery?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.PromotionQuery"];
      /** @description Для кастомной прометки: например (Основной веб-сайт, новый сайт, мобилка и т.д.) */
      platform?: string | null;
      /** @description Пролонгация? */
      isProlongation?: boolean;
      /**
       * Format: int32
       * @description Аккаунт под которым выполняется сохранение в СК
       */
      accountPriority?: number | null;
      /** @description Метка контекстной рекламы */
      clid?: string | null;
      /** @description Опциональный ключ пролонгации */
      prolongationKey?: string | null;
      vehicleCategory?: components["schemas"]["Sravni.OsagoGateway.Service.ExternalDependencies.Osago.Models.VehicleCategory"];
    };
    "Sravni.OsagoGateway.Service.Summary.Models.CreateSummaryResult": {
      hash?: string | null;
    };
    /** @enum {string} */
    "Sravni.OsagoPromo.Shared.Enums.BenefitType": "percent" | "amount";
    /** @enum {string} */
    "Sravni.OsagoPromo.Shared.Enums.ProductType": "osago";
    /** @enum {string} */
    "Sravni.OsagoPromo.Shared.Enums.PromoPartner": "mir" | "pcO10Moscow" | "pcO7MR" | "miR2" | "dodo" | "timeLimitedCashback" | "casH10" | "flashSale1" | "halvaCardPromo" | "vskSoglasieDobor" | "newYearGift" | "newYearGiftPolicy" | "promokodus";
    "Sravni.OsagoPromo.Shared.Models.PromoGeo": {
      route?: string | null;
    };
    "Sravni.OsagoPromo.Shared.Models.PromoOrganisation": {
      organisation?: string | null;
      /** Format: double */
      benefitValue?: number;
      isApplicableToZeroIncome?: boolean;
    };
    "Sravni.XGateway.Shared.Dto.Osago.UtmQuery": {
      medium?: string | null;
      source?: string | null;
      campaign?: string | null;
      content?: string | null;
      term?: string | null;
      uaClientId?: string | null;
      ymClientId?: string | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
