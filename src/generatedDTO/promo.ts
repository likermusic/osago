/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/v1/lottery/policies": {
    /** Получить полисы для участия в лотерее. */
    get: {
      parameters: {
        query?: {
          LotteryName?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LotteryInfo"];
            "application/json": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LotteryInfo"];
            "text/json": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LotteryInfo"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/lottery/policies-by-user-id": {
    /** Получить полисы для участия в лотерее. */
    get: {
      parameters: {
        query?: {
          LotteryName?: string;
          userId?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LotteryInfo"];
            "application/json": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LotteryInfo"];
            "text/json": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LotteryInfo"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/lottery/registered-tickets": {
    /** Получить зарегистрированные билеты. */
    get: {
      parameters: {
        query?: {
          userId?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoPromo.Data.Models.RegisteredLotteryTicket"][];
            "application/json": components["schemas"]["Sravni.OsagoPromo.Data.Models.RegisteredLotteryTicket"][];
            "text/json": components["schemas"]["Sravni.OsagoPromo.Data.Models.RegisteredLotteryTicket"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/lottery/register": {
    /** Регистрация участника в лотерее. */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LotteryRegisterRequest"];
          "text/json": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LotteryRegisterRequest"];
          "application/*+json": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LotteryRegisterRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LotteryRegisterResponse"];
            "application/json": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LotteryRegisterResponse"];
            "text/json": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LotteryRegisterResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LotteryRegisterResponse"];
            "application/json": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LotteryRegisterResponse"];
            "text/json": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LotteryRegisterResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: never;
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/lottery/{id}": {
    /** Получить лотерейный билет по Id. */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoPromo.Data.Models.LotteryTicket"];
            "application/json": components["schemas"]["Sravni.OsagoPromo.Data.Models.LotteryTicket"];
            "text/json": components["schemas"]["Sravni.OsagoPromo.Data.Models.LotteryTicket"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/lottery/manual": {
    /** Получить лотерейные билеты для ручной проверки с пагинацией. */
    get: {
      parameters: {
        query?: {
          lotteryName?: string;
          PageIndex?: number;
          PageSize?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.PagedModel`1[[Sravni.OsagoPromo.Data.Models.LotteryTicket, Sravni.OsagoPromo.Data, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.PagedModel`1[[Sravni.OsagoPromo.Data.Models.LotteryTicket, Sravni.OsagoPromo.Data, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Sravni.Osago.Shared.Dto.BackOffice.PagedModel`1[[Sravni.OsagoPromo.Data.Models.LotteryTicket, Sravni.OsagoPromo.Data, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/lottery/manual/{id}": {
    /** Проставляет признак и отправляет событие в Экспонию для ручной проверки лотерейного билета. */
    patch: {
      parameters: {
        query?: {
          lotteryName?: string;
        };
        path: {
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoPromo.Data.Models.LotteryTicketUpdateModel"];
          "text/json": components["schemas"]["Sravni.OsagoPromo.Data.Models.LotteryTicketUpdateModel"];
          "application/*+json": components["schemas"]["Sravni.OsagoPromo.Data.Models.LotteryTicketUpdateModel"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/lottery/products": {
    /** Получает все доступные типы продуктов. */
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoPromo.Data.Models.ProductTypeModel"][];
            "application/json": components["schemas"]["Sravni.OsagoPromo.Data.Models.ProductTypeModel"][];
            "text/json": components["schemas"]["Sravni.OsagoPromo.Data.Models.ProductTypeModel"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/lottery/loadprizes/{lotteryCodeName}": {
    /** Загружает результаты розыгрыша в БД из файла */
    post: {
      parameters: {
        path: {
          lotteryCodeName: string;
        };
      };
      requestBody?: {
        content: {
          "multipart/form-data": {
            /** Format: binary */
            file?: string;
          };
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": string[];
            "application/json": string[];
            "text/json": string[];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/lottery/checktickets": {
    /** Проверяет, выиграл ли пользователь */
    get: {
      parameters: {
        query?: {
          lotteryName?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LotteryResult"];
            "application/json": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LotteryResult"];
            "text/json": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LotteryResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Microsoft.AspNetCore.Mvc.ProblemDetails"];
            "application/json": components["schemas"]["Microsoft.AspNetCore.Mvc.ProblemDetails"];
            "text/json": components["schemas"]["Microsoft.AspNetCore.Mvc.ProblemDetails"];
          };
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/promo/link": {
    /** Привязывает полученный промокод к заказу при прохождении всех валидаций. */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LinkPromoCodeRequest"];
          "text/json": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LinkPromoCodeRequest"];
          "application/*+json": components["schemas"]["Sravni.OsagoPromo.Shared.Models.LinkPromoCodeRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/promo/check": {
    /** Проверяет введенный промокод */
    post: {
      parameters: {
        query?: {
          code?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoPromo.Shared.Models.PromoCodeValidationResult"];
            "application/json": components["schemas"]["Sravni.OsagoPromo.Shared.Models.PromoCodeValidationResult"];
            "text/json": components["schemas"]["Sravni.OsagoPromo.Shared.Models.PromoCodeValidationResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
  "/v1/promo/info": {
    /** Получает информацию о промокоде */
    get: {
      parameters: {
        query?: {
          code?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Sravni.OsagoPromo.Shared.Models.PromoCodeInfo"];
            "application/json": components["schemas"]["Sravni.OsagoPromo.Shared.Models.PromoCodeInfo"];
            "text/json": components["schemas"]["Sravni.OsagoPromo.Shared.Models.PromoCodeInfo"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "application/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
            "text/json": components["schemas"]["Sravni.Micro.Errors.ErrorModel"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    "Microsoft.AspNetCore.Mvc.ProblemDetails": {
      type?: string | null;
      title?: string | null;
      /** Format: int32 */
      status?: number | null;
      detail?: string | null;
      instance?: string | null;
      [key: string]: unknown;
    };
    "Sravni.Micro.Errors.Error": {
      code?: string | null;
      target?: string | null;
      message?: string | null;
      attemptedValue?: string | null;
      details?: components["schemas"]["Sravni.Micro.Errors.Error"][] | null;
    };
    "Sravni.Micro.Errors.ErrorModel": {
      error?: components["schemas"]["Sravni.Micro.Errors.Error"];
    };
    "Sravni.Osago.Shared.Dto.BackOffice.PagedModel`1[[Sravni.OsagoPromo.Data.Models.LotteryTicket, Sravni.OsagoPromo.Data, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Sravni.OsagoPromo.Data.Models.LotteryTicket"][] | null;
      /** Format: int32 */
      pageIndex?: number;
      /** Format: int32 */
      pageSize?: number;
      /** Format: int32 */
      total?: number;
      error?: string | null;
    };
    "Sravni.OsagoPromo.Data.Models.LotteryTicket": {
      /** Format: int64 */
      id?: number;
      /** Format: int32 */
      userId?: number;
      orderId?: string | null;
      phone?: string | null;
      /** Format: date-time */
      dateCreated?: string;
      isRulesAccepted?: boolean;
      isActual?: boolean | null;
      forManualCheck?: boolean;
      policyNumber?: string | null;
      email?: string | null;
      /** Format: int32 */
      lotteryProgramId?: number;
      /** Format: int32 */
      productTypeId?: number;
      /** Format: date-time */
      lastUpdated?: string;
      prize?: string | null;
      productTypeName?: string | null;
      comment?: string | null;
      additionalPhone?: string | null;
      fio?: string | null;
      address?: string | null;
    };
    "Sravni.OsagoPromo.Data.Models.LotteryTicketUpdateModel": {
      isActual?: boolean | null;
      forManualCheck?: boolean | null;
      orderId?: string | null;
      policyNumber?: string | null;
      /** Format: int32 */
      productTypeId?: number | null;
      /** Format: int32 */
      userId?: number | null;
      prize?: string | null;
    };
    "Sravni.OsagoPromo.Data.Models.ProductTypeModel": {
      /** Format: int32 */
      id?: number;
      name?: string | null;
      description?: string | null;
    };
    "Sravni.OsagoPromo.Data.Models.RegisteredLotteryTicket": {
      /** Format: int64 */
      id?: number;
      isActual?: boolean | null;
      policyNumber?: string | null;
      /** Format: int32 */
      lotteryProgramId?: number;
      /** Format: int32 */
      productTypeId?: number;
      productTypeName?: string | null;
      lotteryProgramName?: string | null;
      lotteryProgramDescription?: string | null;
    };
    /** @enum {string} */
    "Sravni.OsagoPromo.Shared.Enums.BenefitType": "percent" | "amount";
    /** @enum {string} */
    "Sravni.OsagoPromo.Shared.Enums.ProductType": "osago";
    /** @enum {string} */
    "Sravni.OsagoPromo.Shared.Enums.PromoCodeStatus": "valid" | "notFound" | "activated" | "outDated";
    /** @enum {string} */
    "Sravni.OsagoPromo.Shared.Enums.PromoPartner": "mir" | "pcO10Moscow" | "pcO7MR" | "miR2" | "dodo" | "timeLimitedCashback" | "casH10" | "flashSale1" | "halvaCardPromo" | "vskSoglasieDobor" | "newYearGift" | "newYearGiftPolicy" | "promokodus";
    "Sravni.OsagoPromo.Shared.Models.LinkPromoCodeRequest": {
      code?: string | null;
      externalId?: string | null;
      /** Format: date-time */
      orderDate?: string;
      productType?: components["schemas"]["Sravni.OsagoPromo.Shared.Enums.ProductType"];
    };
    "Sravni.OsagoPromo.Shared.Models.LotteryInfo": {
      policies?: components["schemas"]["Sravni.OsagoPromo.Shared.Models.PolicyForLottery"][] | null;
      /** Format: int32 */
      maxTicketsQuantityPerUser?: number;
      isMaxCountOfTicketsRegistered?: boolean;
    };
    "Sravni.OsagoPromo.Shared.Models.LotteryRegisterRequest": {
      lotteryName?: string | null;
      productType?: string | null;
      policyNumber?: string | null;
      orderId?: string | null;
      phone?: string | null;
      isRulesAccepted?: boolean;
    };
    "Sravni.OsagoPromo.Shared.Models.LotteryRegisterResponse": {
      /** Format: int64 */
      id?: number | null;
      error?: string | null;
    };
    "Sravni.OsagoPromo.Shared.Models.LotteryResult": {
      isMember?: boolean;
      isWinner?: boolean;
      prize?: string | null;
    };
    "Sravni.OsagoPromo.Shared.Models.PolicyForLottery": {
      productType?: string | null;
      policyNumber?: string | null;
      orderId?: string | null;
      isRegistered?: boolean | null;
    };
    "Sravni.OsagoPromo.Shared.Models.PromoCodeInfo": {
      code?: string | null;
      /** Format: int32 */
      activationCount?: number;
      productType?: components["schemas"]["Sravni.OsagoPromo.Shared.Enums.ProductType"];
      /** Format: date-time */
      dateCreate?: string;
      isActive?: boolean;
      name?: string | null;
      description?: string | null;
      promoPartner?: components["schemas"]["Sravni.OsagoPromo.Shared.Enums.PromoPartner"];
      /** Format: double */
      benefitValue?: number;
      benefitType?: components["schemas"]["Sravni.OsagoPromo.Shared.Enums.BenefitType"];
      /** Format: date-time */
      dateFrom?: string;
      /** Format: date-time */
      expirationDate?: string;
      /** Format: int32 */
      programId?: number;
      programIsExtended?: boolean;
      geos?: components["schemas"]["Sravni.OsagoPromo.Shared.Models.PromoGeo"][] | null;
      organisations?: components["schemas"]["Sravni.OsagoPromo.Shared.Models.PromoOrganisation"][] | null;
    };
    "Sravni.OsagoPromo.Shared.Models.PromoCodeValidationResult": {
      promoCode?: string | null;
      isActive?: boolean;
      error?: string | null;
      status?: components["schemas"]["Sravni.OsagoPromo.Shared.Enums.PromoCodeStatus"];
    };
    "Sravni.OsagoPromo.Shared.Models.PromoGeo": {
      route?: string | null;
    };
    "Sravni.OsagoPromo.Shared.Models.PromoOrganisation": {
      organisation?: string | null;
      /** Format: double */
      benefitValue?: number;
      isApplicableToZeroIncome?: boolean;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
